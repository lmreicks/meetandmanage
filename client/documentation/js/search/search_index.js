var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiCreateGroup.html",[0,0.362,1,2.287]],["body/interfaces/ApiCreateGroup.html",[0,0.592,1,3.743,2,0.191,3,0.191,4,0.191,5,3.202,6,0.257,7,0.807,8,1.003,9,3.277,10,2.159,11,1.025,12,1.777,13,0.482,14,0.026,15,0.43,16,3.782,17,1.986,18,2.47,19,3.782,20,2.076,21,3.743,22,3.782,23,0.431,24,1.47,25,2.226,26,1.56,27,0.21,28,1.687,29,1.955,30,2.076,31,1.207,32,1.207,33,2.535,34,3.202,35,3.202,36,1.131,37,0.018,38,0.018]],["title/interfaces/ApiCreateUser.html",[0,0.362,39,2.287]],["body/interfaces/ApiCreateUser.html",[0,0.64,2,0.225,3,0.225,4,0.225,6,0.302,7,0.896,11,1.071,12,1.856,13,0.478,14,0.025,15,0.427,18,1.854,24,1.732,27,0.233,29,2.303,30,2.306,32,1.422,37,0.02,38,0.02,39,4.044,40,3.772,41,4.437,42,4.455,43,4.455]],["title/interfaces/ApiEvent.html",[0,0.362,25,1.522]],["body/interfaces/ApiEvent.html",[0,0.571,2,0.152,3,0.152,4,0.152,6,0.204,7,0.689,9,1.553,10,1.451,12,1.742,13,0.259,14,0.026,15,0.231,17,1.481,18,1.773,20,1.249,21,2.013,23,0.368,24,1.656,25,1.901,26,1.703,27,0.227,28,1.34,29,2.203,30,2.584,32,2.017,36,0.898,37,0.015,38,0.015,44,2.24,45,4.193,46,3.003,47,2.543,48,3.693,49,2.24,50,2.013,51,2.539,52,1.275,53,3.178,54,3.608,55,2.543,56,2.543,57,2.543,58,2.543,59,3.178,60,2.856,61,2.543,62,3.178,63,2.543,64,2.374,65,2.543,66,2.543,67,2.543,68,1.451,69,2.24,70,3.608,71,2.543,72,2.543,73,2.543,74,3.608,75,2.543,76,3.608,77,2.543,78,2.013,79,2.543,80,3.608,81,1.832,82,2.543,83,2.543,84,2.543,85,3.608,86,2.543,87,4.019,88,2.543,89,3.178,90,2.543,91,2.24,92,2.24,93,2.24,94,2.24,95,2.543]],["title/interfaces/ApiGroup.html",[0,0.362,28,1.522]],["body/interfaces/ApiGroup.html",[0,0.589,1,3.723,2,0.189,3,0.189,4,0.189,5,3.168,6,0.254,7,0.801,8,0.996,9,2.561,10,1.687,11,0.801,12,1.389,13,0.48,14,0.026,15,0.427,17,1.982,18,2.061,20,1.557,21,3.723,23,0.428,24,1.454,25,2.637,26,1.74,27,0.209,28,2.21,29,2.561,30,2.629,31,1.581,32,1.773,33,3.321,34,4.195,35,5.006,36,1.662,37,0.018,38,0.018,96,3.741,97,3.741,98,3.741]],["title/interfaces/ApiTodo.html",[0,0.362,99,1.911]],["body/interfaces/ApiTodo.html",[0,0.516,2,0.184,3,0.184,4,0.184,6,0.247,7,0.787,8,1.176,9,3.311,12,1.759,13,0.526,14,0.025,15,0.469,27,0.205,30,2.61,32,1.75,33,3.263,36,1.64,37,0.017,38,0.017,51,2.172,53,4.776,64,3.192,99,3.07,100,3.085,101,6.405,102,3.644,103,2.077,104,3.263,105,4.868,106,3.644,107,3.644,108,3.644,109,3.644,110,2.717,111,3.085,112,0.897,113,1.884]],["title/interfaces/ApiUser.html",[0,0.362,18,1.42]],["body/interfaces/ApiUser.html",[0,0.646,2,0.23,3,0.23,4,0.23,6,0.309,7,0.909,11,0.909,12,1.576,13,0.393,14,0.025,15,0.351,18,2.338,24,2.185,27,0.237,29,2.906,30,2.769,32,1.945,37,0.02,38,0.02,39,4.085,40,3.858,41,3.767,114,4.557]],["title/components/AppComponent.html",[115,0.686,116,1.241]],["body/components/AppComponent.html",[2,0.169,3,0.169,4,0.169,8,0.671,10,1.138,11,0.848,13,0.288,14,0.025,15,0.257,17,0.999,23,0.453,26,0.878,27,0.141,31,1.066,37,0.016,38,0.016,52,0.999,68,1.138,103,1.066,115,1.189,116,2.053,117,1.39,118,1.49,119,1.49,120,3.34,121,1.49,122,4.589,123,5.645,124,2.681,125,2.2,126,4.589,127,1.909,128,4.589,129,0.878,130,3.34,131,3.161,132,3.198,133,2.918,134,3.34,135,0.878,136,0.54,137,2.491,138,2.491,139,1.87,140,0.582,141,1.601,142,1.601,143,1.215,144,2.047,145,2.047,146,2.047,147,2.518,148,1.49,149,1.49,150,1.298,151,1.49,152,1.49,153,1.298,154,1.49,155,1.215,156,2.692,157,1.49,158,1.215,159,1.49,160,1.298,161,1.49,162,1.49,163,1.215,164,1.49,165,1.215,166,1.49,167,1.298,168,1.49,169,1.215,170,1.49,171,1.215,172,1.49,173,1.215,174,1.49,175,1.298,176,1.49,177,1.215,178,1.49,179,1.215,180,1.49,181,1.215,182,1.49,183,1.298,184,1.49]],["title/modules/AppModule.html",[185,1.764,186,2.287]],["body/modules/AppModule.html",[2,0.106,3,0.106,4,0.106,14,0.026,23,0.589,27,0.138,37,0.012,38,0.012,116,2.209,131,2.681,133,2.681,136,0.341,137,1.57,138,1.57,139,1.179,140,0.367,143,0.766,150,2.016,153,2.016,160,2.016,165,1.886,169,1.886,171,1.886,173,1.886,177,1.886,185,1.691,186,4.62,187,1.284,188,2.992,189,3.164,190,3.284,191,1.782,192,1.782,193,1.782,194,1.782,195,1.782,196,3.164,197,3.476,198,4.391,199,3.476,200,3.164,201,3.476,202,2.193,203,1.57,204,1.57,205,2.105,206,2.77,207,1.57,208,1.411,209,2.77,210,1.782,211,2.77,212,1.411,213,1.411,214,2.77,215,2.77,216,1.088,217,3.271,218,2.105,219,2.105,220,2.77,221,1.832,222,2.439,223,2.439,224,1.088,225,2.105,226,2.105,227,2.105,228,2.105,229,2.105,230,1.782,231,2.439,232,2.105,233,2.105,234,2.439,235,2.105,236,2.105,237,2.105,238,2.105,239,2.105,240,2.105,241,1.782,242,1.009,243,3.271,244,2.105,245,2.105,246,2.105,247,2.439,248,2.105,249,2.105,250,3.271,251,2.105,252,2.105,253,1.996,254,2.105,255,2.105,256,1.782,257,2.105,258,2.105,259,1.57,260,2.105,261,2.105,262,1.782,263,2.105,264,2.105,265,3.271,266,2.105,267,2.105,268,2.105,269,2.77,270,1.782,271,2.105,272,1.782,273,2.105,274,2.105,275,2.105,276,2.105,277,1.782,278,2.105,279,2.105,280,2.105,281,2.105,282,2.105,283,1.782,284,2.105,285,2.105,286,1.782,287,1.782]],["title/injectables/AuthGuard.html",[197,2.287,288,0.686]],["body/injectables/AuthGuard.html",[2,0.197,3,0.197,4,0.197,6,0.264,7,0.823,8,0.783,11,0.63,13,0.489,14,0.025,15,0.462,23,0.489,27,0.164,36,1.522,37,0.018,38,0.018,112,1.394,113,2.015,129,1.024,131,3.305,135,1.024,136,0.63,140,0.679,197,3.411,242,1.869,288,1.139,289,6.233,290,3.898,291,2.267,292,6.233,293,4.167,294,1.624,295,6.392,296,3.898,297,3.898,298,3.898,299,5.089,300,3.898,301,2.613,302,2.906,303,3.898,304,3.3,305,1.869]],["title/injectables/AuthService.html",[131,1.764,288,0.686]],["body/injectables/AuthService.html",[2,0.141,3,0.141,4,0.141,6,0.19,7,0.654,8,0.956,11,0.769,12,1.134,13,0.478,14,0.026,15,0.444,23,0.514,27,0.118,33,1.873,36,1.21,37,0.015,38,0.015,41,1.873,59,3.547,112,1.499,129,0.734,131,2.092,132,2.902,133,2.696,135,1.25,136,0.452,139,1.564,140,0.487,142,2.653,221,3.332,224,1.444,242,1.339,288,0.956,291,2.323,293,3.897,294,1.291,302,2.083,304,2.365,306,2.794,307,5.214,308,4.027,309,5.214,310,4.046,311,1.873,312,2.794,313,2.794,314,3.425,315,3.425,316,2.794,317,2.365,318,4.756,319,2.794,320,2.5,321,4.046,322,2.794,323,2.794,324,2.794,325,1.873,326,1.704,327,2.083,328,2.083,329,2.365,330,2.365,331,2.794,332,4.046,333,3.425,334,1.873,335,2.794,336,4.046,337,1.873,338,2.794,339,4.027,340,2.794,341,2.794,342,2.794,343,2.794,344,2.794,345,2.794,346,2.794,347,2.794,348,2.794,349,2.794,350,2.794,351,2.794,352,4.046,353,2.794,354,2.794,355,2.794,356,2.794,357,2.365,358,2.794,359,2.794,360,2.794,361,1.564,362,2.365,363,2.365,364,2.794,365,2.794,366,1.704]],["title/components/DashboardComponent.html",[115,0.686,155,1.241]],["body/components/DashboardComponent.html",[2,0.173,3,0.173,4,0.173,8,0.689,10,1.168,11,0.86,13,0.296,14,0.025,15,0.264,17,1.026,23,0.459,26,0.901,27,0.144,31,1.095,37,0.017,38,0.017,52,1.026,68,1.168,103,1.095,115,1.2,116,1.247,117,1.427,118,1.53,119,1.53,121,1.53,124,2.689,125,2.241,127,1.944,129,0.901,135,0.901,136,0.555,140,0.598,141,1.644,143,1.247,144,2.085,145,2.085,146,2.085,147,2.546,148,1.53,149,1.53,150,1.333,151,1.53,152,1.53,153,1.333,154,1.53,155,2.076,156,2.764,157,1.53,158,1.247,159,1.53,160,1.333,161,1.53,162,1.53,163,1.247,164,1.53,165,1.247,166,1.53,167,1.333,168,1.53,169,1.247,170,1.53,171,1.247,172,1.53,173,1.247,174,1.53,175,1.333,176,1.53,177,1.247,178,1.53,179,1.247,180,1.53,181,1.247,182,1.53,183,1.333,184,1.53,242,1.644,293,3.76,311,2.299,367,3.43,368,3.485,369,4.673,370,4.673,371,3.43,372,2.851]],["title/modules/DashboardModule.html",[185,1.764,196,2.082]],["body/modules/DashboardModule.html",[2,0.136,3,0.136,4,0.136,14,0.026,23,0.583,26,0.709,27,0.216,37,0.014,38,0.014,103,1.259,136,0.436,140,0.47,143,0.981,155,2.408,158,2.073,163,2.073,167,2.215,175,2.215,179,2.073,181,2.073,183,2.215,185,2.039,187,1.645,188,3.476,189,3.329,190,3.437,196,4.195,202,2.643,203,2.011,204,2.011,206,3.339,207,2.011,208,1.808,209,3.339,210,2.283,212,1.808,213,1.808,214,3.339,215,3.339,216,1.394,220,3.339,221,2.208,222,2.941,223,2.941,224,1.394,230,2.283,231,2.011,234,2.941,241,2.283,242,1.293,272,2.283,277,2.283,286,2.283,287,2.283,373,2.283,374,2.283,375,2.283,376,2.283,377,3.191,378,3.477,379,2.697,380,2.697,381,2.697,382,2.697,383,2.697,384,2.283,385,2.697,386,2.697,387,2.697,388,2.697,389,2.697,390,2.011,391,2.697,392,2.941,393,2.697,394,2.283,395,2.697]],["title/injectables/DashboardService.html",[288,0.686,377,1.911]],["body/injectables/DashboardService.html",[2,0.206,3,0.206,4,0.206,6,0.278,7,0.849,8,0.822,11,0.662,13,0.453,14,0.025,15,0.446,23,0.501,27,0.172,37,0.019,38,0.019,64,2.518,112,1.292,129,1.524,135,1.075,136,0.662,140,0.713,288,1.165,291,2.355,294,1.676,327,3.051,361,3.427,372,3.204,377,2.941,396,4.091,397,5.251,398,5.251,399,5.251,400,4.719,401,4.091,402,6.476,403,2.496,404,2.291,405,2.342,406,4.091,407,4.091]],["title/interfaces/DateObject.html",[0,0.362,408,2.287]],["body/interfaces/DateObject.html",[0,0.542,2,0.198,3,0.198,4,0.198,6,0.266,7,0.826,8,1.374,12,1.795,13,0.563,14,0.024,15,0.502,27,0.165,32,1.814,36,2.045,37,0.018,38,0.018,104,4.036,361,3.371,362,5.098,408,3.424,409,3.919,410,6.021,411,6.021,412,6.021,413,5.098,414,3.919,415,3.919,416,3.919,417,3.919,418,3.919,419,3.919,420,3.919]],["title/interfaces/Day.html",[0,0.362,51,1.522]],["body/interfaces/Day.html",[0,0.604,2,0.235,3,0.235,4,0.235,6,0.316,7,0.922,13,0.492,14,0.025,15,0.439,23,0.492,25,2.861,26,1.685,27,0.196,37,0.02,38,0.02,51,2.985,408,4.299,421,4.663,422,4.663,423,4.663,424,4.663,425,3.477]],["title/interfaces/EventElement.html",[0,0.362,426,2.889]],["body/interfaces/EventElement.html",[0,0.263,2,0.125,3,0.125,4,0.125,6,0.168,7,0.6,12,0.696,13,0.383,14,0.026,15,0.342,23,0.509,25,1.98,26,1.453,27,0.105,32,1.572,36,0.742,37,0.013,38,0.013,50,1.664,51,2.351,60,2.486,62,2.765,64,2.129,78,2.976,89,3.673,99,1.39,104,1.664,112,0.912,113,1.283,115,0.892,124,0.965,125,1.19,127,1.033,132,1.514,133,1.917,136,0.401,139,1.39,140,0.432,141,1.19,142,2.361,156,1.033,158,1.349,291,2.264,305,1.778,320,2.129,326,1.514,361,2.486,372,2.262,377,2.486,390,1.851,400,2.765,408,2.486,413,2.101,425,1.851,426,3.759,427,2.101,428,5.271,429,4.925,430,2.482,431,2.482,432,2.482,433,2.101,434,2.482,435,2.482,436,1.851,437,2.482,438,2.482,439,3.708,440,2.482,441,2.482,442,2.482,443,2.482,444,3.005,445,2.482,446,2.482,447,2.482,448,1.851,449,3.708,450,2.482,451,2.482,452,2.482,453,2.482,454,2.482,455,2.482,456,2.482,457,2.482,458,2.482,459,4.44,460,4.44,461,3.708,462,2.482,463,3.708,464,3.708,465,2.482,466,2.482,467,2.482,468,2.482,469,2.482,470,2.482,471,2.482,472,2.482,473,2.482,474,2.482,475,2.482,476,2.482,477,2.482,478,2.482,479,4.44,480,3.708,481,2.482,482,2.076,483,2.482,484,2.482,485,3.708,486,2.482,487,2.482,488,2.482,489,2.482,490,2.482,491,2.482]],["title/components/EventPopoverComponent.html",[115,0.686,163,1.241]],["body/components/EventPopoverComponent.html",[2,0.169,3,0.169,4,0.169,6,0.227,10,1.138,11,0.742,13,0.288,14,0.024,15,0.353,17,0.999,23,0.396,25,2.339,26,1.72,27,0.141,31,1.066,37,0.016,38,0.016,52,0.999,68,1.138,103,1.066,115,1.189,116,1.215,117,1.39,118,1.49,119,1.49,121,1.49,124,2.681,125,2.2,127,1.909,129,1.377,136,0.54,140,0.582,143,1.215,144,2.047,145,2.047,146,2.047,147,2.518,148,1.49,149,1.49,150,1.298,151,1.49,152,1.49,153,1.298,154,1.49,155,1.215,156,2.751,157,1.49,158,1.215,159,1.49,160,1.298,161,1.49,162,1.49,163,2.053,164,1.49,165,1.215,166,1.49,167,1.298,168,1.49,169,1.215,170,1.49,171,1.215,172,1.49,173,1.215,174,1.49,175,1.298,176,1.49,177,1.215,178,1.49,179,1.215,180,1.49,181,1.215,182,1.49,183,1.298,184,1.49,384,4.439,425,2.491,492,5.243,493,3.34,494,4.589,495,4.589,496,4.589,497,3.514,498,4.589,499,3.34,500,4.589]],["title/components/GroupSelectForm.html",[115,0.686,165,1.241]],["body/components/GroupSelectForm.html",[2,0.105,3,0.105,4,0.105,6,0.142,7,0.525,8,0.419,10,0.711,11,0.645,13,0.446,14,0.025,15,0.429,17,2.012,20,1.351,23,0.344,24,1.263,26,1.183,27,0.088,28,2.406,31,0.666,36,1.459,37,0.012,38,0.012,52,0.624,68,0.711,81,2.746,103,0.666,104,2.177,112,0.799,113,2.062,115,0.98,116,0.759,117,0.868,118,0.931,119,0.931,121,0.931,124,2.517,127,1.351,129,1.048,135,0.548,136,0.337,140,0.364,143,0.759,144,1.449,145,2.008,146,1.449,147,2.008,148,0.931,149,0.931,150,0.811,151,0.931,152,0.931,153,0.811,154,0.931,155,0.759,156,2.384,157,0.931,158,0.759,159,0.931,160,0.811,161,0.931,162,0.931,163,0.759,164,0.931,165,1.637,166,0.931,167,0.811,168,0.931,169,0.759,170,0.931,171,0.759,172,0.931,173,0.759,174,0.931,175,0.811,176,0.931,177,0.759,178,0.931,179,0.759,180,0.931,181,0.759,182,0.931,183,0.811,184,0.931,216,1.079,269,5.619,270,4.852,291,1.879,294,1.037,305,1.557,320,2.158,403,1.273,404,2.233,405,1.779,444,1.273,482,1.168,497,2.674,501,5.73,502,2.086,503,3.248,504,4.502,505,4.502,506,3.248,507,4.502,508,3.357,509,3.377,510,3.248,511,3.248,512,2.974,513,2.086,514,3.248,515,2.086,516,3.248,517,3.357,518,2.086,519,3.248,520,2.086,521,3.248,522,3.248,523,2.086,524,3.248,525,3.018,526,3.357,527,1.767,528,2.422,529,2.086,530,3.248,531,3.248,532,3.248,533,3.248,534,1.767,535,2.086,536,3.248,537,2.086,538,1.767,539,2.086,540,2.75,541,3.989,542,1.767,543,2.974,544,1.079,545,2.086,546,2.75]],["title/injectables/GroupService.html",[201,2.287,288,0.686]],["body/injectables/GroupService.html",[1,3.827,2,0.153,3,0.153,4,0.153,6,0.206,8,1,11,0.805,13,0.43,14,0.026,15,0.416,17,1.961,23,0.493,27,0.128,28,1.912,30,2.07,31,1.727,32,1.727,37,0.015,38,0.015,112,1.5,129,0.796,132,3.036,133,2.797,135,1.307,136,0.49,138,2.259,139,1.696,140,0.528,141,1.452,142,1.452,201,2.874,221,3.319,224,1.566,288,1,291,2.303,294,1.368,325,2.031,326,1.848,328,4.035,334,2.031,337,3.335,405,1.912,534,2.565,544,2.216,547,3.029,548,4.581,549,2.259,550,3.029,551,4.287,552,3.029,553,3.197,554,4.421,555,4.421,556,3.63,557,3.029,558,3.627,559,5.41,560,3.029,561,3.197,562,3.711,563,3.711,564,3.63,565,3.029]],["title/interfaces/Location.html",[0,0.362,68,1.162]],["body/interfaces/Location.html",[0,0.554,2,0.123,3,0.123,4,0.123,6,0.165,7,0.59,12,1.229,13,0.421,14,0.026,15,0.337,23,0.421,27,0.185,32,1.751,36,1.092,37,0.018,38,0.013,68,1.779,69,4.244,112,0.898,115,0.734,117,1.011,124,0.945,129,0.638,136,0.393,140,0.423,142,2.729,169,1.328,190,2.447,202,1.629,216,1.256,259,1.812,262,4.127,283,3.091,291,0.884,301,1.629,305,1.165,320,1.75,366,1.483,404,2.455,405,1.628,444,2.227,448,1.812,497,2.939,508,2.722,517,3.269,525,1.629,526,2.722,528,1.812,566,4.874,567,2.43,568,5.691,569,5.691,570,2.43,571,2.43,572,2.43,573,4.384,574,3.65,575,5.224,576,3.65,577,2.43,578,3.65,579,1.483,580,3.65,581,2.43,582,2.43,583,2.43,584,2.43,585,2.43,586,2.43,587,2.43,588,2.43,589,2.43,590,2.43,591,3.091,592,5.224,593,4.874,594,2.43,595,2.43,596,2.43,597,2.43,598,2.43,599,3.65,600,2.43,601,2.43,602,3.65,603,2.43,604,2.43,605,2.43,606,2.43,607,2.43,608,2.43,609,2.43,610,2.43,611,2.43,612,3.65,613,2.058,614,3.65,615,2.43,616,2.43,617,2.43,618,2.43,619,2.43,620,2.058,621,2.43,622,2.43,623,2.43,624,2.43,625,2.43,626,2.43,627,2.43,628,2.43,629,3.65,630,2.43,631,2.43,632,2.43,633,3.65,634,2.43,635,2.43,636,2.43,637,2.43]],["title/components/LoginComponent.html",[115,0.686,171,1.241]],["body/components/LoginComponent.html",[2,0.119,3,0.119,4,0.119,6,0.16,7,0.578,8,0.718,10,0.804,11,0.777,12,1.627,13,0.468,14,0.025,15,0.37,17,0.706,23,0.415,24,1.388,26,0.62,27,0.099,31,0.753,36,1.437,37,0.013,38,0.013,41,3.982,52,0.706,68,0.804,81,2.179,103,0.753,112,0.879,115,1.037,116,0.859,117,0.982,118,1.053,119,1.053,121,1.053,124,2.565,125,1.712,127,1.486,129,0.62,131,2.914,135,0.938,136,0.382,137,1.76,140,0.411,142,1.712,143,0.859,144,1.593,145,1.593,146,1.593,147,2.142,148,1.053,149,1.053,150,0.918,151,1.053,152,1.053,153,0.918,154,1.053,155,0.859,156,2.56,157,1.053,158,0.859,159,1.053,160,0.918,161,1.053,162,1.053,163,0.859,164,1.053,165,0.859,166,1.053,167,0.918,168,1.053,169,0.859,170,1.053,171,1.747,172,1.053,173,0.859,174,1.053,175,0.918,176,1.053,177,0.859,178,1.053,179,0.859,180,1.053,181,0.859,182,1.053,183,0.918,184,1.053,216,1.22,242,1.132,291,1.876,293,3.754,294,1.14,302,1.76,308,4.914,311,1.582,314,3.024,315,3.024,317,3.024,320,1.712,333,5.03,339,1.999,368,2.663,512,3.582,544,1.846,553,2.663,620,3.024,638,2.361,639,3.571,640,3.571,641,4.803,642,4.308,643,4.803,644,3.571,645,5.941,646,2.361,647,3.571,648,3.571,649,3.571,650,2.361,651,2.361,652,2.361,653,3.571,654,2.361,655,2.361,656,2.361,657,2.361,658,2.361,659,2.361,660,4.803]],["title/components/MemberFormComponent.html",[115,0.686,173,1.241]],["body/components/MemberFormComponent.html",[2,0.127,3,0.127,4,0.127,6,0.171,7,0.608,8,0.508,10,1.964,11,0.726,13,0.481,14,0.025,15,0.456,17,0.756,18,2.316,23,0.429,24,1.932,26,0.987,27,0.106,31,0.806,36,1.342,37,0.014,38,0.014,52,0.756,68,0.861,81,2.293,103,0.806,112,0.925,113,2.32,115,1.067,116,0.919,117,1.051,118,1.127,119,1.127,121,1.127,124,2.59,127,1.563,129,1.179,135,0.664,136,0.409,140,0.44,143,0.919,144,1.676,145,1.676,146,1.676,147,2.216,148,1.127,149,1.127,150,0.982,151,1.127,152,1.127,153,0.982,154,1.127,155,0.919,156,2.518,157,1.127,158,0.919,159,1.127,160,0.982,161,1.127,162,1.127,163,0.919,164,1.127,165,0.919,166,1.127,167,0.982,168,1.127,169,0.919,170,1.127,171,0.919,172,1.127,173,1.807,174,1.127,175,0.982,176,1.127,177,0.919,178,1.127,179,0.919,180,1.127,181,0.919,182,1.127,183,0.982,184,1.127,200,1.541,216,1.306,291,2.025,294,1.199,305,1.802,320,2.382,403,1.541,404,1.415,405,1.127,444,1.541,482,1.415,497,3.008,508,3.705,509,3.799,512,3.346,517,3.705,526,3.705,527,2.139,528,2.802,538,2.139,540,3.182,542,2.139,543,3.346,661,2.527,662,3.758,663,4.969,664,4.969,665,3.758,666,4.969,667,3.758,668,2.527,669,2.527,670,2.527,671,3.758,672,2.527,673,2.527,674,2.527,675,2.527,676,2.139,677,2.527,678,2.527,679,2.527,680,2.527,681,2.527,682,4.487,683,2.527,684,2.527,685,3.758,686,3.758]],["title/interfaces/Month.html",[0,0.362,687,2.545]],["body/interfaces/Month.html",[0,0.577,2,0.219,3,0.219,4,0.219,6,0.294,7,0.881,11,1.011,12,1.87,13,0.514,14,0.025,15,0.458,23,0.374,27,0.229,37,0.02,38,0.02,52,2.018,579,2.643,687,4.442,688,4.331,689,5.291,690,4.331,691,4.331,692,4.331,693,4.331,694,4.331,695,4.331,696,4.331,697,4.331,698,4.331,699,4.331,700,4.331,701,4.331,702,4.331,703,4.331]],["title/injectables/NgbDateNativeAdapter.html",[247,2.545,288,0.686]],["body/injectables/NgbDateNativeAdapter.html",[2,0.199,3,0.199,4,0.199,6,0.268,8,1.032,11,0.831,13,0.443,14,0.025,15,0.395,23,0.443,27,0.166,29,2.043,37,0.018,38,0.018,51,1.763,64,3.21,112,1.486,135,1.349,136,0.639,140,0.689,189,2.411,211,4.349,212,2.649,213,2.649,247,3.83,288,1.147,294,1.639,366,3.133,405,1.763,482,2.876,687,2.947,704,5.705,705,3.953,706,5.136,707,5.136,708,5.136,709,3.953,710,6.417,711,5.136,712,3.953,713,5.136,714,3.953,715,3.953,716,3.953,717,3.953,718,3.953,719,3.953]],["title/components/NotFoundComponent.html",[115,0.686,177,1.241]],["body/components/NotFoundComponent.html",[2,0.181,3,0.181,4,0.181,10,1.219,11,0.778,14,0.025,17,1.071,23,0.309,26,0.94,27,0.151,31,1.142,37,0.017,38,0.017,52,1.071,68,1.219,103,1.142,115,1.218,116,1.302,117,1.489,118,1.596,119,1.596,121,1.596,124,2.701,125,2.306,127,2.001,136,0.579,140,0.624,143,1.302,144,2.145,145,2.145,146,2.145,147,2.591,148,1.596,149,1.596,150,1.391,151,1.596,152,1.596,153,1.391,154,1.596,155,1.302,156,2.732,157,1.596,158,1.302,159,1.596,160,1.391,161,1.596,162,1.596,163,1.302,164,1.596,165,1.302,166,1.596,167,1.391,168,1.596,169,1.302,170,1.596,171,1.302,172,1.596,173,1.302,174,1.596,175,1.391,176,1.596,177,2.113,178,1.596,179,1.302,180,1.596,181,1.302,182,1.596,183,1.391,184,1.596,256,3.03,357,4.072,368,3.587,543,4.332,720,3.579,721,3.579,722,4.81,723,4.81,724,4.81]],["title/interfaces/PayloadModel.html",[0,0.362,725,2.889]],["body/interfaces/PayloadModel.html",[0,0.523,2,0.188,3,0.188,4,0.188,6,0.253,7,0.799,13,0.509,14,0.025,15,0.454,17,1.926,18,2.455,20,2.625,23,0.509,24,2.652,25,2.632,26,1.692,27,0.157,28,2.632,37,0.018,38,0.018,99,3.304,103,2.055,361,3.661,363,4.996,725,4.18,726,3.722,727,3.722,728,3.722,729,3.722,730,3.722]],["title/interfaces/Recurring.html",[0,0.362,87,2.545]],["body/interfaces/Recurring.html",[0,0.562,2,0.146,3,0.146,4,0.146,6,0.196,7,0.671,9,1.495,10,1.413,12,1.725,13,0.358,14,0.026,15,0.319,17,1.451,18,1.725,20,1.203,21,1.938,23,0.358,24,1.612,25,1.29,26,1.67,27,0.223,28,1.29,29,1.495,30,2.204,32,2.074,36,0.865,37,0.015,38,0.015,44,2.156,45,3.512,47,2.448,48,3.616,49,2.156,50,1.938,51,2.794,52,1.451,53,3.093,54,4.106,55,2.448,56,2.448,57,2.448,58,2.448,59,3.093,60,2.78,61,2.448,62,3.093,63,2.448,64,2.325,65,2.448,66,2.448,67,2.448,68,1.413,69,2.156,70,3.512,71,2.448,72,2.448,73,2.448,74,3.512,75,2.448,76,3.512,77,2.448,78,1.938,79,2.448,80,3.512,81,1.764,82,2.448,83,2.448,84,2.448,85,3.512,86,2.448,87,4.353,88,3.512,89,3.951,90,3.512,91,3.093,92,3.093,93,3.093,94,3.093,95,4.486,731,2.892,732,2.892]],["title/injectables/SearchFilterPipe.html",[253,2.082,288,0.686]],["body/injectables/SearchFilterPipe.html",[2,0.169,3,0.169,4,0.169,6,0.227,7,0.848,8,0.922,9,2.373,11,0.848,12,1.788,13,0.396,14,0.026,15,0.353,20,2.348,23,0.288,27,0.141,37,0.016,38,0.016,112,1.541,113,2.373,129,0.878,135,1.206,136,0.54,140,0.582,253,2.8,288,1.054,294,1.465,301,2.239,305,1.601,366,2.038,525,3.076,544,2.918,579,2.038,733,4.439,734,2.828,735,4.439,736,5.01,737,3.886,738,4.439,739,3.886,740,5.302,741,5.645,742,2.828,743,5.48,744,3.886,745,3.886,746,2.828,747,3.886,748,3.886,749,3.886,750,2.828,751,2.828,752,2.828,753,2.828,754,2.828,755,2.828,756,2.828,757,2.828]],["title/injectables/SearchFilterPipe-1.html",[253,1.739,288,0.573,482,1.596]],["body/injectables/SearchFilterPipe-1.html",[2,0.169,3,0.169,4,0.169,6,0.227,7,0.848,8,0.922,9,2.373,11,0.848,12,1.788,13,0.396,14,0.026,15,0.353,20,2.348,23,0.288,27,0.141,37,0.016,38,0.016,112,1.541,113,2.373,129,0.878,135,1.206,136,0.54,140,0.582,253,2.8,288,1.054,294,1.465,301,2.239,305,1.601,366,2.038,525,3.076,544,2.918,579,2.038,733,4.439,734,2.828,735,4.439,736,5.01,737,3.886,738,4.439,739,3.886,740,5.302,741,5.645,742,2.828,743,5.48,744,3.886,745,3.886,746,2.828,747,3.886,748,3.886,749,3.886,750,2.828,751,2.828,752,2.828,753,2.828,754,2.828,755,2.828,756,2.828,757,2.828]],["title/injectables/SessionService.html",[199,2.287,288,0.686]],["body/injectables/SessionService.html",[2,0.249,3,0.249,4,0.249,6,0.335,14,0.025,15,0.38,23,0.427,27,0.208,32,1.578,37,0.021,38,0.021,112,1.216,136,0.8,140,0.861,199,3.958,288,1.269,591,4.185,758,4.943,759,5.904,760,4.943,761,4.943,762,4.943]],["title/components/SidebarComponent.html",[115,0.686,179,1.241]],["body/components/SidebarComponent.html",[2,0.128,3,0.128,4,0.128,6,0.172,7,0.61,8,0.757,10,0.864,11,0.805,13,0.43,14,0.025,15,0.444,17,1.871,23,0.43,26,0.666,27,0.107,28,2.575,31,0.809,36,1.591,37,0.014,38,0.014,52,0.759,68,0.864,103,0.809,112,1.309,115,1.069,116,0.922,117,1.055,118,1.131,119,1.131,121,1.131,124,2.592,125,1.807,127,1.568,129,0.666,132,2.743,133,2.574,135,0.99,136,0.41,139,1.42,140,0.442,141,1.216,142,1.216,143,0.922,144,1.681,145,1.681,146,1.681,147,2.22,148,1.131,149,1.131,150,0.986,151,1.131,152,1.131,153,0.986,154,1.131,155,0.922,156,2.602,157,1.131,158,0.922,159,1.131,160,0.986,161,1.131,162,1.131,163,0.922,164,1.131,165,0.922,166,1.131,167,0.986,168,1.131,169,0.922,170,1.131,171,0.922,172,1.131,173,0.922,174,1.131,175,0.986,176,1.131,177,0.922,178,1.131,179,1.81,180,1.131,181,0.922,182,1.131,183,0.986,184,1.131,242,1.216,291,2.368,293,3.401,294,1.203,305,1.807,311,1.7,320,2.672,403,1.547,404,1.42,405,1.681,433,2.147,448,3.712,546,3.191,564,4.215,763,2.536,764,4.978,765,3.768,766,3.768,767,4.978,768,3.768,769,4.978,770,3.768,771,3.768,772,2.536,773,2.536,774,2.536,775,2.536,776,2.536,777,2.536,778,2.536,779,2.536,780,2.536,781,3.768,782,2.536,783,4.497]],["title/components/TodoListComponent.html",[115,0.686,181,1.241]],["body/components/TodoListComponent.html",[2,0.126,3,0.126,4,0.126,6,0.302,7,0.601,8,0.747,10,0.848,11,0.798,13,0.456,14,0.025,15,0.426,17,0.745,20,1.547,23,0.456,26,0.654,27,0.105,31,0.795,37,0.013,38,0.013,52,0.745,64,2.531,68,0.848,99,3.437,103,2.055,112,0.915,115,1.061,116,0.906,117,1.036,118,1.111,119,1.111,121,1.111,124,2.585,125,1.783,127,1.547,129,0.654,135,0.977,136,0.403,140,0.434,141,1.194,142,1.194,143,0.906,144,1.659,145,1.659,146,1.659,147,2.201,148,1.111,149,1.111,150,0.968,151,1.111,152,1.111,153,0.968,154,1.111,155,0.906,156,2.508,157,1.111,158,0.906,159,1.111,160,0.968,161,1.111,162,1.111,163,0.906,164,1.111,165,0.906,166,1.111,167,0.968,168,1.111,169,0.906,170,1.111,171,0.906,172,1.111,173,0.906,174,1.111,175,0.968,176,1.111,177,0.906,178,1.111,179,0.906,180,1.111,181,1.794,182,1.111,183,0.968,184,1.111,291,2.193,294,1.187,320,2.366,372,2.268,377,3.213,378,3.01,390,1.857,392,4.279,394,2.109,400,3.318,403,1.52,404,1.395,436,1.857,444,2.268,482,2.082,784,4.858,785,2.491,786,3.718,787,3.718,788,4.934,789,4.178,790,3.148,791,2.491,792,3.718,793,3.718,794,2.491,795,3.148,796,2.491,797,2.491,798,2.491,799,2.491,800,2.491,801,3.718,802,2.491,803,2.491,804,2.491,805,2.491,806,2.491,807,2.491,808,2.491,809,3.718]],["title/injectables/TodoListService.html",[288,0.686,378,2.082]],["body/injectables/TodoListService.html",[2,0.134,3,0.134,4,0.134,6,0.18,8,1.089,11,0.876,13,0.468,14,0.026,15,0.436,20,1.103,23,0.439,27,0.112,30,1.92,31,1.243,32,1.473,37,0.014,38,0.014,99,3.537,103,2.179,112,1.533,129,0.696,135,1.423,136,0.429,140,0.462,141,1.271,221,3.172,224,1.371,288,0.927,294,1.243,325,1.777,326,1.617,334,1.777,337,3.632,378,2.376,392,4.366,405,1.737,436,1.977,544,2.63,549,1.977,554,4.479,555,4.647,558,3.409,561,2.904,562,4.04,563,4.04,784,4.957,789,3.297,790,3.297,795,3.297,810,2.651,811,5.664,812,3.894,813,2.651,814,3.894,815,2.651,816,3.894,817,2.651,818,2.651,819,2.651,820,3.894,821,3.894,822,2.651,823,3.894,824,2.651,825,2.651,826,2.651,827,3.894,828,2.651]],["title/injectables/UserService.html",[200,2.082,288,0.686]],["body/injectables/UserService.html",[2,0.165,3,0.165,4,0.165,6,0.221,8,1.041,11,0.838,13,0.447,14,0.026,15,0.43,18,1.357,23,0.482,24,2.581,27,0.137,30,1.878,31,1.784,32,1.784,37,0.016,38,0.016,39,3.933,112,1.493,129,0.857,135,1.36,136,0.528,140,0.568,141,1.564,200,2.755,221,3.398,224,1.687,288,1.041,291,2.342,294,1.441,325,2.187,326,1.99,334,2.187,337,3.471,405,2.014,544,2.334,548,4.732,549,2.433,553,3.367,554,4.167,555,4.526,556,3.823,558,3.746,561,3.367,562,3.861,563,3.861,676,2.762,829,3.262,830,3.262,831,4.515,832,3.262,833,3.262,834,3.262]],["title/interfaces/Week.html",[0,0.362,52,1.021]],["body/interfaces/Week.html",[0,0.593,2,0.228,3,0.228,4,0.228,6,0.307,7,0.905,12,1.269,13,0.483,14,0.025,15,0.431,23,0.391,27,0.236,36,1.818,37,0.02,38,0.02,51,3.035,52,1.675,91,3.376,92,3.376,93,3.376,94,3.376,361,3.555,579,2.762,689,3.833,835,4.527,836,4.527,837,4.527,838,4.527,839,4.527,840,4.527,841,4.527]],["title/dependencies.html",[187,2.504,842,2.85]],["body/dependencies.html",[14,0.026,37,0.019,38,0.019,136,0.69,187,2.602,189,3.608,207,4.022,208,3.615,212,2.859,213,2.859,216,2.205,224,2.205,231,3.181,242,2.045,259,3.181,327,3.181,328,3.181,329,3.612,330,3.612,372,2.602,843,5.393,844,4.265,845,4.265,846,6.839,847,4.265,848,5.393,849,4.265,850,4.265,851,4.265,852,4.265,853,4.265,854,4.265,855,4.265,856,4.265,857,4.265,858,4.265,859,4.265,860,4.265,861,4.265,862,4.265,863,4.265]],["title/miscellaneous/enumerations.html",[864,1.91,865,3.475]],["body/miscellaneous/enumerations.html",[6,0.349,14,0.022,37,0.022,38,0.022,44,3.835,48,4.508,49,3.835,50,3.447,51,2.294,52,1.538,78,4.052,427,4.354,864,3.447,865,4.354,866,5.142,867,5.142,868,5.142,869,5.142,870,5.142]],["title/miscellaneous/functions.html",[110,3.061,864,1.91]],["body/miscellaneous/functions.html",[6,0.337,8,1.189,11,0.957,14,0.024,37,0.021,38,0.021,64,2.378,100,4.2,103,1.888,110,3.699,111,4.2,135,1.555,222,3.699,223,4.412,234,4.412,613,5.354,864,3.325,871,4.96,872,4.96,873,4.96,874,4.96]],["title/index.html",[6,0.193,60,1.91,558,1.91]],["body/index.html",[14,0.023,37,0.023,38,0.023,875,5.463,876,5.463]],["title/modules.html",[185,2.408]],["body/modules.html",[14,0.022,37,0.022,38,0.022,185,2.729,186,3.538,196,3.22,208,4.114,877,6.137,878,6.137,879,6.137]],["title/overview.html",[880,3.943]],["body/overview.html",[0,0.32,14,0.025,27,0.127,37,0.015,38,0.015,115,0.607,116,2.215,131,2.569,133,2.569,143,1.099,150,1.932,153,1.932,155,2.302,158,1.808,160,1.932,163,1.808,165,1.808,167,1.932,169,1.808,171,1.808,173,1.808,175,1.932,177,1.808,179,1.808,181,1.808,183,1.932,185,2.213,186,4.732,187,1.844,188,2.254,189,1.844,190,2.026,191,2.559,192,2.559,193,2.559,194,2.559,195,2.559,196,4.231,197,3.331,198,4.208,199,3.331,200,3.032,201,3.331,202,2.869,203,2.254,204,2.254,288,0.607,373,2.559,374,2.559,375,2.559,376,2.559,377,2.783,378,3.032,880,2.559,881,3.023,882,3.023,883,3.023,884,3.023]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":444,"title":{},"body":{"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"components/TodoListComponent.html":{}}}],["0.8.4",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["00000",{"_index":84,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["0101101",{"_index":90,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["1",{"_index":482,"title":{"injectables/SearchFilterPipe-1.html":{}},"body":{"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/TodoListComponent.html":{}}}],["1.0.0",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":485,"title":{},"body":{"interfaces/EventElement.html":{}}}],["13",{"_index":883,"title":{},"body":{"overview.html":{}}}],["15",{"_index":884,"title":{},"body":{"overview.html":{}}}],["17",{"_index":882,"title":{},"body":{"overview.html":{}}}],["2",{"_index":881,"title":{},"body":{"overview.html":{}}}],["2.0.3",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["24:00:00",{"_index":483,"title":{},"body":{"interfaces/EventElement.html":{}}}],["27.0.0",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["5.5.0",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":489,"title":{},"body":{"interfaces/EventElement.html":{}}}],["_",{"_index":590,"title":{},"body":{"interfaces/Location.html":{}}}],["access",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PayloadModel.html":{}}}],["accessor",{"_index":591,"title":{},"body":{"interfaces/Location.html":{},"injectables/SessionService.html":{}}}],["activ",{"_index":410,"title":{},"body":{"interfaces/DateObject.html":{}}}],["actual_compon",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["ad",{"_index":509,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["adapter.compon",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["adapter.component.t",{"_index":705,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["adapter.component.ts:11",{"_index":712,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["adapter.component.ts:7",{"_index":709,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["add",{"_index":521,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["addgroup",{"_index":506,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["addgroup(group",{"_index":519,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["addmemb",{"_index":665,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["addmember(us",{"_index":671,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["address",{"_index":69,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Location.html":{},"interfaces/Recurring.html":{}}}],["addtodo",{"_index":789,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["addtodo(todo",{"_index":814,"title":{},"body":{"injectables/TodoListService.html":{}}}],["agm/cor",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Location.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["aizasydujitlzddw3spdwzbzdw5ynts_i",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["angular",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/anim",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DashboardModule.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["api_root",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["apicreateev",{"_index":45,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["apicreategroup",{"_index":1,"title":{"interfaces/ApiCreateGroup.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"injectables/GroupService.html":{}}}],["apicreateus",{"_index":39,"title":{"interfaces/ApiCreateUser.html":{}},"body":{"interfaces/ApiCreateUser.html":{},"interfaces/ApiUser.html":{},"injectables/UserService.html":{}}}],["apiev",{"_index":25,"title":{"interfaces/ApiEvent.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{}}}],["apigroup",{"_index":28,"title":{"interfaces/ApiGroup.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{}}}],["apikey",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["apitodo",{"_index":99,"title":{"interfaces/ApiTodo.html":{}},"body":{"interfaces/ApiTodo.html":{},"interfaces/EventElement.html":{},"interfaces/PayloadModel.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["apius",{"_index":18,"title":{"interfaces/ApiUser.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"components/MemberFormComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/UserService.html":{}}}],["app",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app'},{'nam",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["app.compon",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.less",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["app/models/ev",{"_index":425,"title":{},"body":{"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{}}}],["app/models/group",{"_index":777,"title":{},"body":{"components/SidebarComponent.html":{}}}],["app/models/todo",{"_index":436,"title":{},"body":{"interfaces/EventElement.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["app/services/cor",{"_index":433,"title":{},"body":{"interfaces/EventElement.html":{},"components/SidebarComponent.html":{}}}],["app/services/interceptor",{"_index":380,"title":{},"body":{"modules/DashboardModule.html":{}}}],["app_rout",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":116,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["appmodul",{"_index":186,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appoint",{"_index":56,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["april",{"_index":697,"title":{},"body":{"interfaces/Month.html":{}}}],["array",{"_index":740,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["attempt",{"_index":553,"title":{},"body":{"injectables/GroupService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["august",{"_index":700,"title":{},"body":{"interfaces/Month.html":{}}}],["auth",{"_index":292,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["auth.servic",{"_index":300,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguard",{"_index":197,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"overview.html":{}}}],["authresult",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.accesstoken",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.us",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.user.id",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservic",{"_index":131,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["autocomplet",{"_index":605,"title":{},"body":{"interfaces/Location.html":{}}}],["autocomplete.addlistener(\"place_chang",{"_index":607,"title":{},"body":{"interfaces/Location.html":{}}}],["autocomplete.getplac",{"_index":610,"title":{},"body":{"interfaces/Location.html":{}}}],["awesom",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["back",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"components/NotFoundComponent.html":{}}}],["basic",{"_index":67,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["befor",{"_index":75,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["belong",{"_index":21,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/Recurring.html":{}}}],["beta.2",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["binari",{"_index":88,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["blur",{"_index":627,"title":{},"body":{"interfaces/Location.html":{}}}],["boolean",{"_index":36,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{},"interfaces/Week.html":{}}}],["bootstrap",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/NgbDateNativeAdapter.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/datepick",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/ng",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/NgbDateNativeAdapter.html":{},"dependencies.html":{}}}],["box'},{'nam",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["box.compon",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["box/combo",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["box/search.pip",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["box/search.pipe.t",{"_index":734,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["box/search.pipe.ts:14",{"_index":746,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["box/search.pipe.ts:26",{"_index":742,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["brows",{"_index":879,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["bsdatepickermodul",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdatepickermodule.forroot",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["budget",{"_index":870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cach",{"_index":559,"title":{},"body":{"injectables/GroupService.html":{}}}],["cache.servic",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"components/SidebarComponent.html":{}}}],["calendar",{"_index":86,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["call",{"_index":595,"title":{},"body":{"interfaces/Location.html":{}}}],["callback",{"_index":597,"title":{},"body":{"interfaces/Location.html":{}}}],["canactiv",{"_index":295,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["certain",{"_index":105,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["chang",{"_index":585,"title":{},"body":{"interfaces/Location.html":{}}}],["changed",{"_index":397,"title":{},"body":{"injectables/DashboardService.html":{}}}],["changedate(d",{"_index":399,"title":{},"body":{"injectables/DashboardService.html":{}}}],["check",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["choos",{"_index":514,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["class",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodul",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dashboardmodul",{"_index":373,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":374,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_export",{"_index":375,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_provid",{"_index":376,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["code",{"_index":83,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["collapsemodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["collapsemodule.forroot",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["color",{"_index":80,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["combo",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["comboboxcompon",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["compar",{"_index":744,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["compon",{"_index":115,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["component_templ",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["console.log(err",{"_index":659,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(r",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(userinfo",{"_index":655,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":579,"title":{},"body":{"interfaces/Location.html":{},"interfaces/Month.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"interfaces/Week.html":{}}}],["constants.modul",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":296,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(authservic",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(http",{"_index":549,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor(priv",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor(publ",{"_index":302,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["constructor(rout",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(todoservic",{"_index":791,"title":{},"body":{"components/TodoListComponent.html":{}}}],["continu",{"_index":756,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["controlvalueaccessor",{"_index":575,"title":{},"body":{"interfaces/Location.html":{}}}],["core",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"dependencies.html":{}}}],["corecach",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"components/SidebarComponent.html":{}}}],["corecacheservic",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["creat",{"_index":31,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["create(group",{"_index":551,"title":{},"body":{"injectables/GroupService.html":{}}}],["create(us",{"_index":831,"title":{},"body":{"injectables/UserService.html":{}}}],["creategroupcompon",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["credenti",{"_index":647,"title":{},"body":{"components/LoginComponent.html":{}}}],["criteria",{"_index":533,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["crud",{"_index":824,"title":{},"body":{"injectables/TodoListService.html":{}}}],["cur",{"_index":455,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr.format('dddd",{"_index":465,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr.format(date_format",{"_index":463,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr.utc().valueof",{"_index":468,"title":{},"body":{"interfaces/EventElement.html":{}}}],["current",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"interfaces/PayloadModel.html":{},"interfaces/Week.html":{}}}],["currentuserid",{"_index":759,"title":{},"body":{"injectables/SessionService.html":{}}}],["custom_input_control_value_accessor",{"_index":580,"title":{},"body":{"interfaces/Location.html":{}}}],["d",{"_index":467,"title":{},"body":{"interfaces/EventElement.html":{}}}],["dashboard",{"_index":368,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{}}}],["dashboard'},{'nam",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["dashboard.compon",{"_index":381,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.component.html",{"_index":370,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.less",{"_index":369,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.rout",{"_index":388,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.servic",{"_index":390,"title":{},"body":{"modules/DashboardModule.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["dashboard/dashboard.modul",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard_rout",{"_index":387,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboardcompon",{"_index":155,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":196,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardservic",{"_index":377,"title":{"injectables/DashboardService.html":{}},"body":{"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["date",{"_index":64,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/ApiTodo.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{},"miscellaneous/functions.html":{}}}],["date(date.year",{"_index":717,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.day",{"_index":719,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.getd",{"_index":716,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.getfullyear",{"_index":713,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.getmonth",{"_index":715,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.model",{"_index":424,"title":{},"body":{"interfaces/Day.html":{}}}],["date.month",{"_index":718,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date_format",{"_index":435,"title":{},"body":{"interfaces/EventElement.html":{}}}],["dateobject",{"_index":408,"title":{"interfaces/DateObject.html":{}},"body":{"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{}}}],["datetimepick",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["datevalu",{"_index":464,"title":{},"body":{"interfaces/EventElement.html":{}}}],["day",{"_index":51,"title":{"interfaces/Day.html":{}},"body":{"interfaces/ApiEvent.html":{},"interfaces/ApiTodo.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{},"miscellaneous/enumerations.html":{}}}],["day'},{'nam",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["day.component.html",{"_index":437,"title":{},"body":{"interfaces/EventElement.html":{}}}],["day.component.less",{"_index":438,"title":{},"body":{"interfaces/EventElement.html":{}}}],["day.model",{"_index":838,"title":{},"body":{"interfaces/Week.html":{}}}],["day/day.compon",{"_index":391,"title":{},"body":{"modules/DashboardModule.html":{}}}],["daycompon",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["decemb",{"_index":703,"title":{},"body":{"interfaces/Month.html":{}}}],["declar",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["decor",{"_index":527,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["default",{"_index":403,"title":{},"body":{"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["defin",{"_index":15,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["delet",{"_index":820,"title":{},"body":{"injectables/TodoListService.html":{}}}],["dep",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["depend",{"_index":187,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":439,"title":{},"body":{"interfaces/EventElement.html":{}}}],["descript",{"_index":9,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["diff",{"_index":443,"title":{},"body":{"interfaces/EventElement.html":{}}}],["direct",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["disabl",{"_index":584,"title":{},"body":{"interfaces/Location.html":{}}}],["display",{"_index":104,"title":{},"body":{"interfaces/ApiTodo.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{}}}],["display1",{"_index":411,"title":{},"body":{"interfaces/DateObject.html":{}}}],["dldatetimepickerdatemodul",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["doctor",{"_index":55,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["dom",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["done",{"_index":101,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["dropdown",{"_index":530,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["dynam",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["editeventcompon",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["el",{"_index":538,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["el.children.length",{"_index":540,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["el.children[0].id",{"_index":542,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["element",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["elementref",{"_index":526,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["email",{"_index":41,"title":{},"body":{"interfaces/ApiCreateUser.html":{},"interfaces/ApiUser.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["emitt",{"_index":516,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["empti",{"_index":511,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["end",{"_index":62,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["enddat",{"_index":66,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["endtim",{"_index":63,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["enum",{"_index":47,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["enumer",{"_index":865,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["err.json().messag",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["event",{"_index":26,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["event'},{'nam",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["event.compon",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["event.titl",{"_index":500,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["event/edit",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["event/event.servic",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["eventel",{"_index":426,"title":{"interfaces/EventElement.html":{}},"body":{"interfaces/EventElement.html":{}}}],["eventemitt",{"_index":517,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["eventpopovercompon",{"_index":163,"title":{"components/EventPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["eventservic",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ex",{"_index":54,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["expiri",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"overview.html":{}}}],["extend",{"_index":29,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/Recurring.html":{}}}],["fals",{"_index":113,"title":{},"body":{"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["fb",{"_index":642,"title":{},"body":{"components/LoginComponent.html":{}}}],["februari",{"_index":695,"title":{},"body":{"interfaces/Month.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["filter",{"_index":736,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["filter(item",{"_index":739,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["filtergroup",{"_index":768,"title":{},"body":{"components/SidebarComponent.html":{}}}],["filtergroup(group",{"_index":771,"title":{},"body":{"components/SidebarComponent.html":{}}}],["find",{"_index":524,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["fn",{"_index":633,"title":{},"body":{"interfaces/Location.html":{}}}],["font",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":81,"title":{},"body":{"interfaces/ApiEvent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Recurring.html":{}}}],["form'},{'nam",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["form.compon",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["form.component.html",{"_index":503,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.t",{"_index":502,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:14",{"_index":529,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:18",{"_index":513,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:22",{"_index":515,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:26",{"_index":518,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:31",{"_index":510,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:38",{"_index":523,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:53",{"_index":520,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form/group",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/GroupSelectForm.html":{}}}],["formbuild",{"_index":643,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":512,"title":{},"body":{"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{}}}],["formsmodul",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["forwardref",{"_index":574,"title":{},"body":{"interfaces/Location.html":{}}}],["found",{"_index":543,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{}}}],["found'},{'nam",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["found.compon",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["found.component.html",{"_index":723,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.less",{"_index":722,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.t",{"_index":721,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/match",{"_index":532,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["found/not",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/NotFoundComponent.html":{}}}],["friday",{"_index":841,"title":{},"body":{"interfaces/Week.html":{}}}],["frommodel",{"_index":706,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["frommodel(d",{"_index":708,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["function",{"_index":110,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/ApiTodo.html":{},"miscellaneous/functions.html":{}}}],["futur",{"_index":412,"title":{},"body":{"interfaces/DateObject.html":{}}}],["geoloc",{"_index":619,"title":{},"body":{"interfaces/Location.html":{}}}],["get",{"_index":558,"title":{"index.html":{}},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["get(id",{"_index":556,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["getal",{"_index":548,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":760,"title":{},"body":{"injectables/SessionService.html":{}}}],["getduration(v",{"_index":476,"title":{},"body":{"interfaces/EventElement.html":{}}}],["getstart(v",{"_index":486,"title":{},"body":{"interfaces/EventElement.html":{}}}],["gettodo",{"_index":811,"title":{},"body":{"injectables/TodoListService.html":{}}}],["gettodo(id",{"_index":816,"title":{},"body":{"injectables/TodoListService.html":{}}}],["go",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["googl",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["google.maps.places.autocomplete(this.search.nativeel",{"_index":606,"title":{},"body":{"interfaces/Location.html":{}}}],["google.maps.places.placeresult",{"_index":609,"title":{},"body":{"interfaces/Location.html":{}}}],["googleapi",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["googlemap",{"_index":577,"title":{},"body":{"interfaces/Location.html":{}}}],["granular",{"_index":78,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["granularity.non",{"_index":442,"title":{},"body":{"interfaces/EventElement.html":{}}}],["group",{"_index":17,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["group'",{"_index":522,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["group'},{'nam",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["group.compon",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["group.nam",{"_index":546,"title":{},"body":{"components/GroupSelectForm.html":{},"components/SidebarComponent.html":{}}}],["group.showev",{"_index":781,"title":{},"body":{"components/SidebarComponent.html":{}}}],["group/creat",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["group/group",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["group/group.servic",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["groupdropdown",{"_index":504,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupform",{"_index":537,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupid",{"_index":79,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["groupnotfound",{"_index":505,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupsearch",{"_index":507,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupselectform",{"_index":165,"title":{"components/GroupSelectForm.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["groupservic",{"_index":201,"title":{"injectables/GroupService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GroupService.html":{},"overview.html":{}}}],["guard",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["guard.t",{"_index":290,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.ts:6",{"_index":297,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.ts:7",{"_index":299,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.ts:8",{"_index":298,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hash",{"_index":82,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["header'},{'nam",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["header/header.compon",{"_index":386,"title":{},"body":{"modules/DashboardModule.html":{}}}],["headercompon",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["height",{"_index":428,"title":{},"body":{"interfaces/EventElement.html":{}}}],["hemc",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["hidden",{"_index":85,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["home",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["hour",{"_index":50,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["html",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["http",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DashboardModule.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["httpfactori",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"miscellaneous/functions.html":{}}}],["httpfactory(xhrbackend",{"_index":874,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpmodul",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["id",{"_index":30,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/GroupService.html":{},"interfaces/Recurring.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["implement",{"_index":301,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/Location.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["import",{"_index":23,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["includ",{"_index":594,"title":{},"body":{"interfaces/Location.html":{}}}],["incorrect",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["init",{"_index":445,"title":{},"body":{"interfaces/EventElement.html":{}}}],["inject",{"_index":288,"title":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/GroupService.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/GroupService.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["innervalu",{"_index":586,"title":{},"body":{"interfaces/Location.html":{}}}],["input",{"_index":497,"title":{},"body":{"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["input'},{'nam",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["input('ev",{"_index":499,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["input('group",{"_index":536,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["input('memb",{"_index":678,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["input('us",{"_index":680,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["input.compon",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["input.component.t",{"_index":567,"title":{},"body":{"interfaces/Location.html":{}}}],["input.component.ts:21",{"_index":570,"title":{},"body":{"interfaces/Location.html":{}}}],["input.component.ts:22",{"_index":571,"title":{},"body":{"interfaces/Location.html":{}}}],["input.component.ts:23",{"_index":572,"title":{},"body":{"interfaces/Location.html":{}}}],["input/loc",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Location.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"interfaces/Location.html":{},"interfaces/Month.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"interfaces/Location.html":{},"interfaces/Month.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{},"overview.html":{}}}],["invit",{"_index":72,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["isauthent",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["isdis",{"_index":637,"title":{},"body":{"interfaces/Location.html":{}}}],["isopen",{"_index":767,"title":{},"body":{"components/SidebarComponent.html":{}}}],["item",{"_index":743,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["item[properti",{"_index":755,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["item[property].tostring().tolowercase().includes(tocompar",{"_index":757,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["items.filter((item",{"_index":754,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["januari",{"_index":694,"title":{},"body":{"interfaces/Month.html":{}}}],["js",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["juli",{"_index":699,"title":{},"body":{"interfaces/Month.html":{}}}],["june",{"_index":698,"title":{},"body":{"interfaces/Month.html":{}}}],["latitud",{"_index":568,"title":{},"body":{"interfaces/Location.html":{}}}],["legend",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["librari",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["list",{"_index":20,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/GroupSelectForm.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["list'},{'nam",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["list.compon",{"_index":393,"title":{},"body":{"modules/DashboardModule.html":{}}}],["list.component.html",{"_index":787,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.less",{"_index":786,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.t",{"_index":785,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:14",{"_index":798,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:15",{"_index":797,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:17",{"_index":792,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:27",{"_index":794,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:33",{"_index":796,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.servic",{"_index":394,"title":{},"body":{"modules/DashboardModule.html":{},"components/TodoListComponent.html":{}}}],["list.service.t",{"_index":810,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:11",{"_index":813,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:18",{"_index":815,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:28",{"_index":819,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:38",{"_index":822,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:48",{"_index":817,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:57",{"_index":818,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list/todo",{"_index":392,"title":{},"body":{"modules/DashboardModule.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["liter",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["load",{"_index":440,"title":{},"body":{"interfaces/EventElement.html":{}}}],["localstorag",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('access_token",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('user_id",{"_index":762,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.removeitem('access_token",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('user_id",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('access_token",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('user_id",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":68,"title":{"interfaces/Location.html":{}},"body":{"interfaces/ApiEvent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["locationinput",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["log",{"_index":648,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["login(userinfo",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login.component.html",{"_index":640,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.less",{"_index":639,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["logincompon",{"_index":171,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["loginform",{"_index":641,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["longitud",{"_index":569,"title":{},"body":{"interfaces/Location.html":{}}}],["made",{"_index":57,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["manag",{"_index":876,"title":{},"body":{"index.html":{}}}],["mani",{"_index":73,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["map",{"_index":89,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["map(r",{"_index":562,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["mapapiload",{"_index":587,"title":{},"body":{"interfaces/Location.html":{}}}],["mapsapiload",{"_index":578,"title":{},"body":{"interfaces/Location.html":{}}}],["march",{"_index":696,"title":{},"body":{"interfaces/Month.html":{}}}],["match",{"_index":38,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["meet",{"_index":875,"title":{},"body":{"index.html":{}}}],["member",{"_index":10,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["member'",{"_index":71,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["member.component.html",{"_index":662,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["memberdropdown",{"_index":663,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["memberform",{"_index":679,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["memberformcompon",{"_index":173,"title":{"components/MemberFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["membernotfound",{"_index":664,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["membersearch",{"_index":666,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["messag",{"_index":531,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["metadata",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["method",{"_index":294,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["minut",{"_index":49,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["minutes/hours/days/week",{"_index":74,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["miscellan",{"_index":864,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mmmm",{"_index":466,"title":{},"body":{"interfaces/EventElement.html":{}}}],["mnm",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["modalmodul",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["model",{"_index":434,"title":{},"body":{"interfaces/EventElement.html":{}}}],["models/group",{"_index":534,"title":{},"body":{"components/GroupSelectForm.html":{},"injectables/GroupService.html":{}}}],["models/us",{"_index":676,"title":{},"body":{"components/MemberFormComponent.html":{},"injectables/UserService.html":{}}}],["modul",{"_index":185,"title":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["moduleid",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["moment",{"_index":372,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{},"dependencies.html":{}}}],["moment().format(date_format",{"_index":462,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment(v.endd",{"_index":477,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment(v.startd",{"_index":479,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment.duration(end.clone().diff(start)).ashour",{"_index":484,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment.duration(end.diff(start)).asday",{"_index":481,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment.mo",{"_index":400,"title":{},"body":{"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["monday",{"_index":91,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["month",{"_index":687,"title":{"interfaces/Month.html":{}},"body":{"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{}}}],["month'},{'nam",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["month/month.compon",{"_index":382,"title":{},"body":{"modules/DashboardModule.html":{}}}],["monthcompon",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["multi",{"_index":582,"title":{},"body":{"interfaces/Location.html":{}}}],["name",{"_index":11,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["navig",{"_index":620,"title":{},"body":{"interfaces/Location.html":{},"components/LoginComponent.html":{}}}],["navigator.geolocation.getcurrentposition((posit",{"_index":621,"title":{},"body":{"interfaces/Location.html":{}}}],["new",{"_index":405,"title":{},"body":{"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/SidebarComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["newgroup",{"_index":564,"title":{},"body":{"injectables/GroupService.html":{},"components/SidebarComponent.html":{}}}],["newtodo",{"_index":788,"title":{},"body":{"components/TodoListComponent.html":{}}}],["ng",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/NgbDateNativeAdapter.html":{},"dependencies.html":{}}}],["ng_value_accessor",{"_index":576,"title":{},"body":{"interfaces/Location.html":{}}}],["ngbdateadapt",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"injectables/NgbDateNativeAdapter.html":{}}}],["ngbdatenativeadapt",{"_index":247,"title":{"injectables/NgbDateNativeAdapter.html":{}},"body":{"modules/AppModule.html":{},"injectables/NgbDateNativeAdapter.html":{}}}],["ngbdatestruct",{"_index":710,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["ngbmodul",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["ngbmodule.forroot",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["ngmodul",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["ngoninit",{"_index":448,"title":{},"body":{"interfaces/EventElement.html":{},"interfaces/Location.html":{},"components/SidebarComponent.html":{}}}],["ngx",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":573,"title":{},"body":{"interfaces/Location.html":{}}}],["none",{"_index":868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["note",{"_index":70,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["notfoundcompon",{"_index":177,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["notif",{"_index":76,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["notificationgranular",{"_index":48,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["notificationvalu",{"_index":77,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["novemb",{"_index":702,"title":{},"body":{"interfaces/Month.html":{}}}],["null",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Location.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["number",{"_index":32,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"interfaces/Recurring.html":{},"injectables/SessionService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["object",{"_index":738,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["observ",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable.throw(err",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["onblur",{"_index":628,"title":{},"body":{"interfaces/Location.html":{}}}],["onchang",{"_index":596,"title":{},"body":{"interfaces/Location.html":{}}}],["onchangecallback",{"_index":589,"title":{},"body":{"interfaces/Location.html":{}}}],["ontouchedcallback",{"_index":588,"title":{},"body":{"interfaces/Location.html":{}}}],["option",{"_index":8,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["output",{"_index":508,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["overview",{"_index":880,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownerid",{"_index":58,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["packag",{"_index":842,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":724,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["param",{"_index":544,"title":{},"body":{"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["paramet",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseday(curr",{"_index":457,"title":{},"body":{"interfaces/EventElement.html":{}}}],["password",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["past",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DateObject.html":{}}}],["payloadmodel",{"_index":725,"title":{"interfaces/PayloadModel.html":{}},"body":{"interfaces/PayloadModel.html":{}}}],["pipe",{"_index":748,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["pipetransform",{"_index":749,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["place",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Location.html":{}}}],["place.formatted_address",{"_index":614,"title":{},"body":{"interfaces/Location.html":{}}}],["place.geometri",{"_index":612,"title":{},"body":{"interfaces/Location.html":{}}}],["place.geometry.location.lat",{"_index":615,"title":{},"body":{"interfaces/Location.html":{}}}],["place.geometry.location.lng",{"_index":616,"title":{},"body":{"interfaces/Location.html":{}}}],["popov",{"_index":494,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover'},{'nam",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["popover.compon",{"_index":385,"title":{},"body":{"modules/DashboardModule.html":{}}}],["popover.component.html",{"_index":496,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover.component.less",{"_index":495,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover.component.t",{"_index":493,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover.component.ts:11",{"_index":498,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover/ev",{"_index":384,"title":{},"body":{"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{}}}],["popovermodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["popovermodule.forroot",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["position.coords.latitud",{"_index":623,"title":{},"body":{"interfaces/Location.html":{}}}],["position.coords.longitud",{"_index":625,"title":{},"body":{"interfaces/Location.html":{}}}],["privat",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["promis",{"_index":555,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Week.html":{}}}],["provid",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"interfaces/Location.html":{},"overview.html":{}}}],["public",{"_index":291,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/UserService.html":{}}}],["pure",{"_index":750,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["re",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["reactiveformsmodul",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["recur",{"_index":87,"title":{"interfaces/Recurring.html":{}},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["registeronchange(fn",{"_index":631,"title":{},"body":{"interfaces/Location.html":{}}}],["registerontouched(fn",{"_index":634,"title":{},"body":{"interfaces/Location.html":{}}}],["remov",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["removetodo",{"_index":790,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["removetodo(todo",{"_index":795,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["repeatweekli",{"_index":95,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["replaysubject",{"_index":402,"title":{},"body":{"injectables/DashboardService.html":{}}}],["requestopt",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"miscellaneous/functions.html":{}}}],["requir",{"_index":660,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.json",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["reset",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["result",{"_index":37,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":112,"title":{},"body":{"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["rout",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["router",{"_index":293,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodul",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["routermodule.forchild(dashboard_rout",{"_index":395,"title":{},"body":{"modules/DashboardModule.html":{}}}],["routermodule.forroot(app_rout",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["rxj",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"dependencies.html":{}}}],["saturday",{"_index":94,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["search",{"_index":525,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["searchfilterpip",{"_index":253,"title":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}},"body":{"modules/AppModule.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["searchfilterpipe.filter(item",{"_index":751,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["select",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"components/GroupSelectForm.html":{}}}],["select'},{'nam",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["selector",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["septemb",{"_index":701,"title":{},"body":{"interfaces/Month.html":{}}}],["server",{"_index":554,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["servic",{"_index":825,"title":{},"body":{"injectables/TodoListService.html":{}}}],["services/auth",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["services/auth.servic",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["services/cor",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GroupService.html":{}}}],["services/interceptor",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["services/session.servic",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["sessionservic",{"_index":199,"title":{"injectables/SessionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/SessionService.html":{},"overview.html":{}}}],["set",{"_index":593,"title":{},"body":{"interfaces/Location.html":{}}}],["setcurrentposit",{"_index":618,"title":{},"body":{"interfaces/Location.html":{}}}],["setdisabledstate?(isdis",{"_index":635,"title":{},"body":{"interfaces/Location.html":{}}}],["sethour",{"_index":490,"title":{},"body":{"interfaces/EventElement.html":{}}}],["setsess",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["setsession(authresult",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/combo",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/datepick",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/loc",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/not",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["show",{"_index":34,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{}}}],["showev",{"_index":35,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{}}}],["sidebar",{"_index":764,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["sidebar.component.html",{"_index":766,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.less",{"_index":765,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":389,"title":{},"body":{"modules/DashboardModule.html":{}}}],["sidebarcompon",{"_index":179,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["src/.../day.component.t",{"_index":866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../event.t",{"_index":867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../interceptor.t",{"_index":871,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../todo.t",{"_index":872,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.t",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/group/group",{"_index":501,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["src/app/group/group.service.t",{"_index":547,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:17",{"_index":557,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:26",{"_index":560,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:36",{"_index":552,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:9",{"_index":550,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/login/login.component.t",{"_index":638,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:16",{"_index":644,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:18",{"_index":650,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:31",{"_index":646,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/models/event.t",{"_index":44,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/event.ts:77",{"_index":46,"title":{},"body":{"interfaces/ApiEvent.html":{}}}],["src/app/models/event.ts:85",{"_index":731,"title":{},"body":{"interfaces/Recurring.html":{}}}],["src/app/models/event.ts:86",{"_index":732,"title":{},"body":{"interfaces/Recurring.html":{}}}],["src/app/models/group.t",{"_index":5,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:12",{"_index":16,"title":{},"body":{"interfaces/ApiCreateGroup.html":{}}}],["src/app/models/group.ts:16",{"_index":19,"title":{},"body":{"interfaces/ApiCreateGroup.html":{}}}],["src/app/models/group.ts:23",{"_index":97,"title":{},"body":{"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:27",{"_index":96,"title":{},"body":{"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:31",{"_index":98,"title":{},"body":{"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:8",{"_index":22,"title":{},"body":{"interfaces/ApiCreateGroup.html":{}}}],["src/app/models/payload.t",{"_index":726,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:10",{"_index":730,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:14",{"_index":728,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:18",{"_index":727,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:22",{"_index":729,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/todo.t",{"_index":100,"title":{},"body":{"interfaces/ApiTodo.html":{},"miscellaneous/functions.html":{}}}],["src/app/models/todo.ts:13",{"_index":106,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:17",{"_index":102,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:21",{"_index":107,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:5",{"_index":108,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:9",{"_index":109,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/user.t",{"_index":40,"title":{},"body":{"interfaces/ApiCreateUser.html":{},"interfaces/ApiUser.html":{}}}],["src/app/models/user.ts:10",{"_index":43,"title":{},"body":{"interfaces/ApiCreateUser.html":{}}}],["src/app/models/user.ts:17",{"_index":114,"title":{},"body":{"interfaces/ApiUser.html":{}}}],["src/app/models/user.ts:6",{"_index":42,"title":{},"body":{"interfaces/ApiCreateUser.html":{}}}],["src/app/services/auth",{"_index":289,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/services/auth.service.t",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:11",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:13",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:19",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:30",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:37",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:45",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/interceptor.t",{"_index":873,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/services/session.service.t",{"_index":758,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:6",{"_index":761,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/shared/combo",{"_index":733,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["src/app/shared/datepick",{"_index":704,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["src/app/shared/loc",{"_index":566,"title":{},"body":{"interfaces/Location.html":{}}}],["src/app/shared/not",{"_index":720,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["src/app/user/member/member.component.t",{"_index":661,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:12",{"_index":674,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:13",{"_index":668,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:14",{"_index":669,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:15",{"_index":670,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:17",{"_index":667,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:21",{"_index":673,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:32",{"_index":672,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/user.service.t",{"_index":829,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:14",{"_index":834,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:24",{"_index":833,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:34",{"_index":832,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:8",{"_index":830,"title":{},"body":{"injectables/UserService.html":{}}}],["src/dashboard/dashboard.component.t",{"_index":367,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/dashboard/dashboard.component.ts:11",{"_index":371,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/dashboard/dashboard.module.t",{"_index":379,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/dashboard/dashboard.service.t",{"_index":396,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:13",{"_index":401,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:7",{"_index":398,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/day/day.component.t",{"_index":427,"title":{},"body":{"interfaces/EventElement.html":{},"miscellaneous/enumerations.html":{}}}],["src/dashboard/day/day.component.ts:112",{"_index":432,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/day/day.component.ts:113",{"_index":431,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/day/day.component.ts:114",{"_index":430,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/ev",{"_index":492,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["src/dashboard/models/date.model.t",{"_index":409,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:2",{"_index":420,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:3",{"_index":415,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:4",{"_index":416,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:5",{"_index":417,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:6",{"_index":418,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:7",{"_index":419,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:8",{"_index":414,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/day.model.t",{"_index":421,"title":{},"body":{"interfaces/Day.html":{}}}],["src/dashboard/models/day.model.ts:5",{"_index":422,"title":{},"body":{"interfaces/Day.html":{}}}],["src/dashboard/models/day.model.ts:6",{"_index":423,"title":{},"body":{"interfaces/Day.html":{}}}],["src/dashboard/models/month.model.t",{"_index":688,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/month.model.ts:4",{"_index":690,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/month.model.ts:5",{"_index":692,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/month.model.ts:6",{"_index":691,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/week.model.t",{"_index":835,"title":{},"body":{"interfaces/Week.html":{}}}],["src/dashboard/models/week.model.ts:4",{"_index":837,"title":{},"body":{"interfaces/Week.html":{}}}],["src/dashboard/models/week.model.ts:5",{"_index":836,"title":{},"body":{"interfaces/Week.html":{}}}],["src/dashboard/sidebar/sidebar.component.t",{"_index":763,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/sidebar/sidebar.component.ts:13",{"_index":776,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/sidebar/sidebar.component.ts:14",{"_index":770,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/sidebar/sidebar.component.ts:18",{"_index":774,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/sidebar/sidebar.component.ts:22",{"_index":773,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/sidebar/sidebar.component.ts:26",{"_index":772,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/sidebar/sidebar.component.ts:31",{"_index":775,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/todo",{"_index":784,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["start",{"_index":60,"title":{"index.html":{}},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["start.hour",{"_index":487,"title":{},"body":{"interfaces/EventElement.html":{}}}],["start.minut",{"_index":488,"title":{},"body":{"interfaces/EventElement.html":{}}}],["startdat",{"_index":65,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["starttim",{"_index":61,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["state",{"_index":441,"title":{},"body":{"interfaces/EventElement.html":{}}}],["static",{"_index":735,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/AuthService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"interfaces/Month.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"interfaces/Week.html":{}}}],["styleurl",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["subscrib",{"_index":447,"title":{},"body":{"interfaces/EventElement.html":{}}}],["success",{"_index":649,"title":{},"body":{"components/LoginComponent.html":{}}}],["sunday",{"_index":839,"title":{},"body":{"interfaces/Week.html":{}}}],["support",{"_index":877,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":878,"title":{},"body":{"modules.html":{}}}],["templat",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["templateurl",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["term",{"_index":741,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["term'",{"_index":747,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["term.tolowercas",{"_index":753,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["this.added.emit(us",{"_index":684,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.auth.isauthent",{"_index":303,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.authservice.login(userinfo).subscribe(r",{"_index":656,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.change.emit(this.loc",{"_index":601,"title":{},"body":{"interfaces/Location.html":{}}}],["this.changedate(mo",{"_index":406,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.corecache.addgroup(newgroup",{"_index":565,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.corecache.currentus",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.corecache.filtereventsbygroup(group",{"_index":782,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.corecache.getdatemap().then(map",{"_index":451,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.corecache.getgroups().then(group",{"_index":778,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.corecache.onauth",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.curr",{"_index":454,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.current.next(d",{"_index":407,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.dashboardservice.current.subscribe(cur",{"_index":453,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.dashboardservice.current.subscribe(d",{"_index":799,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.dat",{"_index":800,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.day",{"_index":469,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.day.events.foreach(ev",{"_index":472,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.diff",{"_index":459,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.dis",{"_index":636,"title":{},"body":{"interfaces/Location.html":{}}}],["this.eventel",{"_index":458,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.eventelements.push",{"_index":473,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.fb.group",{"_index":652,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getduration(ev",{"_index":475,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.getstart(ev",{"_index":474,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.group",{"_index":779,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.groupdropdown.nativeel",{"_index":539,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["this.groupform.patchvalue(group",{"_index":545,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["this.groupnotfound",{"_index":541,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["this.height",{"_index":460,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.hours.push(12",{"_index":491,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.http.delete(api_root",{"_index":826,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.get(api_root",{"_index":561,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["this.http.post(api_root",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["this.http.put(api_root",{"_index":828,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.innervalu",{"_index":592,"title":{},"body":{"interfaces/Location.html":{}}}],["this.isauthent",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isopen",{"_index":783,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.load",{"_index":449,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.loc",{"_index":602,"title":{},"body":{"interfaces/Location.html":{}}}],["this.location.latitud",{"_index":622,"title":{},"body":{"interfaces/Location.html":{}}}],["this.location.longitud",{"_index":624,"title":{},"body":{"interfaces/Location.html":{}}}],["this.loginform",{"_index":651,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.map",{"_index":452,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.map.get(d",{"_index":471,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.map.has(d",{"_index":470,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.mapapiloader.load().then",{"_index":604,"title":{},"body":{"interfaces/Location.html":{}}}],["this.memberdropdown.nativeel",{"_index":681,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.memberform.patchvalue(us",{"_index":683,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.membernotfound",{"_index":682,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.newtodo",{"_index":801,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.ngzone.run",{"_index":608,"title":{},"body":{"interfaces/Location.html":{}}}],["this.onchangecallback",{"_index":632,"title":{},"body":{"interfaces/Location.html":{}}}],["this.onchangecallback(v",{"_index":600,"title":{},"body":{"interfaces/Location.html":{}}}],["this.ontouchedcallback",{"_index":629,"title":{},"body":{"interfaces/Location.html":{}}}],["this.parseday(this.current.clon",{"_index":456,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.router.navig",{"_index":658,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['group/cr",{"_index":780,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.router.navigate(['login",{"_index":304,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.setcurrentposit",{"_index":603,"title":{},"body":{"interfaces/Location.html":{}}}],["this.sethour",{"_index":450,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.setsession(r",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.todos.indexof(todo",{"_index":806,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todos.push(this.newtodo",{"_index":803,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todos.splice(index",{"_index":807,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todoservice.addtodo(this.newtodo",{"_index":804,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todoservice.removetodo(todo",{"_index":808,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.valu",{"_index":617,"title":{},"body":{"interfaces/Location.html":{}}}],["thursday",{"_index":93,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["time",{"_index":59,"title":{},"body":{"interfaces/ApiEvent.html":{},"injectables/AuthService.html":{},"interfaces/Recurring.html":{}}}],["timepickermodul",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["timepickermodule.forroot",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["titl",{"_index":53,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/ApiTodo.html":{},"interfaces/Recurring.html":{}}}],["tocompar",{"_index":752,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["today",{"_index":461,"title":{},"body":{"interfaces/EventElement.html":{}}}],["todo",{"_index":103,"title":{},"body":{"interfaces/ApiTodo.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"miscellaneous/functions.html":{}}}],["todo(d",{"_index":111,"title":{},"body":{"interfaces/ApiTodo.html":{},"miscellaneous/functions.html":{}}}],["todo(date.tod",{"_index":802,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo(this.date.tod",{"_index":805,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo.id",{"_index":827,"title":{},"body":{"injectables/TodoListService.html":{}}}],["todo.titl",{"_index":809,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todolistcompon",{"_index":181,"title":{"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["todolistservic",{"_index":378,"title":{"injectables/TodoListService.html":{}},"body":{"modules/DashboardModule.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"overview.html":{}}}],["todoservic",{"_index":793,"title":{},"body":{"components/TodoListComponent.html":{}}}],["togglepanel",{"_index":769,"title":{},"body":{"components/SidebarComponent.html":{}}}],["token",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["token'",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["tomodel",{"_index":707,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["tomodel(d",{"_index":711,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["top",{"_index":429,"title":{},"body":{"interfaces/EventElement.html":{}}}],["topromis",{"_index":563,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["touch",{"_index":626,"title":{},"body":{"interfaces/Location.html":{}}}],["transform",{"_index":737,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["transform(item",{"_index":745,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["tree",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["true",{"_index":305,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{}}}],["tuesday",{"_index":840,"title":{},"body":{"interfaces/Week.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["undefin",{"_index":613,"title":{},"body":{"interfaces/Location.html":{},"miscellaneous/functions.html":{}}}],["updat",{"_index":823,"title":{},"body":{"injectables/TodoListService.html":{}}}],["updatetodo",{"_index":812,"title":{},"body":{"injectables/TodoListService.html":{}}}],["updatetodo(todo",{"_index":821,"title":{},"body":{"injectables/TodoListService.html":{}}}],["useclass",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["useexist",{"_index":581,"title":{},"body":{"interfaces/Location.html":{}}}],["usefactori",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["user",{"_index":24,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":686,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["user.nam",{"_index":685,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["user.servic",{"_index":675,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["user/member/member.compon",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.servic",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["userinfo",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["userinfo).map(r",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernam",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["userservic",{"_index":200,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/MemberFormComponent.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["utcdatevalu",{"_index":413,"title":{},"body":{"interfaces/DateObject.html":{},"interfaces/EventElement.html":{}}}],["v",{"_index":599,"title":{},"body":{"interfaces/Location.html":{}}}],["v.endtim",{"_index":478,"title":{},"body":{"interfaces/EventElement.html":{}}}],["v.starttim",{"_index":480,"title":{},"body":{"interfaces/EventElement.html":{}}}],["valid",{"_index":645,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":654,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.requir",{"_index":653,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":404,"title":{},"body":{"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["value(v",{"_index":598,"title":{},"body":{"interfaces/Location.html":{}}}],["var",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["verifi",{"_index":611,"title":{},"body":{"interfaces/Location.html":{}}}],["viewchild",{"_index":528,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["viewchild('groupdropdown",{"_index":535,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["viewchild('memberdropdown",{"_index":677,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["viewchild('search",{"_index":583,"title":{},"body":{"interfaces/Location.html":{}}}],["void",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["want",{"_index":446,"title":{},"body":{"interfaces/EventElement.html":{}}}],["wednesday",{"_index":92,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["week",{"_index":52,"title":{"interfaces/Week.html":{}},"body":{"interfaces/ApiEvent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Week.html":{},"miscellaneous/enumerations.html":{}}}],["week.model",{"_index":693,"title":{},"body":{"interfaces/Month.html":{}}}],["week/week.compon",{"_index":383,"title":{},"body":{"modules/DashboardModule.html":{}}}],["weekcompon",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["weekday",{"_index":689,"title":{},"body":{"interfaces/Month.html":{},"interfaces/Week.html":{}}}],["whether",{"_index":33,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"injectables/AuthService.html":{}}}],["workout",{"_index":869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["writevalue(valu",{"_index":630,"title":{},"body":{"interfaces/Location.html":{}}}],["xhrbackend",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"miscellaneous/functions.html":{}}}],["year",{"_index":714,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["zone.j",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"interfaces/Location.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiCreateGroup.html":{"url":"interfaces/ApiCreateGroup.html","title":"interface - ApiCreateGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiCreateGroup\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/group.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Description\n                                \n                                \n                                        Members\n                                \n                                \n                                        Name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                    \n                                \n                                \n                                    \n                                        Description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    Description of the group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Members\n                                    \n                                \n                                \n                                    \n                                        Members:     ApiUser[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiUser[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    List of members that belong to the group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:8\n                                        \n                                    \n\n                            \n                                \n                                    Name of the group\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from './user';\nimport { ApiEvent } from './event';\n\nexport interface ApiCreateGroup {\n    /**\n     * Name of the group\n     */\n    Name: string;\n    /**\n     * Description of the group\n     */\n    Description?: string;\n    /**\n     * List of members that belong to the group\n     */\n    Members: ApiUser[];\n}\n\nexport interface ApiGroup extends ApiCreateGroup {\n    /**\n     * Id of the created group\n     */\n    Id: number;\n    /**\n     * Events the belong to the group\n     */\n    Events: ApiEvent[];\n    /**\n     * Whether or not we should show this groups events\n     */\n    ShowEvents?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiCreateUser.html":{"url":"interfaces/ApiCreateUser.html","title":"interface - ApiCreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiCreateUser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Email\n                                \n                                \n                                        Name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                    \n                                \n                                \n                                    \n                                        Email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:6\n                                        \n                                    \n\n                            \n                                \n                                    Email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:10\n                                        \n                                    \n\n                            \n                                \n                                    Name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiCreateUser {\n    /**\n     * Email\n     */\n    Email: string;\n    /**\n     * Name\n     */\n    Name: string;\n}\n\nexport interface ApiUser extends ApiCreateUser {\n    /**\n     * Id of the user\n     */\n    Id: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiEvent.html":{"url":"interfaces/ApiEvent.html","title":"interface - ApiEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiCreateEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/event.ts:77\n                                        \n                                    \n\n                            \n                                \n                                    Id of the event\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from \"./user\";\nimport { ApiGroup } from \"./group\";\n\nexport enum NotificationGranularity {\n    Minutes,\n    Hours,\n    Days,\n    Weeks\n}\n\nexport interface ApiCreateEvent {\n    /**\n     * Title ex) Doctors Appointment\n     */\n    Title: string;\n    /**\n     * Id of the member that made the event\n     */\n    OwnerId: number;\n    /**\n     * Time of day that the event should start\n     */\n    StartTime: string;\n    /**\n     * Time of day that the event should end\n     */\n    EndTime: string;\n    /**\n     * Date of the event (start date)\n     */\n    StartDate: string;\n    /**\n     * End date\n     */\n    EndDate?: string;\n    /** \n     * Either basic location or address\n     */\n    Location?: string;\n    /**\n     * Notes or description of the event\n     */\n    Notes?: string;\n    /**\n     * List of member's who are invited to the event\n     */\n    Members: ApiUser[];\n    /**\n     * How many (minutes/hours/days/weeks) before the event that the user should be notifed\n     */\n    NotificationValue?: number;\n    /**\n     * Notification granularity (minutes/hours/days/weeks)\n     */\n    NotificationGranularity?: NotificationGranularity;\n    /**\n     * group id that this event should belong to, if in a group\n     */\n    GroupId?: number;\n    /**\n     * Color of the event in the form of a hash code (#00000)\n     */\n    Color?: string;\n\n    /**\n     * If it should be hidden on the calendar\n     */\n    Hidden?: boolean;\n\n    Recurring?: Recurring;\n}\n\nexport interface ApiEvent extends ApiCreateEvent {\n    /**\n     * Id of the event\n     */\n    Id: number;\n}\n\nexport interface Recurring {\n    /**\n     * Binary number that maps to days of the week that it should be recurring\n     * ex) 0101101, maps to every monday, wednesday, thursday, saturday\n     */\n    Days: number;\n    RepeatWeekly: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiGroup.html":{"url":"interfaces/ApiGroup.html","title":"interface - ApiGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiGroup\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/group.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiCreateGroup\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Events\n                                \n                                \n                                        Id\n                                \n                                \n                                            Optional\n                                        ShowEvents\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Events\n                                    \n                                \n                                \n                                    \n                                        Events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:27\n                                        \n                                    \n\n                            \n                                \n                                    Events the belong to the group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:23\n                                        \n                                    \n\n                            \n                                \n                                    Id of the created group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ShowEvents\n                                    \n                                \n                                \n                                    \n                                        ShowEvents:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:31\n                                        \n                                    \n\n                            \n                                \n                                    Whether or not we should show this groups events\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from './user';\nimport { ApiEvent } from './event';\n\nexport interface ApiCreateGroup {\n    /**\n     * Name of the group\n     */\n    Name: string;\n    /**\n     * Description of the group\n     */\n    Description?: string;\n    /**\n     * List of members that belong to the group\n     */\n    Members: ApiUser[];\n}\n\nexport interface ApiGroup extends ApiCreateGroup {\n    /**\n     * Id of the created group\n     */\n    Id: number;\n    /**\n     * Events the belong to the group\n     */\n    Events: ApiEvent[];\n    /**\n     * Whether or not we should show this groups events\n     */\n    ShowEvents?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiTodo.html":{"url":"interfaces/ApiTodo.html","title":"interface - ApiTodo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiTodo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/todo.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Date\n                                \n                                \n                                            Optional\n                                        Description\n                                \n                                \n                                        Done\n                                \n                                \n                                            Optional\n                                        Id\n                                \n                                \n                                        Title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Date\n                                    \n                                \n                                \n                                    \n                                        Date:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Todos are only displayed on a certain day\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                    \n                                \n                                \n                                    \n                                        Description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    Description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Done\n                                    \n                                \n                                \n                                    \n                                        Done:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    Whether or not this todo is done\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:5\n                                        \n                                    \n\n                            \n                                \n                                    Id of todo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Title\n                                    \n                                \n                                \n                                    \n                                        Title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    Title of todo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiTodo {\n    /**\n     * Id of todo\n     */\n    Id?: number;\n    /**\n     * Title of todo\n     */\n    Title: string;\n    /**\n     * Description\n     */\n    Description?: string;\n    /**\n     * Todos are only displayed on a certain day\n     */\n    Date: Date;\n    /**\n     * Whether or not this todo is done\n     */\n    Done: boolean;\n}\n\nexport function Todo(date: Date): ApiTodo {\n    return {\n        Title: \"\",\n        Description: \"\",\n        Done: false,\n        Date: date\n    };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiUser.html":{"url":"interfaces/ApiUser.html","title":"interface - ApiUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiUser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiCreateUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Id of the user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiCreateUser {\n    /**\n     * Email\n     */\n    Email: string;\n    /**\n     * Name\n     */\n    Name: string;\n}\n\nexport interface ApiUser extends ApiCreateUser {\n    /**\n     * Id of the user\n     */\n    Id: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                app\n            \n\n\n\n\n            \n                selector\n                my-app\n            \n\n            \n                styleUrls\n                app.component.less\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { CoreCacheService } from './services/core-cache.service';\n\n@Component({\n  moduleId: 'app',\n  selector: 'my-app',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.less']\n})\nexport class AppComponent {\n  constructor(private authService: AuthService, private coreCache: CoreCacheService) {}\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nEditEventComponent\n\nEditEventComponent\n\nAppModule -->\n\nEditEventComponent->AppModule\n\n\n\n\n\nComboBoxComponent\n\nComboBoxComponent\n\nAppModule -->\n\nComboBoxComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nLocationInput\n\nLocationInput\n\nAppModule -->\n\nLocationInput->AppModule\n\n\n\n\n\nCreateGroupComponent\n\nCreateGroupComponent\n\nAppModule -->\n\nCreateGroupComponent->AppModule\n\n\n\n\n\nMemberFormComponent\n\nMemberFormComponent\n\nAppModule -->\n\nMemberFormComponent->AppModule\n\n\n\n\n\nGroupSelectForm\n\nGroupSelectForm\n\nAppModule -->\n\nGroupSelectForm->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nCoreCacheService\n\nCoreCacheService\n\nAppModule -->\n\nCoreCacheService->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nEventService\n\nEventService\n\nAppModule -->\n\nEventService->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nAppModule -->\n\nGroupService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                EditEventComponent\n                            \n                            \n                                ComboBoxComponent\n                            \n                            \n                                NotFoundComponent\n                            \n                            \n                                LocationInput\n                            \n                            \n                                CreateGroupComponent\n                            \n                            \n                                MemberFormComponent\n                            \n                            \n                                GroupSelectForm\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CoreCacheService\n                            \n                            \n                                     AuthGuard\n                            \n                            \n                                     AuthService\n                            \n                            \n                                     EventService\n                            \n                            \n                                     SessionService\n                            \n                            \n                                     UserService\n                            \n                            \n                                     GroupService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DashboardModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule, NgbDateAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DlDateTimePickerDateModule } from 'angular-bootstrap-datetimepicker';\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\nimport { APP_ROUTES } from './app.routing';\nimport { TimepickerModule, ModalModule, PopoverModule, CollapseModule } from 'ngx-bootstrap';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { httpFactory } from './services/interceptor';\n\nimport { AppComponent } from './app.component';\nimport { CoreCacheService } from './services/core-cache.service';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './services/auth-guard';\nimport { AuthService } from './services/auth.service';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { RouterModule } from '@angular/router';\nimport { EditEventComponent } from './event/edit-event/edit-event.component';\nimport { EventService } from './event/event.service';\nimport { SessionService } from './services/session.service';\nimport { NgbDateNativeAdapter } from './shared/datepicker-adapter.component';\nimport { ComboBoxComponent } from './shared/combo-box/combo-box.component';\nimport { SearchFilterPipe } from './shared/combo-box/search.pipe';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\nimport { AgmCoreModule } from '@agm/core';\nimport { UserService } from './user/user.service';\nimport { LocationInput } from './shared/location-input/location-input.component';\nimport { GroupService } from './group/group.service';\nimport { CreateGroupComponent } from './group/create-group/create-group.component';\nimport { MemberFormComponent } from './user/member/member.component';\nimport { GroupSelectForm } from './group/group-select-form/group-select-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    EditEventComponent,\n    ComboBoxComponent,\n    SearchFilterPipe,\n    NotFoundComponent,\n    LocationInput,\n    CreateGroupComponent,\n    MemberFormComponent,\n    GroupSelectForm\n  ],\n  imports: [\n    NgbModule.forRoot(),\n    TimepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PopoverModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    CollapseModule.forRoot(),\n    AgmCoreModule.forRoot({\n      apiKey: \"AIzaSyDUJitlzdDW3SpdwzBzDW5YnTS_I-HeMCs\",\n      libraries: [\"places\"]\n    }),\n    RouterModule.forRoot(APP_ROUTES),\n    DashboardModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DlDateTimePickerDateModule,\n    HttpModule\n  ],\n  providers: [\n    CoreCacheService,\n    AuthGuard,\n    AuthService,\n    EventService,\n    SessionService,\n    UserService,\n    GroupService,\n    {\n      provide: NgbDateAdapter,\n      useClass: NgbDateNativeAdapter\n    },\n    {\n      provide: Http,\n      useFactory: httpFactory,\n      deps: [XHRBackend, RequestOptions]\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-guard.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth-guard.ts:8\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth-guard.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth-guard.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Private\n                                setSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, http: Http, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isAuthenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:45\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(userInfo: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:19\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfo\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:37\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setSession\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSession(authResult: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:30\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authResult\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http } from '@angular/http';\nimport { API_ROOT } from '../../constants.module';\nimport { Observable } from 'rxjs';\nimport { CoreCacheService } from './core-cache.service';\nimport { google } from 'googleapis';\n\n@Injectable()\nexport class AuthService {\n\n  constructor(public router: Router, private http: Http, private coreCache: CoreCacheService) {\n    if (this.isAuthenticated()) {\n      this.coreCache.OnAuth();\n    }\n  }\n\n  public login(userInfo: { email: string, password: string }): Observable {\n    return this.http.post(API_ROOT + '/login', userInfo).map(res => {\n      res = res.json();\n      this.setSession(res);\n      return res;\n    }, err => {\n        err = err ? err.json().message : 'Username or password incorrect';\n        return Observable.throw(err);\n    });\n  }\n\n  private setSession(authResult): void {\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('user_id', authResult.user.id);\n    this.coreCache.currentUser = authResult.user;\n    this.coreCache.OnAuth();\n  }\n\n  public logout(): void {\n    // Remove tokens and expiry time from localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user_id');\n    // Go back to the home route\n    this.router.navigate(['login']);\n  }\n\n  public isAuthenticated(): boolean {\n    // Check whether the current time is past the\n    // access token's expiry time\n    return localStorage.getItem('access_token') != null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-dashboard\n            \n\n            \n                styleUrls\n                dashboard.component.less\n            \n\n\n\n            \n                templateUrl\n                dashboard.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/dashboard.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'mnm-dashboard',\n    templateUrl: 'dashboard.component.html',\n    styleUrls: ['dashboard.component.less']\n})\n\nexport class DashboardComponent {\n    constructor(private router: Router) {}\n}\n\n    \n\n    \n        \n\n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nDashboardModule -->\n\nSidebarComponent->DashboardModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nDashboardModule -->\n\nHeaderComponent->DashboardModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nDashboardModule -->\n\nMonthComponent->DashboardModule\n\n\n\n\n\nDayComponent\n\nDayComponent\n\nDashboardModule -->\n\nDayComponent->DashboardModule\n\n\n\n\n\nWeekComponent\n\nWeekComponent\n\nDashboardModule -->\n\nWeekComponent->DashboardModule\n\n\n\n\n\nEventPopoverComponent\n\nEventPopoverComponent\n\nDashboardModule -->\n\nEventPopoverComponent->DashboardModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nDashboardModule -->\n\nTodoListComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\nTodoListService\n\nTodoListService\n\nDashboardModule -->\n\nTodoListService->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                MonthComponent\n                            \n                            \n                                DayComponent\n                            \n                            \n                                WeekComponent\n                            \n                            \n                                EventPopoverComponent\n                            \n                            \n                                TodoListComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DashboardService\n                            \n                            \n                                     TodoListService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DashboardComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                DashboardComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\nimport { httpFactory } from '../app/services/interceptor';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { MonthComponent } from './month/month.component';\nimport { WeekComponent } from './week/week.component';\nimport { EventPopoverComponent } from './event-popover/event-popover.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RouterModule } from '@angular/router';\nimport { DASHBOARD_ROUTES } from './dashboard.routing';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { DashboardService } from './dashboard.service';\nimport { DayComponent } from './day/day.component';\nimport { CollapseModule } from 'ngx-bootstrap';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { TodoListService } from './todo-list/todo-list.service';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    SidebarComponent,\n    HeaderComponent,\n    MonthComponent,\n    DayComponent,\n    WeekComponent,\n    EventPopoverComponent,\n    TodoListComponent\n  ],\n  imports: [\n    RouterModule.forChild(DASHBOARD_ROUTES),\n    NgbModule.forRoot(),\n    CollapseModule.forRoot(),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule\n  ],\n  exports: [\n      DashboardComponent\n  ],\n  providers: [\n    DashboardService,\n    TodoListService,\n    {\n      provide: Http,\n      useFactory: httpFactory,\n      deps: [XHRBackend, RequestOptions]\n    }],\n  bootstrap: [DashboardComponent]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardService.html":{"url":"injectables/DashboardService.html","title":"injectable - DashboardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DashboardService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dashboard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/dashboard.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeDate(date: moment.Moment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/dashboard.service.ts:13\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    moment.Moment\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     moment.Moment\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        current:     ReplaySubject\n\n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/dashboard.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class DashboardService {\n    public current: ReplaySubject = new ReplaySubject();\n\n    constructor() {\n        this.changeDate(moment());\n    }\n\n    public changeDate(date: moment.Moment): moment.Moment {\n        this.current.next(date);\n        return date;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateObject.html":{"url":"interfaces/DateObject.html","title":"interface - DateObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateObject\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/date.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        current\n                                \n                                \n                                            Optional\n                                        display\n                                \n                                \n                                            Optional\n                                        display1\n                                \n                                \n                                            Optional\n                                        future\n                                \n                                \n                                            Optional\n                                        past\n                                \n                                \n                                        utcDateValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display1\n                                    \n                                \n                                \n                                    \n                                        display1:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        future\n                                    \n                                \n                                \n                                    \n                                        future:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        past\n                                    \n                                \n                                \n                                    \n                                        past:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        utcDateValue\n                                    \n                                \n                                \n                                    \n                                        utcDateValue:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface DateObject {\n    utcDateValue: number;\n    current?: boolean;\n    display?: string;\n    display1?: string;\n    future?: boolean;\n    past?: boolean;\n    active?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/day.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        events\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:     DateObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DateObject\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/day.model.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        events\n                                    \n                                \n                                \n                                    \n                                        events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/day.model.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { DateObject } from \"./date.model\";\nimport { ApiEvent } from \"../../app/models/event\";\n\nexport interface Day {\n    day: DateObject;\n    events: ApiEvent[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventElement.html":{"url":"interfaces/EventElement.html","title":"interface - EventElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventElement\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/day/day.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                                \n                                        height\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     ApiEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/day/day.component.ts:114\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/day/day.component.ts:113\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/day/day.component.ts:112\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { CoreCacheService } from '../../app/services/core-cache.service';\nimport { DateObject, Day } from '../models';\nimport {DATE_FORMAT} from '../../constants.module';\nimport * as moment from 'moment';\nimport { ApiEvent } from '../../app/models/event';\nimport { DashboardService } from '../dashboard.service';\nimport { ApiTodo } from '../../app/models/todo';\n\n@Component({\n    selector: 'mnm-day',\n    templateUrl: 'day.component.html',\n    styleUrls: ['day.component.less']\n})\n\n/**\n * @desc DayComponent\n */\nexport class DayComponent {\n    public current: moment.Moment;\n    public map: Map;\n    public day: Day;\n    public hours: string[] = [];\n    public eventElements: EventElement[] = [];\n    public loading: boolean = true;\n    public Granularity = Granularity;\n    public state: Granularity = Granularity.None;\n\n    private diff = 0;\n    private height = 0;\n\n    constructor(private coreCache: CoreCacheService,\n                private dashboardService: DashboardService) {}\n\n    /**\n     * @desc on init of this component, we want to get the date map and subscribe to the current date\n     */\n    ngOnInit(): void {\n        this.loading = true;\n        this.setHours();\n\n        this.coreCache.GetDateMap().then(map => {\n            this.map = map;\n            this.dashboardService.current.subscribe(cur => {\n                this.current = cur;\n                this.parseDay(this.current.clone());\n                this.loading = false;\n            });\n        });\n    }\n\n    public parseDay(curr: moment.Moment): void {\n        this.eventElements = [];\n        this.diff = 0;\n        this.height = 0;\n        let today = moment().format(DATE_FORMAT);\n        let date = curr.format(DATE_FORMAT);\n\n        let dateValue: DateObject = {\n            current: curr.format(DATE_FORMAT) === today,\n            display: curr.format('dddd, MMMM D'),\n            utcDateValue: curr.utc().valueOf()\n        };\n\n        this.day = {\n            day: dateValue,\n            events: this.map.has(date) ? this.map.get(date) : []\n        };\n\n        this.day.events.forEach(event => {\n            this.eventElements.push({\n                top: this.getStart(event),\n                height: this.getDuration(event),\n                event: event\n            });\n        });\n    }\n\n    public getDuration(v) {\n        let end = moment(v.EndDate + \" \" + v.EndTime);\n\n        let start = moment(v.StartDate + \" \" + v.StartTime);\n        if (moment.duration(end.diff(start)).asDays() >= 1) {\n            end = moment(v.StartDate + \" \" + \"24:00:00\");\n        }\n\n        return this.height = moment.duration(end.clone().diff(start)).asHours() * 100;\n    }\n\n    public getStart(v) {\n        let start = moment(v.StartDate + \" \" + v.StartTime);\n        return this.diff = ((start.hours() + (start.minutes() / 60)) * 100) - this.diff - this.height;\n    }\n\n    private setHours(): void {\n        this.hours.push(12 + 'am');\n        for (let i = 1; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventPopoverComponent.html":{"url":"components/EventPopoverComponent.html","title":"component - EventPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventPopoverComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/event-popover/event-popover.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-event-popover\n            \n\n            \n                styleUrls\n                event-popover.component.less\n            \n\n\n\n            \n                templateUrl\n                event-popover.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/event-popover/event-popover.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        event\n                    \n                    \n                            \n                            Type:    ApiEvent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/dashboard/event-popover/event-popover.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ApiEvent } from '../../app/models/event';\n\n@Component({\n    selector: 'mnm-event-popover',\n    templateUrl: 'event-popover.component.html',\n    styleUrls: ['event-popover.component.less']\n})\n\nexport class EventPopoverComponent {\n    @Input('event') event: ApiEvent;\n    constructor() {}\n}\n\n    \n\n    \n        {{event.Title}}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{event.Title}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupSelectForm.html":{"url":"components/GroupSelectForm.html","title":"component - GroupSelectForm","body":"\n                   \n\n\n\n\n\n  Components\n  GroupSelectForm\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/group/group-select-form/group-select-form.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                group-select\n            \n\n\n\n\n            \n                templateUrl\n                group-select-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groupDropdown\n                            \n                            \n                                groupNotFound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                groupSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                groups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                added\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/group/group-select-form/group-select-form.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                        empty group Form Group\n\n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groups\n                    \n                    \n                        List of groups that the user can choose from\n\n                            \n                            Type:    ApiGroup[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        added\n                    \n                    \n                        Event emitter for when a new group is selected\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addGroup(group: ApiGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:53\n                            \n                        \n\n                \n                    \n                            Adds a group's value to the group form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    ApiGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        groupSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:38\n                            \n                        \n\n                \n                    \n                            Finds a group by search\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDropdown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupDropdown:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:14\n                            \n                        \n\n                \n                    \n                        Dropdown element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupNotFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupNotFound:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:31\n                            \n                        \n\n                \n                    \n                        Boolean to display a message if no groups are found/match your search criteria\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ApiGroup } from '../../models/group';\n\n@Component({\n    selector: 'group-select',\n    templateUrl: 'group-select-form.component.html'\n})\n\nexport class GroupSelectForm {\n    /**\n     * Dropdown element\n     */\n    @ViewChild('groupDropdown') groupDropdown: ElementRef;\n    /**\n     * empty group Form Group\n     */\n    @Input('group') groupForm: FormGroup;\n    /**\n     * List of groups that the user can choose from\n     */\n    @Input('groups') groups: ApiGroup[];\n    /**\n     * Event emitter for when a new group is selected\n     */\n    @Output() added: EventEmitter = new EventEmitter();\n\n    /**\n     * Boolean to display a message if no groups are found/match your search criteria\n     */\n    groupNotFound: boolean = false;\n\n    constructor() {}\n\n    /**\n     * Finds a group by search\n     */\n    public groupSearch(): void {\n        let el = this.groupDropdown.nativeElement;\n        if (el.children.length === 0) {\n            this.groupNotFound = true;\n        } else if (el.children.length === 1 && el.children[0].id === \"not-found\") {\n            this.groupNotFound = true;\n        } else {\n            this.groupNotFound = false;\n        }\n    }\n\n    /**\n     * Adds a group's value to the group form\n     * @param {ApiGroup} group \n     */\n    public addGroup(group: ApiGroup): void {\n        this.groupForm.patchValue(group);\n    }\n}\n\n    \n\n    \n        \n        \n        \n            \n                No Groups Found\n            \n            \n                {{group.Name}}\n            \n        \n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            No Groups Found                                        {{group.Name}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupSelectForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/group/group.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Create\n                            \n                            \n                                    Public\n                                Get\n                            \n                            \n                                    Public\n                                GetAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/group/group.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Create(group: ApiCreateGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group.service.ts:36\n                            \n                        \n\n                \n                    \n                            Attempts to create a new group on the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    ApiCreateGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Get(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group.service.ts:17\n                            \n                        \n\n                \n                    \n                            Gets a group from either server or core cache\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            GetAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group.service.ts:26\n                            \n                        \n\n                \n                    \n                            Gets all groups from the server or core cache\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiGroup, ApiCreateGroup } from '../models/group';\nimport { API_ROOT } from '../../constants.module';\nimport { CoreCacheService } from '../services/core-cache.service';\n\n@Injectable()\n\nexport class GroupService {\n    constructor(private http: Http,\n                private coreCache: CoreCacheService) {}\n\n    /**\n     * Gets a group from either server or core cache\n     * @param {number} id \n     */\n    public Get(id: number): Promise {\n        return this.http.get(API_ROOT + '/group/' + id)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Gets all groups from the server or core cache\n     */\n    public GetAll(): Promise {\n        return this.http.get(API_ROOT + '/group')\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Attempts to create a new group on the server\n     * @param {ApiCreateGroup} group \n     */\n    public Create(group: ApiCreateGroup): Promise {\n        return this.http.post(API_ROOT + '/group', group)\n            .map(res => {\n                let newGroup: ApiGroup = res.json();\n                this.coreCache.AddGroup(newGroup);\n                return newGroup;\n            })\n            .toPromise();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/location-input/location-input.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Address\n                                \n                                \n                                        Latitude\n                                \n                                \n                                        Longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Address\n                                    \n                                \n                                \n                                    \n                                        Address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/shared/location-input/location-input.component.ts:21\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Latitude\n                                    \n                                \n                                \n                                    \n                                        Latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/shared/location-input/location-input.component.ts:22\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Longitude\n                                    \n                                \n                                \n                                    \n                                        Longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/shared/location-input/location-input.component.ts:23\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Component,\n    ElementRef,\n    ViewChild,\n    NgZone,\n    forwardRef,\n    Input,\n    Output,\n    EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { } from 'googlemaps';\nimport { MapsAPILoader } from '@agm/core';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => LocationInput),\n    multi: true\n};\n\nexport interface Location {\n    Address: string;\n    Latitude: number;\n    Longitude: number;\n}\n\n@Component({\n    selector: 'location-input',\n    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],\n    template: `\n        \n        `\n})\nexport class LocationInput implements ControlValueAccessor {\n    @ViewChild('search')\n    public search: ElementRef;\n\n    @Input() disabled: boolean;\n    @Output() change: EventEmitter = new EventEmitter();\n\n    private location: Location;\n    private innerValue: any;\n\n    constructor(\n        private mapApiLoader: MapsAPILoader,\n        private ngZone: NgZone\n    ) {}\n\n    private onTouchedCallback: () => () => {};\n    private onChangeCallback: (_: any) => () => {};\n\n    // get accessor\n    get value(): any {\n        return this.innerValue;\n    };\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n        if (v !== this.innerValue) {\n            this.innerValue = v;\n            this.onChangeCallback(v);\n        }\n\n        // set latitude, longitude and zoom\n        this.change.emit(this.location);\n    }\n\n    ngOnInit(): void {\n        this.location = { Address: \"\", Latitude: 0, Longitude: 0 };\n        this.setCurrentPosition();\n\n        this.mapApiLoader.load().then(() => {\n            let autocomplete = new google.maps.places.Autocomplete(this.search.nativeElement, {\n                types: [\"address\"]\n            });\n            autocomplete.addListener(\"place_changed\", () => {\n                this.ngZone.run(() => {\n                    // get the place result\n                    let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n\n                    // verify result\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n\n                    this.location = {\n                        Address: place.formatted_address,\n                        Latitude: place.geometry.location.lat(),\n                        Longitude: place.geometry.location.lng()\n                    };\n\n                    this.value = place.formatted_address;\n                });\n            });\n        });\n    }\n\n    private setCurrentPosition() {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n            this.location.Latitude = position.coords.latitude;\n            this.location.Longitude = position.coords.longitude;\n            });\n        }\n    }\n\n    // Set touched on blur\n    onBlur() {\n        this.onTouchedCallback();\n    }\n\n    // From ControlValueAccessor interface\n    writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n\n    // From ControlValueAccessor interface\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-login\n            \n\n            \n                styleUrls\n                login.component.less\n            \n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Login\n                            \n                            \n                        \n                    \n                \n                \n                    \nLogin(userInfo: literal type, valid: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                            Attempts to validate credentials and log a user in\nOn success you should be navigated to dashboard\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfo\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        valid\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                        Login form { email: string, password: string }\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'mnm-login',\n    templateUrl: 'login.component.html',\n    styleUrls: ['login.component.less']\n})\n\nexport class LoginComponent {\n    /**\n     * Login form { email: string, password: string }\n     */\n    public loginForm: FormGroup;\n\n    constructor(public router: Router, private authService: AuthService, private fb: FormBuilder) {\n        this.loginForm = this.fb.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required]]\n        });\n    }\n\n    /**\n     * Attempts to validate credentials and log a user in\n     * On success you should be navigated to dashboard\n     * @param { { email: string, password: string } } userInfo \n     * @param {boolean} valid \n     */\n    Login(userInfo: { email: string, password: string }, valid: boolean): void {\n        console.log(userInfo, valid);\n        if (valid) {\n            this.authService.login(userInfo).subscribe(res => {\n                console.log(res);\n                this.router.navigate(['/']);\n            }, err => {\n                console.log(err);\n            });\n        } else {\n            return;\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    Email:\n                    \n                        \n                        Email is required\n                    \n                \n                \n                    Password:\n                    \n                        \n                        Password is required\n                    \n                \n                \n                    \n                        Login\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        Email:                                                                    Email is required                                                                        Password:                                                                    Password is required                                                                                                Login                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberFormComponent.html":{"url":"components/MemberFormComponent.html","title":"component - MemberFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MemberFormComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/user/member/member.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                member-form\n            \n\n\n\n\n            \n                templateUrl\n                member.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                memberDropdown\n                            \n                            \n                                memberNotFound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMember\n                            \n                            \n                                    Public\n                                memberSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                member\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                added\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/user/member/member.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        member\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        users\n                    \n                    \n                            \n                            Type:    ApiUser[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        added\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addMember\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addMember(user: ApiUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:32\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    ApiUser\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            memberSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        memberSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:21\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memberDropdown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        memberDropdown:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memberNotFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        memberNotFound:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { ApiUser } from '../../models/user';\n\n@Component({\n    selector: 'member-form',\n    templateUrl: 'member.component.html'\n})\n\nexport class MemberFormComponent {\n    @ViewChild('memberDropdown') memberDropdown: ElementRef;\n    @Input('member') memberForm: FormGroup;\n    @Input('users') users: ApiUser[];\n    @Output() added: EventEmitter = new EventEmitter();\n\n    memberNotFound: boolean = false;\n\n    constructor() {}\n\n    public memberSearch(): void {\n        let el = this.memberDropdown.nativeElement;\n        if (el.children.length === 0) {\n            this.memberNotFound = true;\n        } else if (el.children.length === 1 && el.children[0].id === \"not-found\") {\n            this.memberNotFound = true;\n        } else {\n            this.memberNotFound = false;\n        }\n    }\n\n    public addMember(user: ApiUser): void {\n        this.memberForm.patchValue(user);\n        this.added.emit(user);\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n            Member Not Found\n        \n        \n            {{user.Name}}\n            {{user.Email}}\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Member Not Found                            {{user.Name}}            {{user.Email}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MemberFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Month.html":{"url":"interfaces/Month.html","title":"interface - Month","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Month\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/month.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        weekdays\n                                \n                                \n                                        weeks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/month.model.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weekdays\n                                    \n                                \n                                \n                                    \n                                        weekdays:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/month.model.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weeks\n                                    \n                                \n                                \n                                    \n                                        weeks:     Week[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Week[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/month.model.ts:5\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Week } from \"./week.model\";\n\nexport interface Month {\n    name: string;\n    weeks: Week[];\n    weekdays: string[];\n}\n\nexport const Months: string[] = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'November',\n    'December'\n];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgbDateNativeAdapter.html":{"url":"injectables/NgbDateNativeAdapter.html","title":"injectable - NgbDateNativeAdapter","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgbDateNativeAdapter\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datepicker-adapter.component.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromModel\n                            \n                            \n                                toModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromModel\n                            \n                            \n                        \n                    \n                \n                \n                    \nfromModel(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/datepicker-adapter.component.ts:7\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     NgbDateStruct\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toModel\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoModel(date: NgbDateStruct)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/datepicker-adapter.component.ts:11\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    NgbDateStruct\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbDateAdapter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter {\n\n  fromModel(date: Date): NgbDateStruct {\n    return (date && date.getFullYear) ? {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()} : null;\n  }\n\n  toModel(date: NgbDateStruct): Date {\n    return date ? new Date(date.year, date.month - 1, date.day) : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/shared/not-found/not-found.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                not-found\n            \n\n            \n                styleUrls\n                not-found.component.less\n            \n\n\n\n            \n                templateUrl\n                not-found.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'not-found',\n    templateUrl: 'not-found.component.html',\n    styleUrls: ['not-found.component.less']\n})\n\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n            Page was not found\n            Back to Dashboard\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Page was not found            Back to Dashboard            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadModel.html":{"url":"interfaces/PayloadModel.html","title":"interface - PayloadModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Events\n                                \n                                \n                                        Groups\n                                \n                                \n                                        Todo\n                                \n                                \n                                        User\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Events\n                                    \n                                \n                                \n                                    \n                                        Events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:18\n                                        \n                                    \n\n                            \n                                \n                                    List of events that current user has access to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Groups\n                                    \n                                \n                                \n                                    \n                                        Groups:     ApiGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiGroup[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:14\n                                        \n                                    \n\n                            \n                                \n                                    List of groups that current user has access to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Todo\n                                    \n                                \n                                \n                                    \n                                        Todo:     ApiTodo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiTodo[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:22\n                                        \n                                    \n\n                            \n                                \n                                    List of todos for current user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        User\n                                    \n                                \n                                \n                                    \n                                        User:     ApiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiUser\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:10\n                                        \n                                    \n\n                            \n                                \n                                    Current user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from './user';\nimport { ApiEvent } from './event';\nimport { ApiGroup } from './group';\nimport { ApiTodo } from './todo';\n\nexport interface PayloadModel {\n    /**\n     * Current user\n     */\n    User: ApiUser;\n    /**\n     * List of groups that current user has access to\n     */\n    Groups: ApiGroup[];\n    /**\n     * List of events that current user has access to\n     */\n    Events: ApiEvent[];\n    /**\n     * List of todos for current user\n     */\n    Todo: ApiTodo[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Recurring.html":{"url":"interfaces/Recurring.html","title":"interface - Recurring","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Recurring\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Days\n                                \n                                \n                                        RepeatWeekly\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Days\n                                    \n                                \n                                \n                                    \n                                        Days:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/event.ts:85\n                                        \n                                    \n\n                            \n                                \n                                    Binary number that maps to days of the week that it should be recurring\nex) 0101101, maps to every monday, wednesday, thursday, saturday\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RepeatWeekly\n                                    \n                                \n                                \n                                    \n                                        RepeatWeekly:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/event.ts:86\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from \"./user\";\nimport { ApiGroup } from \"./group\";\n\nexport enum NotificationGranularity {\n    Minutes,\n    Hours,\n    Days,\n    Weeks\n}\n\nexport interface ApiCreateEvent {\n    /**\n     * Title ex) Doctors Appointment\n     */\n    Title: string;\n    /**\n     * Id of the member that made the event\n     */\n    OwnerId: number;\n    /**\n     * Time of day that the event should start\n     */\n    StartTime: string;\n    /**\n     * Time of day that the event should end\n     */\n    EndTime: string;\n    /**\n     * Date of the event (start date)\n     */\n    StartDate: string;\n    /**\n     * End date\n     */\n    EndDate?: string;\n    /** \n     * Either basic location or address\n     */\n    Location?: string;\n    /**\n     * Notes or description of the event\n     */\n    Notes?: string;\n    /**\n     * List of member's who are invited to the event\n     */\n    Members: ApiUser[];\n    /**\n     * How many (minutes/hours/days/weeks) before the event that the user should be notifed\n     */\n    NotificationValue?: number;\n    /**\n     * Notification granularity (minutes/hours/days/weeks)\n     */\n    NotificationGranularity?: NotificationGranularity;\n    /**\n     * group id that this event should belong to, if in a group\n     */\n    GroupId?: number;\n    /**\n     * Color of the event in the form of a hash code (#00000)\n     */\n    Color?: string;\n\n    /**\n     * If it should be hidden on the calendar\n     */\n    Hidden?: boolean;\n\n    Recurring?: Recurring;\n}\n\nexport interface ApiEvent extends ApiCreateEvent {\n    /**\n     * Id of the event\n     */\n    Id: number;\n}\n\nexport interface Recurring {\n    /**\n     * Binary number that maps to days of the week that it should be recurring\n     * ex) 0101101, maps to every monday, wednesday, thursday, saturday\n     */\n    Days: number;\n    RepeatWeekly: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchFilterPipe.html":{"url":"injectables/SearchFilterPipe.html","title":"injectable - SearchFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SearchFilterPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/combo-box/search.pipe.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                filter\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filter(items: Array, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:26\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                List of items to filter\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a string term to compare with every property of the list\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: any, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                object from array\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                term's search\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Injectable } from \"@angular/core\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\n@Injectable()\nexport class SearchFilterPipe implements PipeTransform {\n\n  /**\n   * @param items object from array\n   * @param term term's search\n   */\n  transform(items: any, term: string): any {\n    if (!term || !items) return items;\n\n    return SearchFilterPipe.filter(items, term);\n  }\n\n  /**\n   * \n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   * \n   */\n  static filter(items: Array, term: string): Array {\n\n    const toCompare = term.toLowerCase();\n\n    return items.filter((item: any) => {\n      for (let property in item) {\n        if (item[property] === null) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchFilterPipe-1.html":{"url":"injectables/SearchFilterPipe-1.html","title":"injectable - SearchFilterPipe-1","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SearchFilterPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/combo-box/search.pipe.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                filter\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filter(items: Array, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:26\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                List of items to filter\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a string term to compare with every property of the list\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: any, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                object from array\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                term's search\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Injectable } from \"@angular/core\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\n@Injectable()\nexport class SearchFilterPipe implements PipeTransform {\n\n  /**\n   * @param items object from array\n   * @param term term's search\n   */\n  transform(items: any, term: string): any {\n    if (!term || !items) return items;\n\n    return SearchFilterPipe.filter(items, term);\n  }\n\n  /**\n   * \n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   * \n   */\n  static filter(items: Array, term: string): Array {\n\n    const toCompare = term.toLowerCase();\n\n    return items.filter((item: any) => {\n      for (let property in item) {\n        if (item[property] === null) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/session.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserId\n                    \n                \n\n                \n                    \n                        getcurrentUserId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class SessionService {\n    get currentUserId(): number {\n        return +(localStorage.getItem('user_id'));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.less\n            \n\n\n\n            \n                templateUrl\n                sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                groups\n                            \n                            \n                                    Public\n                                isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterGroup\n                            \n                            \n                                    Public\n                                newGroup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                togglePanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/sidebar/sidebar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterGroup(group: ApiGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/sidebar/sidebar.component.ts:26\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    ApiGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        newGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/sidebar/sidebar.component.ts:22\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/sidebar/sidebar.component.ts:18\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            togglePanel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        togglePanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/sidebar/sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groups:     ApiGroup[]\n\n                    \n                \n                    \n                        \n                            Type :     ApiGroup[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/sidebar/sidebar.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/sidebar/sidebar.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CoreCacheService } from '../../app/services/core-cache.service';\nimport { ApiGroup } from '../../app/models/group';\n\n@Component({\n    selector: 'mnm-sidebar',\n    templateUrl: 'sidebar.component.html',\n    styleUrls: ['sidebar.component.less']\n})\n\nexport class SidebarComponent {\n    public groups: ApiGroup[];\n    public isOpen: boolean = true;\n    constructor(private router: Router,\n                private coreCache: CoreCacheService) {}\n\n    ngOnInit(): void {\n        this.coreCache.GetGroups().then(groups => this.groups = groups);\n    }\n\n    public newGroup(): void {\n        this.router.navigate(['group/create']);\n    }\n\n    public filterGroup(group: ApiGroup): void {\n        group.ShowEvents = !group.ShowEvents;\n        this.coreCache.FilterEventsByGroup(group);\n    }\n\n    public togglePanel(): boolean {\n        this.isOpen = !this.isOpen;\n        return this.isOpen;\n    }\n}\n\n    \n\n    \n        \n    \n        Sidebar\n        New Group\n        \n            My Groups\n            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    {{group.Name}}\n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sidebar        New Group                    My Groups                                                                                                                                    {{group.Name}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoListComponent.html":{"url":"components/TodoListComponent.html","title":"component - TodoListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TodoListComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/todo-list/todo-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                todo-list\n            \n\n            \n                styleUrls\n                todo-list.component.less\n            \n\n\n\n            \n                templateUrl\n                todo-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                newTodo\n                            \n                            \n                                    Public\n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                removeTodo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoService: TodoListService, dashboardService: DashboardService)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/todo-list/todo-list.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    todoService\n                                                  \n                                                        \n                                                                    TodoListService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    dashboardService\n                                                  \n                                                        \n                                                                    DashboardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTodo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:27\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:33\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        date:     moment.Moment\n\n                    \n                \n                    \n                        \n                            Type :     moment.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newTodo:     ApiTodo\n\n                    \n                \n                    \n                        \n                            Type :     ApiTodo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            todos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        todos:     ApiTodo[]\n\n                    \n                \n                    \n                        \n                            Type :     ApiTodo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ApiTodo, Todo } from '../../app/models/todo';\nimport { TodoListService } from './todo-list.service';\nimport { DashboardService } from '../dashboard.service';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'todo-list',\n    templateUrl: 'todo-list.component.html',\n    styleUrls: ['todo-list.component.less']\n})\n\nexport class TodoListComponent {\n    public newTodo: ApiTodo;\n    public date: moment.Moment;\n\n    public todos: ApiTodo[] = [];\n\n    constructor(private todoService: TodoListService,\n                private dashboardService: DashboardService) {\n                    this.dashboardService.current.subscribe(date => {\n                        this.date = date;\n                        this.newTodo = Todo(date.toDate());\n                    });\n                }\n\n    addTodo(): void {\n        this.todos.push(this.newTodo);\n        this.todoService.addTodo(this.newTodo);\n        this.newTodo = Todo(this.date.toDate());\n    }\n\n    removeTodo(todo: ApiTodo): void {\n        let index = this.todos.indexOf(todo);\n        if (index > -1) {\n            this.todos.splice(index, 1);\n            this.todoService.removeTodo(todo);\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n     0\">\n        \n            \n                \n                    \n                    \n                    \n                    {{todo.Title}}\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     0\">                                                                                                                    {{todo.Title}}                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoListService.html":{"url":"injectables/TodoListService.html","title":"injectable - TodoListService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TodoListService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/todo-list/todo-list.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                getTodo\n                            \n                            \n                                getTodos\n                            \n                            \n                                removeTodo\n                            \n                            \n                                updateTodo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/todo-list/todo-list.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:18\n                            \n                        \n\n                \n                    \n                            Create a new todo\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTodo(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:48\n                            \n                        \n\n                \n                    \n                            Gets a todo from the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTodos\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTodos()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:57\n                            \n                        \n\n                \n                    \n                            Gets all the todos from the server\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:28\n                            \n                        \n\n                \n                    \n                            Delete a todo on the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:38\n                            \n                        \n\n                \n                    \n                            Updates the todo on the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiTodo } from '../../app/models/todo';\nimport { API_ROOT } from '../../constants.module';\n\n@Injectable()\n\n/**\n * CRUD+ Service for Todo List\n */\nexport class TodoListService {\n    constructor(private http: Http) {}\n\n    /**\n     * Create a new todo\n     * @param {ApiTodo} todo \n     */\n    addTodo(todo: ApiTodo): Promise {\n        return this.http.post(API_ROOT + '/todo', todo)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Delete a todo on the server\n     * @param todo \n     */\n    removeTodo(todo: ApiTodo): Promise {\n        return this.http.delete(API_ROOT + '/todo/' + todo.Id)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Updates the todo on the server\n     * @param todo\n     */\n    updateTodo(todo: ApiTodo): Promise {\n        return this.http.put(API_ROOT + '/todo/' + todo.Id, todo)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Gets a todo from the server\n     * @param id\n     */\n    getTodo(id: number): Promise {\n        return this.http.get(API_ROOT + '/todo/' + id)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Gets all the todos from the server\n     */\n    getTodos(): Promise {\n        return this.http.get(API_ROOT + '/todo')\n            .map(res => res.json())\n            .toPromise();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Create\n                            \n                            \n                                    Public\n                                Get\n                            \n                            \n                                    Public\n                                GetAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Create(user: ApiCreateUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.service.ts:34\n                            \n                        \n\n                \n                    \n                            Attempts to create a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    ApiCreateUser\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Get(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.service.ts:24\n                            \n                        \n\n                \n                    \n                            Gets a user from the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            GetAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            Gets all users from the server\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiUser, ApiCreateUser } from '../models/user';\nimport { API_ROOT } from '../../constants.module';\n\n@Injectable()\n\nexport class UserService {\n    constructor(private http: Http) {}\n\n    /**\n     * Gets all users from the server\n     */\n    public GetAll(): Promise {\n        return this.http.get(API_ROOT + '/user')\n                .map(res => res.json())\n                .toPromise();\n    }\n\n    /**\n     * Gets a user from the server\n     * @param {number} id\n     */\n    public Get(id: number): Promise {\n        return this.http.get(API_ROOT + '/user')\n                .map(res => res.json())\n                .toPromise();\n    }\n\n    /**\n     * Attempts to create a new user\n     * @param {ApiCreateUser} user \n     */\n    public Create(user: ApiCreateUser): Promise {\n        return this.http.post(API_ROOT + '/user', user)\n                .map(res => res.json())\n                .toPromise();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Week.html":{"url":"interfaces/Week.html","title":"interface - Week","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Week\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/week.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        days\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/week.model.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        days\n                                    \n                                \n                                \n                                    \n                                        days:     Day[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Day[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/week.model.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Day } from './day.model';\n\nexport interface Week {\n    days: Day[];\n    current: boolean;\n}\n\nexport const WeekDays: string[] = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.2\n        \n            @angular/animations : ^5.0.0\n        \n            @angular/common : ^5.0.0\n        \n            @angular/compiler : ^5.0.0\n        \n            @angular/compiler-cli : ^5.0.0\n        \n            @angular/core : ^5.0.0\n        \n            @angular/forms : ^5.0.0\n        \n            @angular/http : ^5.0.0\n        \n            @angular/platform-browser : ^5.0.0\n        \n            @angular/platform-browser-dynamic : ^5.0.0\n        \n            @angular/router : ^5.0.0\n        \n            @ng-bootstrap/ng-bootstrap : 1.0.0\n        \n            bootstrap : 4.0.0\n        \n            core-js : ^2.4.1\n        \n            font-awesome : ^4.7.0\n        \n            google : ^2.1.0\n        \n            googleapis : ^27.0.0\n        \n            moment : ^2.20.1\n        \n            ngx-bootstrap : ^2.0.3\n        \n            rxjs : ^5.5.0\n        \n            zone.js : ^0.8.4\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Granularity   (src/.../day.component.ts)\n                        \n                        \n                            NotificationGranularity   (src/.../event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dashboard/day/day.component.ts\n    \n        \n            \n                \n                    \n                        \n                        Granularity\n                    \n                \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                 Workout\n                            \n                        \n                        \n                            \n                                 Budget\n                            \n                        \n            \n        \n\n    src/app/models/event.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationGranularity\n                    \n                \n                        \n                            \n                                 Minutes\n                            \n                        \n                        \n                            \n                                 Hours\n                            \n                        \n                        \n                            \n                                 Days\n                            \n                        \n                        \n                            \n                                 Weeks\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            httpFactory   (src/.../interceptor.ts)\n                        \n                        \n                            Todo   (src/.../todo.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nhttpFactory(xhrBackend: undefined, requestOptions: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        xhrBackend\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        requestOptions\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/models/todo.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Todo\n                            \n                            \n                        \n                    \n                \n                \n                    \nTodo(date: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMeet and Manage\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nEditEventComponent\n\nEditEventComponent\n\nAppModule -->\n\nEditEventComponent->AppModule\n\n\n\n\n\nComboBoxComponent\n\nComboBoxComponent\n\nAppModule -->\n\nComboBoxComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nLocationInput\n\nLocationInput\n\nAppModule -->\n\nLocationInput->AppModule\n\n\n\n\n\nCreateGroupComponent\n\nCreateGroupComponent\n\nAppModule -->\n\nCreateGroupComponent->AppModule\n\n\n\n\n\nMemberFormComponent\n\nMemberFormComponent\n\nAppModule -->\n\nMemberFormComponent->AppModule\n\n\n\n\n\nGroupSelectForm\n\nGroupSelectForm\n\nAppModule -->\n\nGroupSelectForm->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nCoreCacheService\n\nCoreCacheService\n\nAppModule -->\n\nCoreCacheService->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nEventService\n\nEventService\n\nAppModule -->\n\nEventService->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nAppModule -->\n\nGroupService->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nDashboardModule -->\n\nSidebarComponent->DashboardModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nDashboardModule -->\n\nHeaderComponent->DashboardModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nDashboardModule -->\n\nMonthComponent->DashboardModule\n\n\n\n\n\nDayComponent\n\nDayComponent\n\nDashboardModule -->\n\nDayComponent->DashboardModule\n\n\n\n\n\nWeekComponent\n\nWeekComponent\n\nDashboardModule -->\n\nWeekComponent->DashboardModule\n\n\n\n\n\nEventPopoverComponent\n\nEventPopoverComponent\n\nDashboardModule -->\n\nEventPopoverComponent->DashboardModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nDashboardModule -->\n\nTodoListComponent->DashboardModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\nTodoListService\n\nTodoListService\n\nDashboardModule -->\n\nTodoListService->DashboardModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        17 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        15 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
