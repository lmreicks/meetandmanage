var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiCreateGroup.html",[0,0.343,1,2.343]],["body/interfaces/ApiCreateGroup.html",[0,0.593,1,4.046,2,0.205,3,0.171,4,0.205,5,3.67,6,0.275,7,0.883,8,1.159,9,3.299,10,2.203,11,1.092,12,1.927,13,0.538,14,0.024,15,0.484,16,4.324,17,2.502,18,4.324,19,4.324,20,0.441,21,2.264,22,2.318,23,1.402,24,0.216,25,1.833,26,2.661,27,1.833,28,1.335,29,3.67,30,1.335,31,0.018,32,0.018]],["title/interfaces/ApiCreateUser.html",[0,0.343,33,2.343]],["body/interfaces/ApiCreateUser.html",[0,0.615,2,0.222,3,0.185,4,0.222,6,0.298,7,0.929,11,1.153,12,2.011,13,0.516,14,0.023,15,0.464,17,1.863,24,0.227,27,1.989,28,1.448,31,0.019,32,0.019,33,3.881,34,3.981,35,4.491,36,4.69,37,4.69]],["title/interfaces/ApiEvent.html",[0,0.343,22,1.472]],["body/interfaces/ApiEvent.html",[0,0.537,2,0.142,3,0.119,4,0.142,6,0.191,7,0.691,9,1.575,10,1.497,12,1.823,13,0.27,14,0.025,15,0.243,17,1.701,20,0.346,21,2.242,22,1.816,23,1.681,24,0.215,25,1.275,26,2.635,27,2.662,28,1.973,30,0.929,31,0.014,32,0.014,38,2.253,39,4.233,40,3.007,41,1.638,42,2.553,43,3.736,44,2.253,45,2.029,46,2.435,47,1.322,48,3.208,49,3.635,50,2.553,51,2.553,52,2.553,53,2.553,54,2.89,55,2.89,56,2.553,57,3.208,58,2.553,59,2.427,60,2.553,61,2.553,62,2.553,63,1.497,64,2.253,65,3.635,66,1.851,67,2.553,68,2.553,69,2.553,70,3.635,71,2.553,72,3.635,73,2.553,74,2.029,75,2.553,76,2.553,77,3.635,78,2.253,79,2.553,80,2.253,81,2.553,82,3.635,83,2.553,84,4.071,85,2.553,86,2.89,87,2.553,88,2.253,89,2.253,90,2.253,91,2.253,92,2.553]],["title/interfaces/ApiGroup.html",[0,0.343,25,1.472]],["body/interfaces/ApiGroup.html",[0,0.591,1,4.035,2,0.203,3,0.17,4,0.203,5,3.647,6,0.273,7,0.879,8,1.154,9,2.25,10,1.502,11,0.745,12,1.581,13,0.536,14,0.024,15,0.482,17,2.163,20,0.439,21,2.25,22,2.666,23,1.663,24,0.215,25,2.309,26,3.351,27,2.666,28,1.846,29,5.336,30,1.846,31,0.018,32,0.018,93,4.297,94,4.297,95,4.297]],["title/interfaces/ApiTodo.html",[0,0.343,96,1.965]],["body/interfaces/ApiTodo.html",[0,0.521,2,0.193,3,0.161,4,0.193,6,0.259,7,0.851,8,1.307,9,3.343,12,1.898,13,0.572,14,0.024,15,0.515,24,0.208,27,2.615,28,1.802,30,1.802,31,0.018,32,0.018,48,4.783,59,3.343,96,3.303,97,3.464,98,6.384,99,4.081,100,4.081,101,4.081,102,4.081,103,4.081,104,3.058,105,3.464,106,0.923,107,1.986]],["title/interfaces/ApiUser.html",[0,0.343,17,1.379]],["body/interfaces/ApiUser.html",[0,0.607,2,0.215,3,0.18,4,0.215,6,0.289,7,0.912,11,1.143,12,2,13,0.55,14,0.023,15,0.495,17,2.242,24,0.223,27,2.721,28,1.895,31,0.019,32,0.019,33,3.071,34,3.863,35,4.452,108,4.551,109,4.551,110,4.551]],["title/components/AppComponent.html",[111,0.736,112,1.293]],["body/components/AppComponent.html",[2,0.155,3,0.13,4,0.155,8,0.695,10,1.146,11,0.978,13,0.294,14,0.024,15,0.265,20,0.422,23,0.841,24,0.13,31,0.015,32,0.015,41,1.077,47,1.012,63,1.146,111,1.257,112,2.102,113,1.39,114,1.487,115,1.487,116,3.278,117,1.487,118,4.55,119,5.645,120,2.791,121,2.214,122,4.55,123,1.929,124,4.55,125,0.895,126,3.278,127,3.214,128,3.216,129,2.747,130,3.278,131,0.895,132,0.492,133,2.456,134,2.456,135,1.855,136,0.529,137,1.487,138,1.487,139,1.146,140,2.064,141,2.064,142,1.929,143,2.561,144,1.487,145,1.487,146,1.302,147,1.487,148,1.487,149,1.302,150,1.302,151,1.487,152,1.221,153,2.763,154,1.487,155,1.221,156,1.487,157,1.302,158,1.487,159,1.487,160,1.221,161,1.487,162,1.221,163,1.487,164,1.302,165,1.487,166,1.221,167,1.487,168,1.221,169,1.487,170,1.221,171,1.487,172,1.302,173,1.487,174,1.221,175,1.487,176,1.221,177,1.487,178,1.221,179,1.146,180,1.487,181,1.302,182,1.302,183,1.487,184,1.302,185,1.487,186,1.807,187,1.487]],["title/modules/AppModule.html",[188,1.575,189,2.343]],["body/modules/AppModule.html",[2,0.097,3,0.081,4,0.097,14,0.024,20,0.557,24,0.127,31,0.011,32,0.011,112,2.274,127,2.712,129,2.52,132,0.309,133,1.542,134,1.542,135,1.165,136,0.332,139,0.72,146,2.057,149,2.057,157,2.057,162,1.929,166,1.929,168,1.929,170,1.929,174,1.929,188,1.463,189,4.716,190,1.165,191,2.682,192,2.931,193,3.005,194,1.747,195,1.747,196,1.747,197,1.747,198,1.747,199,3.188,200,3.188,201,3.495,202,4.396,203,3.495,204,3.188,205,3.495,206,1.984,207,1.389,208,1.267,209,2.058,210,2.737,211,1.542,212,1.389,213,2.415,214,1.747,215,2.737,216,1.389,217,1.389,218,2.737,219,2.737,220,1.078,221,3.224,222,1.747,223,1.747,224,2.737,225,1.688,226,2.415,227,2.415,228,1.002,229,2.058,230,2.058,231,2.058,232,2.058,233,2.058,234,1.747,235,2.415,236,2.058,237,2.058,238,2.415,239,2.058,240,2.058,241,2.058,242,2.058,243,2.058,244,2.058,245,1.747,246,1.002,247,3.224,248,2.058,249,2.058,250,2.058,251,2.415,252,2.058,253,2.058,254,2.058,255,3.224,256,2.058,257,2.058,258,1.984,259,2.058,260,2.058,261,1.747,262,2.058,263,2.058,264,1.542,265,2.058,266,2.058,267,1.747,268,2.058,269,2.058,270,3.224,271,2.058,272,2.058,273,2.058,274,2.737,275,1.747,276,2.058,277,1.747,278,2.058,279,2.058,280,2.058,281,2.058,282,1.747,283,2.058,284,2.058,285,2.058,286,2.058,287,2.058,288,1.542,289,2.058,290,2.058,291,1.747,292,1.747]],["title/injectables/AuthGuard.html",[201,2.343,293,0.689]],["body/injectables/AuthGuard.html",[2,0.185,3,0.155,4,0.185,6,0.249,7,0.829,8,0.831,11,0.679,13,0.513,14,0.024,15,0.49,20,0.462,24,0.155,30,1.585,31,0.017,32,0.017,106,1.294,107,1.907,125,1.069,127,3.386,131,1.069,132,0.588,136,0.633,201,3.464,246,1.907,293,1.136,294,6.303,295,3.919,296,2.204,297,6.303,298,4.257,299,1.686,300,6.467,301,3.919,302,3.919,303,3.919,304,5.132,305,3.919,306,2.645,307,2.936,308,3.919,309,3.327,310,1.778]],["title/injectables/AuthService.html",[127,1.818,293,0.689]],["body/injectables/AuthService.html",[2,0.132,3,0.11,4,0.132,6,0.178,7,0.656,8,1.014,11,0.829,12,1.179,13,0.5,14,0.024,15,0.47,20,0.485,24,0.11,30,1.254,31,0.014,32,0.014,35,1.886,54,3.229,106,1.392,125,0.763,127,2.127,128,2.945,129,2.556,131,1.306,132,0.419,135,1.582,136,0.451,138,2.532,225,3.146,228,1.36,246,1.36,293,0.95,296,2.258,298,3.975,299,1.335,307,2.094,309,2.372,311,2.795,312,5.253,313,4.062,314,5.253,315,4.062,316,1.886,317,2.795,318,2.795,319,3.448,320,3.448,321,2.795,322,2.372,323,4.062,324,2.795,325,2.383,326,4.062,327,2.795,328,2.795,329,2.795,330,1.72,331,1.582,332,2.094,333,2.372,334,2.372,335,2.372,336,2.795,337,4.062,338,3.448,339,1.886,340,2.795,341,4.062,342,1.72,343,2.795,344,3.585,345,2.795,346,2.795,347,2.795,348,2.795,349,2.795,350,2.795,351,2.795,352,2.795,353,2.795,354,2.795,355,2.795,356,2.795,357,4.062,358,2.795,359,2.795,360,2.795,361,2.795,362,2.372,363,2.795,364,2.795,365,2.795,366,2.795,367,1.72,368,2.372,369,2.795,370,2.795,371,2.795,372,1.582]],["title/components/DashboardComponent.html",[111,0.736,152,1.293]],["body/components/DashboardComponent.html",[2,0.159,3,0.133,4,0.159,8,0.713,10,1.177,11,0.989,13,0.302,14,0.024,15,0.272,20,0.428,23,0.863,24,0.133,31,0.016,32,0.016,41,1.106,47,1.039,63,1.177,111,1.269,112,1.254,113,1.427,114,1.527,115,1.527,117,1.527,120,2.798,121,2.255,123,1.965,125,0.918,131,0.918,132,0.505,136,0.543,137,1.527,139,1.177,140,2.102,141,2.102,142,1.965,143,2.59,144,1.527,145,1.527,146,1.337,147,1.527,148,1.527,149,1.337,150,1.337,151,1.527,152,2.126,153,2.84,154,1.527,155,1.254,156,1.527,157,1.337,158,1.527,159,1.527,160,1.254,161,1.527,162,1.254,163,1.527,164,1.337,165,1.527,166,1.254,167,1.527,168,1.254,169,1.527,170,1.254,171,1.527,172,1.337,173,1.527,174,1.254,175,1.527,176,1.254,177,1.527,178,1.254,179,1.177,180,1.527,181,1.337,182,1.337,183,1.527,184,1.337,185,1.527,186,1.84,187,1.527,246,1.638,298,3.808,316,2.271,373,3.366,374,3.933,375,4.634,376,4.634,377,3.366,378,2.852]],["title/modules/DashboardModule.html",[188,1.575,200,2.136]],["body/modules/DashboardModule.html",[2,0.128,3,0.107,4,0.128,14,0.024,20,0.551,23,0.691,24,0.204,31,0.013,32,0.013,132,0.405,136,0.435,139,0.943,152,2.495,155,2.142,160,2.142,164,2.284,172,2.284,176,2.142,178,2.142,179,1.384,181,2.284,188,1.795,190,1.526,191,3.164,192,3.113,193,3.179,200,4.285,206,2.436,207,1.82,208,1.66,210,3.359,211,2.02,212,1.82,213,2.965,214,2.289,216,1.82,217,1.82,218,3.359,219,3.359,220,1.412,224,3.359,225,2.072,226,2.965,227,2.965,228,1.312,234,2.289,235,2.02,238,2.965,245,3.359,246,1.312,277,2.289,282,2.289,291,2.289,292,2.289,379,2.289,380,2.289,381,2.289,382,2.289,383,3.254,384,3.539,385,2.696,386,2.696,387,2.696,388,2.696,389,2.696,390,2.289,391,2.696,392,2.696,393,2.696,394,2.696,395,2.696,396,2.02,397,2.696,398,2.965,399,2.696,400,2.289]],["title/injectables/DashboardService.html",[293,0.689,383,1.965]],["body/injectables/DashboardService.html",[2,0.195,3,0.163,4,0.195,6,0.262,7,0.856,8,0.873,11,0.714,13,0.475,14,0.024,15,0.473,20,0.473,24,0.163,31,0.018,32,0.018,59,2.579,106,1.198,125,1.599,131,1.124,132,0.618,136,0.665,293,1.163,296,2.292,299,1.741,332,3.085,367,3.808,378,3.262,383,3,401,4.118,402,5.299,403,5.299,404,5.299,405,4.797,406,4.118,407,6.554,408,2.534,409,2.331,410,2.775,411,4.118,412,4.118]],["title/interfaces/DateObject.html",[0,0.343,413,2.136]],["body/interfaces/DateObject.html",[0,0.51,2,0.186,3,0.156,4,0.186,6,0.25,7,0.832,8,1.467,12,1.88,13,0.592,14,0.023,15,0.532,24,0.156,28,1.772,30,2.138,31,0.017,32,0.017,367,3.745,368,5.165,413,3.17,414,3.942,415,6.085,416,5.165,417,6.085,418,6.085,419,5.165,420,3.942,421,3.942,422,3.942,423,3.942,424,3.942,425,3.942,426,3.942]],["title/interfaces/Day.html",[0,0.343,46,1.472]],["body/interfaces/Day.html",[0,0.57,2,0.223,3,0.186,4,0.223,6,0.299,7,0.931,13,0.517,14,0.024,15,0.465,20,0.465,22,2.753,23,1.665,24,0.186,31,0.019,32,0.019,46,2.875,413,3.996,427,4.706,428,4.706,429,4.706,430,4.706,431,3.526]],["title/interfaces/Day-1.html",[0,0.287,46,1.23,432,1.412]],["body/interfaces/Day-1.html",[0,0.363,2,0.115,3,0.096,4,0.115,6,0.281,7,0.593,13,0.329,14,0.025,15,0.296,17,1.459,20,0.518,22,2.35,23,1.475,24,0.096,25,2.085,28,0.753,31,0.012,32,0.012,41,0.802,46,2.35,86,3.318,106,1.452,107,1.187,129,1.187,132,0.366,136,0.394,137,1.107,138,2.393,225,2.314,228,1.187,293,0.729,296,1.844,310,1.107,323,2.071,325,1.667,330,1.501,331,1.381,342,1.501,344,1.828,372,1.381,410,2.762,413,3.026,432,1.187,433,4.418,434,2.44,435,2.44,436,2.44,437,2.44,438,2.44,439,2.44,440,2.44,441,2.44,442,2.44,443,3.31,444,2.44,445,1.828,446,2.44,447,2.44,448,4.917,449,1.828,450,2.44,451,2.44,452,3.881,453,2.44,454,2.44,455,2.44,456,2.44,457,2.44,458,3.674,459,4.917,460,2.44,461,2.44,462,2.44,463,1.646,464,1.646,465,2.44,466,1.646,467,2.44,468,4.418,469,2.44,470,2.44,471,3.118,472,2.44,473,2.44,474,1.381,475,2.44,476,3.674,477,4.418,478,2.44,479,3.674,480,2.44,481,2.44,482,2.44,483,2.44,484,2.44,485,2.44,486,2.44,487,2.44,488,4.418,489,2.44,490,3.674,491,2.44,492,2.44,493,2.44,494,2.44,495,2.44,496,2.44,497,2.44,498,2.44,499,2.44,500,2.44,501,2.071,502,2.44,503,2.44,504,2.44,505,2.44]],["title/modules/DropdownModule.html",[188,1.575,199,2.136]],["body/modules/DropdownModule.html",[2,0.187,3,0.156,4,0.187,14,0.024,20,0.416,24,0.241,31,0.017,32,0.017,106,0.894,132,0.593,136,0.638,139,1.382,182,2.733,184,2.733,186,2.733,188,2.342,190,2.237,191,3.483,192,2.237,193,2.433,199,4.304,206,3.176,207,2.668,208,2.433,213,3.867,506,3.355,507,3.355,508,3.355,509,3.953,510,5.161,511,3.953,512,2.237,513,5.747,514,3.953,515,2.962,516,3.953]],["title/interfaces/EventElement.html",[0,0.343,517,2.947]],["body/interfaces/EventElement.html",[0,0.245,2,0.117,3,0.098,4,0.117,6,0.157,7,0.6,12,0.72,13,0.4,14,0.025,15,0.36,20,0.48,22,1.892,23,1.43,24,0.098,28,1.531,30,0.766,31,0.013,32,0.013,45,1.673,46,2.252,55,2.509,57,2.786,59,2.171,74,3.011,86,3.345,96,1.403,106,0.84,107,1.206,111,0.946,120,0.985,121,1.206,123,1.051,128,1.526,129,1.809,132,0.372,135,1.403,136,0.4,137,1.125,138,2.249,153,1.051,155,1.385,296,2.2,310,1.687,325,2.024,331,1.403,367,2.746,378,2.288,383,2.525,396,1.857,405,2.786,413,2.288,416,2.104,419,2.104,431,1.857,432,1.809,474,2.806,517,3.787,518,2.104,519,5.311,520,4.957,521,2.479,522,2.479,523,2.479,524,2.104,525,2.479,526,2.479,527,1.857,528,2.479,529,2.479,530,3.718,531,2.479,532,2.479,533,2.479,534,2.479,535,2.479,536,2.479,537,2.479,538,1.857,539,3.718,540,2.479,541,2.479,542,2.479,543,2.479,544,2.479,545,2.479,546,2.479,547,2.479,548,2.479,549,4.461,550,4.461,551,3.718,552,2.479,553,3.718,554,3.718,555,2.479,556,2.479,557,2.479,558,2.479,559,2.479,560,2.479,561,2.479,562,2.479,563,2.479,564,2.479,565,2.479,566,2.479,567,2.479,568,2.479,569,4.461,570,3.718,571,2.479,572,2.479,573,2.479,574,3.718,575,2.479,576,2.479,577,2.479,578,2.479,579,2.479,580,2.479]],["title/components/EventPopoverComponent.html",[111,0.736,160,1.293]],["body/components/EventPopoverComponent.html",[2,0.155,3,0.13,4,0.155,6,0.208,10,1.146,11,0.906,13,0.294,14,0.023,15,0.367,20,0.367,22,2.216,23,1.692,24,0.13,31,0.015,32,0.015,41,1.077,47,1.012,63,1.146,111,1.257,112,1.221,113,1.39,114,1.487,115,1.487,117,1.487,120,2.791,121,2.214,123,1.929,125,1.426,132,0.492,136,0.529,139,1.146,140,2.064,141,2.064,142,1.929,143,2.561,144,1.487,145,1.487,146,1.302,147,1.487,148,1.487,149,1.302,150,1.302,151,1.487,152,1.221,153,2.827,154,1.487,155,1.221,156,1.487,157,1.302,158,1.487,159,1.487,160,2.102,161,1.487,162,1.221,163,1.487,164,1.302,165,1.487,166,1.221,167,1.487,168,1.221,169,1.487,170,1.221,171,1.487,172,1.302,173,1.487,174,1.221,175,1.487,176,1.221,177,1.487,178,1.221,179,1.146,180,1.487,181,1.302,182,1.302,183,1.487,184,1.302,185,1.487,186,1.807,187,1.487,390,4.435,431,2.456,581,5.225,582,3.278,583,4.55,584,4.55,585,4.55,586,3.526,587,4.55,588,3.278,589,4.55]],["title/components/GroupSelectForm.html",[111,0.736,162,1.293]],["body/components/GroupSelectForm.html",[2,0.111,3,0.093,4,0.111,6,0.149,7,0.576,8,0.498,10,0.821,11,0.836,13,0.49,14,0.024,15,0.472,20,0.348,23,0.915,24,0.093,25,2.316,30,1.333,31,0.012,32,0.012,41,2.093,47,0.725,63,0.821,106,0.807,107,2.101,111,1.099,112,0.875,113,0.996,114,1.065,115,1.065,117,1.065,120,2.688,123,1.514,125,1.178,131,0.641,132,0.352,136,0.379,139,0.821,140,1.619,141,1.619,142,1.514,143,2.188,144,1.065,145,1.065,146,0.933,147,1.065,148,1.065,149,0.933,150,0.933,151,1.065,152,0.875,153,2.541,154,1.065,155,0.875,156,1.065,157,0.933,158,1.065,159,1.065,160,0.875,161,1.065,162,1.796,163,1.065,164,0.933,165,1.065,166,0.875,167,1.065,168,0.875,169,1.065,170,0.875,171,1.065,172,0.933,173,1.065,174,0.875,175,1.065,176,0.875,177,1.065,178,0.875,179,0.821,180,1.065,181,0.933,182,0.933,183,1.065,184,0.933,185,1.065,186,1.418,187,1.065,220,1.23,274,5.744,275,5.086,296,1.91,299,1.173,310,1.619,325,2.188,408,1.445,409,1.329,410,1.23,432,1.143,449,1.76,474,1.329,501,3.03,586,2.914,590,5.992,591,2.348,592,3.569,593,4.823,594,4.823,595,3.569,596,4.823,597,3.613,598,3.665,599,3.569,600,3.235,601,2.348,602,2.348,603,3.613,604,2.348,605,2.348,606,2.348,607,3.613,608,1.993,609,2.674,610,2.348,611,2.348,612,3.569,613,2.348,614,1.993,615,2.348,616,3.03,617,4.317,618,1.993,619,3.235,620,2.348,621,3.03]],["title/injectables/GroupService.html",[205,2.343,293,0.689]],["body/injectables/GroupService.html",[1,3.86,2,0.16,3,0.134,4,0.16,6,0.215,8,1.126,11,0.921,13,0.476,14,0.024,15,0.462,20,0.484,24,0.134,25,1.972,27,1.972,28,1.64,31,0.016,32,0.016,41,1.97,106,1.435,125,0.923,128,3.27,129,2.784,131,1.45,132,0.508,134,2.534,135,1.914,136,0.546,137,1.535,138,1.535,150,1.846,205,3.137,225,3.245,228,1.646,293,1.055,296,2.294,299,1.527,330,2.082,331,1.914,339,2.283,342,3.27,449,2.534,452,4.182,463,3.137,464,3.585,466,3.585,622,3.382,623,4.856,624,2.534,625,3.382,626,4.649,627,3.382,628,3.946,629,3.382,630,3.382,631,3.946,632,3.382]],["title/interfaces/Location.html",[0,0.343,63,1.214]],["body/interfaces/Location.html",[0,0.52,2,0.115,3,0.096,4,0.115,6,0.154,7,0.591,12,1.279,13,0.44,14,0.025,15,0.355,20,0.396,24,0.174,28,1.708,30,1.13,31,0.017,32,0.012,63,1.84,64,4.301,106,0.827,111,0.776,113,1.029,120,0.964,125,0.662,132,0.364,136,0.392,138,2.605,166,1.363,193,2.252,206,1.494,220,1.271,264,1.818,267,4.163,288,2.741,296,0.849,306,1.638,310,1.101,325,1.66,372,1.374,409,2.493,410,1.916,474,2.071,512,1.374,538,1.818,586,2.972,597,2.741,603,3.3,607,2.741,609,1.818,633,4.904,634,2.427,635,5.741,636,5.741,637,2.427,638,2.427,639,2.427,640,4.404,641,3.659,642,5.262,643,3.659,644,2.427,645,3.659,646,3.659,647,2.427,648,2.427,649,2.427,650,1.818,651,2.427,652,2.427,653,2.427,654,2.427,655,2.427,656,2.427,657,2.427,658,3.106,659,5.262,660,4.904,661,2.427,662,2.427,663,2.427,664,2.427,665,2.427,666,3.659,667,2.427,668,2.427,669,3.659,670,2.427,671,2.427,672,2.427,673,2.427,674,2.427,675,2.427,676,2.427,677,2.427,678,2.427,679,3.659,680,2.06,681,3.659,682,2.427,683,2.427,684,2.427,685,2.427,686,2.427,687,2.427,688,2.427,689,2.427,690,2.427,691,2.427,692,2.427,693,2.427,694,2.427,695,2.427,696,3.659,697,2.427,698,2.427,699,2.427,700,3.659,701,2.427,702,2.427,703,2.427,704,2.427]],["title/components/LoginComponent.html",[111,0.736,168,1.293]],["body/components/LoginComponent.html",[2,0.121,3,0.101,4,0.121,6,0.162,7,0.613,8,0.805,10,0.892,11,0.932,12,1.103,13,0.505,14,0.024,15,0.406,20,0.406,23,0.654,24,0.101,30,1.402,31,0.013,32,0.013,35,3.804,41,0.838,47,0.788,63,0.892,106,0.859,111,1.14,112,0.951,113,1.082,114,1.158,115,1.158,117,1.158,120,2.716,121,1.849,123,1.611,125,0.696,127,3.057,131,1.037,132,0.383,133,1.912,136,0.412,138,1.724,139,0.892,140,1.724,141,1.724,142,1.611,143,2.282,144,1.158,145,1.158,146,1.014,147,1.158,148,1.158,149,1.014,150,1.014,151,1.158,152,0.951,153,2.685,154,1.158,155,0.951,156,1.158,157,1.014,158,1.158,159,1.158,160,0.951,161,1.158,162,0.951,163,1.158,164,1.014,165,1.158,166,0.951,167,1.158,168,1.873,169,1.158,170,0.951,171,1.158,172,1.014,173,1.158,174,0.951,175,1.158,176,0.951,177,1.158,178,0.951,179,0.892,180,1.158,181,1.014,182,1.014,183,1.158,184,1.014,185,1.158,186,1.509,187,1.158,220,1.336,246,1.242,296,1.88,298,3.897,299,1.248,307,1.912,313,4.784,316,1.722,319,3.225,320,3.225,322,2.166,325,1.724,338,4.784,344,1.912,600,3.768,705,2.552,706,3.8,707,3.8,708,5.029,709,4.539,710,5.029,711,3.8,712,5.637,713,2.552,714,2.552,715,2.552,716,2.552,717,3.8,718,2.552,719,2.552,720,2.552,721,2.552,722,2.552,723,2.552,724,5.029]],["title/components/MemberFormComponent.html",[111,0.736,170,1.293]],["body/components/MemberFormComponent.html",[2,0.117,3,0.098,4,0.117,6,0.158,7,0.601,8,0.526,10,2.023,11,0.86,13,0.5,14,0.024,15,0.48,17,2.216,20,0.4,21,2.598,23,0.955,24,0.098,30,1.379,31,0.013,32,0.013,41,0.816,47,0.767,63,0.868,78,2.789,106,0.842,107,2.173,111,1.126,112,0.925,113,1.053,114,1.127,115,1.127,117,1.127,120,2.707,123,1.579,125,1.219,131,0.678,132,0.373,136,0.401,139,0.868,140,1.689,141,1.689,142,1.579,143,2.251,144,1.127,145,1.127,146,0.986,147,1.127,148,1.127,149,0.986,150,0.986,151,1.127,152,0.925,153,2.581,154,1.127,155,0.925,156,1.127,157,0.986,158,1.127,159,1.127,160,0.925,161,1.127,162,0.925,163,1.127,164,0.986,165,1.127,166,0.925,167,1.127,168,0.925,169,1.127,170,1.848,171,1.127,172,0.986,173,1.127,174,0.925,175,1.127,176,0.925,177,1.127,178,0.925,179,0.868,180,1.127,181,0.986,182,0.986,183,1.127,184,0.986,185,1.127,186,1.479,187,1.127,204,1.528,220,1.3,296,1.951,299,1.223,310,1.689,325,2.251,408,1.528,409,1.406,410,1.3,432,1.208,445,1.861,474,1.406,586,3.014,597,3.717,598,3.791,600,3.346,603,3.717,607,3.717,608,2.108,609,2.789,614,2.108,616,3.16,618,2.108,619,3.346,725,2.483,726,3.723,727,4.961,728,4.961,729,3.723,730,4.961,731,3.723,732,2.483,733,2.483,734,2.483,735,3.723,736,2.483,737,2.483,738,2.483,739,2.483,740,2.483,741,2.483,742,2.483,743,2.483,744,2.483,745,4.466,746,2.483,747,2.483,748,3.723,749,3.723]],["title/interfaces/Month.html",[0,0.343,750,2.601]],["body/interfaces/Month.html",[0,0.544,2,0.206,3,0.172,4,0.206,6,0.277,7,0.888,11,1.096,12,1.961,13,0.54,14,0.024,15,0.486,20,0.352,24,0.217,31,0.019,32,0.019,47,2.11,512,2.47,750,4.512,751,4.364,752,5.366,753,4.364,754,4.364,755,4.364,756,4.364,757,4.364,758,4.364,759,4.364,760,4.364,761,4.364,762,4.364,763,4.364,764,4.364,765,4.364,766,4.364]],["title/injectables/NgbDateNativeAdapter.html",[251,2.601,293,0.689]],["body/injectables/NgbDateNativeAdapter.html",[2,0.188,3,0.157,4,0.188,6,0.253,8,1.098,11,0.898,13,0.464,14,0.024,15,0.418,20,0.418,24,0.157,26,2.447,31,0.018,32,0.018,46,1.686,59,3.298,106,1.38,131,1.414,132,0.597,136,0.642,192,2.25,215,4.397,216,2.683,217,2.683,251,3.881,293,1.144,299,1.702,372,2.932,410,2.082,432,2.521,750,2.979,767,5.763,768,3.976,769,5.18,770,5.18,771,5.18,772,3.976,773,6.492,774,5.18,775,3.976,776,5.18,777,3.976,778,3.976,779,3.976,780,3.976,781,3.976,782,3.976]],["title/components/NotFoundComponent.html",[111,0.736,174,1.293]],["body/components/NotFoundComponent.html",[2,0.166,3,0.139,4,0.166,10,1.228,11,0.939,14,0.023,20,0.283,23,0.9,24,0.139,31,0.016,32,0.016,41,1.154,47,1.084,63,1.228,111,1.288,112,1.308,113,1.489,114,1.593,115,1.593,117,1.593,120,2.809,121,2.321,123,2.023,132,0.527,136,0.567,139,1.228,140,2.164,141,2.164,142,2.023,143,2.636,144,1.593,145,1.593,146,1.394,147,1.593,148,1.593,149,1.394,150,1.394,151,1.593,152,1.308,153,2.804,154,1.593,155,1.308,156,1.593,157,1.394,158,1.593,159,1.593,160,1.308,161,1.593,162,1.308,163,1.593,164,1.394,165,1.593,166,1.308,167,1.593,168,1.308,169,1.593,170,1.308,171,1.593,172,1.394,173,1.593,174,2.164,175,1.593,176,1.308,177,1.593,178,1.308,179,1.228,180,1.593,181,1.394,182,1.394,183,1.593,184,1.394,185,1.593,186,1.894,187,1.593,261,2.98,362,4.048,374,4.048,619,4.353,783,3.511,784,3.511,785,4.769,786,4.769,787,4.769]],["title/interfaces/PayloadModel.html",[0,0.343,443,2.601]],["body/interfaces/PayloadModel.html",[0,0.534,2,0.201,3,0.168,4,0.201,6,0.27,7,0.872,13,0.561,14,0.024,15,0.505,17,2.485,20,0.505,21,3.384,22,2.654,23,1.657,24,0.168,25,2.654,31,0.018,32,0.018,41,2.123,96,3.542,179,2.26,443,4.048,788,4.244,789,4.244,790,4.244,791,4.244,792,4.244]],["title/interfaces/Recurring.html",[0,0.343,84,2.601]],["body/interfaces/Recurring.html",[0,0.528,2,0.137,3,0.114,4,0.137,6,0.184,7,0.673,9,1.515,10,1.457,12,1.804,13,0.374,14,0.025,15,0.336,17,1.655,20,0.336,21,2.182,22,1.227,23,1.648,24,0.211,25,1.227,26,1.781,27,2.264,28,2.03,30,0.894,31,0.014,32,0.014,38,2.168,39,3.536,41,1.604,42,2.456,43,3.657,44,2.168,45,1.953,46,2.684,47,1.507,48,3.121,49,4.143,50,2.456,51,2.456,52,2.456,53,2.456,54,2.811,55,2.811,56,2.456,57,3.121,58,2.456,59,2.375,60,2.456,61,2.456,62,2.456,63,1.457,64,2.168,65,3.536,66,1.781,67,2.456,68,2.456,69,2.456,70,3.536,71,2.456,72,3.536,73,2.456,74,1.953,75,2.456,76,2.456,77,3.536,78,2.168,79,2.456,80,2.168,81,2.456,82,3.536,83,2.456,84,4.415,85,3.536,86,3.603,87,3.536,88,3.121,89,3.121,90,3.121,91,3.121,92,4.532,793,2.894,794,2.894]],["title/injectables/SearchFilterPipe.html",[258,2.136,293,0.689]],["body/injectables/SearchFilterPipe.html",[2,0.158,3,0.132,4,0.158,6,0.213,7,0.853,8,0.979,9,2.418,11,0.916,12,1.872,13,0.414,14,0.024,15,0.373,20,0.27,24,0.132,31,0.016,32,0.016,66,3.506,106,1.431,107,2.247,125,0.914,131,1.26,132,0.503,136,0.541,258,2.842,293,1.049,299,1.517,306,2.26,310,1.52,372,1.896,512,1.896,515,3.96,650,3.46,795,4.486,796,2.843,797,5.073,798,3.92,799,4.486,800,3.92,801,5.374,802,5.727,803,2.843,804,5.557,805,3.92,806,3.92,807,2.843,808,3.92,809,3.92,810,3.92,811,2.843,812,4.836,813,2.843,814,2.843,815,2.843,816,2.843,817,2.843,818,2.843,819,2.843]],["title/injectables/SearchFilterPipe-1.html",[258,1.786,293,0.576,432,1.412]],["body/injectables/SearchFilterPipe-1.html",[2,0.158,3,0.132,4,0.158,6,0.213,7,0.853,8,0.979,9,2.418,11,0.916,12,1.872,13,0.414,14,0.024,15,0.373,20,0.27,24,0.132,31,0.016,32,0.016,66,3.506,106,1.431,107,2.247,125,0.914,131,1.26,132,0.503,136,0.541,258,2.842,293,1.049,299,1.517,306,2.26,310,1.52,372,1.896,512,1.896,515,3.96,650,3.46,795,4.486,796,2.843,797,5.073,798,3.92,799,4.486,800,3.92,801,5.374,802,5.727,803,2.843,804,5.557,805,3.92,806,3.92,807,2.843,808,3.92,809,3.92,810,3.92,811,2.843,812,4.836,813,2.843,814,2.843,815,2.843,816,2.843,817,2.843,818,2.843,819,2.843]],["title/injectables/SessionService.html",[203,2.343,293,0.689]],["body/injectables/SessionService.html",[2,0.236,3,0.197,4,0.236,6,0.317,14,0.024,15,0.403,20,0.403,24,0.197,28,1.542,31,0.02,32,0.02,106,1.129,132,0.75,136,0.806,203,4.032,293,1.269,658,4.24,820,4.995,821,5.975,822,4.995,823,4.995,824,4.995]],["title/components/SidebarComponent.html",[111,0.736,176,1.293]],["body/components/SidebarComponent.html",[2,0.118,3,0.099,4,0.118,6,0.158,7,0.603,8,0.791,10,0.872,11,0.922,13,0.446,14,0.024,15,0.467,20,0.401,23,0.639,24,0.099,25,2.457,30,1.644,31,0.013,32,0.013,41,2.069,47,0.77,63,0.872,106,1.203,111,1.128,112,0.928,113,1.057,114,1.131,115,1.131,117,1.131,120,2.708,121,1.817,123,1.583,125,0.68,128,2.755,129,2.418,131,1.019,132,0.374,135,1.411,136,0.402,137,1.131,138,1.131,139,0.872,140,1.694,141,1.694,142,1.583,143,2.255,144,1.131,145,1.131,146,0.99,147,1.131,148,1.131,149,0.99,150,0.99,151,1.131,152,0.928,153,2.671,154,1.131,155,0.928,156,1.131,157,0.99,158,1.131,159,1.131,160,0.928,161,1.131,162,0.928,163,1.131,164,0.99,165,1.131,166,0.928,167,1.131,168,0.928,169,1.131,170,0.928,171,1.131,172,0.99,173,1.131,174,0.928,175,1.131,176,1.851,177,1.131,178,0.928,179,0.872,180,1.131,181,0.99,182,0.99,183,1.131,184,0.99,185,1.131,186,1.483,187,1.131,246,1.213,296,2.296,298,3.439,299,1.226,310,1.694,316,1.682,325,2.535,408,1.534,409,1.411,410,1.955,471,3.169,524,2.116,538,3.724,621,3.169,631,4.219,825,2.492,826,4.97,827,3.733,828,3.733,829,4.97,830,3.733,831,4.97,832,3.733,833,3.733,834,2.492,835,2.492,836,2.492,837,2.492,838,2.492,839,2.492,840,2.492,841,2.492,842,2.492,843,2.492,844,4.476]],["title/components/TodoListComponent.html",[111,0.736,178,1.293]],["body/components/TodoListComponent.html",[2,0.116,3,0.097,4,0.116,6,0.281,7,0.595,8,0.781,10,0.856,11,0.915,13,0.474,14,0.024,15,0.448,20,0.426,23,0.628,24,0.097,31,0.012,32,0.012,41,0.804,47,0.756,59,2.57,63,0.856,66,2.267,96,3.496,106,0.833,111,1.12,112,0.912,113,1.038,114,1.111,115,1.111,117,1.111,120,2.702,121,1.792,123,1.562,125,0.668,131,1.005,132,0.367,136,0.395,137,1.111,138,1.111,139,0.856,140,1.671,141,1.671,142,1.562,143,2.235,144,1.111,145,1.111,146,0.972,147,1.111,148,1.111,149,0.972,150,0.972,151,1.111,152,0.912,153,2.571,154,1.111,155,0.912,156,1.111,157,0.972,158,1.111,159,1.111,160,0.912,161,1.111,162,0.912,163,1.111,164,0.972,165,1.111,166,0.912,167,1.111,168,0.912,169,1.111,170,0.912,171,1.111,172,0.972,173,1.111,174,0.912,175,1.111,176,0.912,177,1.111,178,1.835,179,2.269,180,1.111,181,0.972,182,0.972,183,1.111,184,0.972,185,1.111,186,1.463,187,1.111,296,2.12,299,1.21,325,2.235,378,2.267,383,3.259,384,3.032,396,1.834,398,4.314,400,2.078,405,3.318,408,1.507,409,1.386,432,1.792,474,2.085,527,1.834,845,4.888,846,2.448,847,3.683,848,3.683,849,4.926,850,4.181,851,3.126,852,2.448,853,3.683,854,3.683,855,2.448,856,3.126,857,2.448,858,2.448,859,2.448,860,2.448,861,2.448,862,3.683,863,2.448,864,2.448,865,2.448,866,2.448,867,2.448,868,2.448,869,2.448,870,3.683]],["title/injectables/TodoListService.html",[293,0.689,384,2.136]],["body/injectables/TodoListService.html",[2,0.143,3,0.12,4,0.143,6,0.192,8,1.22,11,0.998,13,0.516,14,0.024,15,0.483,20,0.44,24,0.12,27,1.824,28,1.545,31,0.015,32,0.015,96,3.673,106,1.467,125,0.826,131,1.571,132,0.454,136,0.489,137,1.373,179,2.269,225,3.132,228,1.473,293,0.993,299,1.413,330,1.863,331,1.713,339,2.043,342,3.543,384,2.648,398,4.61,452,4.379,463,2.903,464,3.885,466,3.885,527,2.268,624,2.268,845,5.223,850,3.652,851,3.652,856,3.652,871,3.027,872,5.982,873,4.302,874,3.027,875,4.302,876,3.027,877,4.302,878,3.027,879,3.027,880,3.027,881,4.302,882,3.027,883,3.027,884,4.302,885,3.027]],["title/injectables/UserService.html",[204,2.136,293,0.689]],["body/injectables/UserService.html",[2,0.17,3,0.142,4,0.17,6,0.228,8,1.16,11,0.949,13,0.491,14,0.024,15,0.473,17,1.423,20,0.473,21,3.204,24,0.142,27,1.52,28,1.69,31,0.016,32,0.016,33,3.954,106,1.425,125,0.978,131,1.494,132,0.538,136,0.579,137,1.626,150,1.921,204,2.976,225,3.301,228,1.744,293,1.087,296,2.322,299,1.589,330,2.206,331,2.029,339,2.419,342,3.369,445,2.685,452,4.255,463,3.264,464,3.694,466,3.694,623,4.974,624,2.685,628,4.105,886,3.584,887,3.584,888,4.836,889,3.584,890,3.584,891,3.584]],["title/interfaces/Week.html",[0,0.343,47,1.072]],["body/interfaces/Week.html",[0,0.56,2,0.216,3,0.18,4,0.216,6,0.29,7,0.913,12,1.326,13,0.507,14,0.024,15,0.457,20,0.368,24,0.224,30,1.898,31,0.019,32,0.019,46,2.923,47,1.747,88,3.421,89,3.421,90,3.421,91,3.421,367,3.954,512,2.585,752,3.876,892,4.566,893,4.566,894,4.566,895,4.566,896,4.566,897,4.566,898,4.566]],["title/dependencies.html",[190,2.362,899,2.901]],["body/dependencies.html",[14,0.024,31,0.018,32,0.018,54,2.804,132,0.623,190,2.352,192,3.514,211,3.993,212,3.597,216,2.804,217,2.804,220,2.176,222,4.524,223,3.527,228,2.022,235,3.113,246,2.022,264,3.113,332,3.113,333,3.527,334,3.527,335,3.527,378,2.557,900,5.33,901,4.155,902,4.155,903,6.89,904,4.155,905,5.33,906,4.155,907,4.155,908,4.155,909,4.155,910,4.155,911,4.155,912,4.155,913,4.155,914,4.155,915,4.155,916,4.155,917,4.155,918,4.155,919,4.155,920,4.155,921,4.155,922,4.155,923,4.155,924,4.155]],["title/miscellaneous/enumerations.html",[925,1.958,926,3.543]],["body/miscellaneous/enumerations.html",[6,0.33,14,0.021,31,0.021,32,0.021,38,3.897,43,4.586,44,3.897,45,3.51,46,2.206,47,1.606,74,4.13,518,4.415,925,3.51,926,4.415,927,5.202,928,5.202,929,5.202,930,5.202,931,5.202]],["title/miscellaneous/functions.html",[104,3.127,925,1.958]],["body/miscellaneous/functions.html",[6,0.318,8,1.269,11,1.038,14,0.022,31,0.02,32,0.02,59,2.439,97,4.255,104,3.756,105,4.255,131,1.634,179,2.094,226,3.756,227,4.486,238,4.486,680,5.435,925,3.383,932,5.013,933,5.013,934,5.013,935,5.013]],["title/index.html",[6,0.184,55,1.958,936,2.901]],["body/index.html",[3,0.235,6,0.377,14,0.02,31,0.02,32,0.02,80,4.768,208,3.041,288,3.702,937,4.941,938,4.941,939,5.936,940,4.941,941,4.941,942,4.941,943,4.941,944,6.752,945,4.941,946,5.936,947,5.936,948,4.941,949,4.941,950,4.941,951,4.941,952,4.941]],["title/modules.html",[188,2.147]],["body/modules.html",[14,0.021,31,0.021,32,0.021,188,2.378,189,3.537,199,3.226,200,3.226,212,4.402,953,6.524,954,6.524,955,6.524]],["title/overview.html",[956,4.017]],["body/overview.html",[0,0.271,14,0.024,24,0.108,31,0.014,32,0.014,111,0.582,112,2.226,127,2.48,129,2.305,139,0.96,142,1.164,146,1.881,149,1.881,152,2.327,155,1.764,157,1.881,160,1.764,162,1.764,164,1.881,166,1.764,168,1.764,170,1.764,172,1.881,174,1.764,176,1.764,178,1.764,181,1.881,182,2.373,184,2.373,186,2.373,188,1.819,189,4.806,190,1.553,191,1.852,192,1.553,193,1.689,194,2.33,195,2.33,196,2.33,197,2.33,198,2.33,199,4.005,200,4.282,201,3.196,202,4.02,203,3.196,204,2.915,205,3.196,206,2.467,207,1.852,208,1.689,293,0.545,379,2.33,380,2.33,381,2.33,382,2.33,383,2.681,384,2.915,506,2.33,507,2.33,508,2.33,956,2.33,957,4.009,958,2.745,959,2.745,960,2.745]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"modules/DropdownModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":474,"title":{},"body":{"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"components/TodoListComponent.html":{}}}],["0.8.4",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["00000",{"_index":81,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["0101101",{"_index":87,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["1",{"_index":432,"title":{"interfaces/Day-1.html":{},"injectables/SearchFilterPipe-1.html":{}},"body":{"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/TodoListComponent.html":{}}}],["1.0.0",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["1.0.7",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":574,"title":{},"body":{"interfaces/EventElement.html":{}}}],["13",{"_index":959,"title":{},"body":{"overview.html":{}}}],["16",{"_index":960,"title":{},"body":{"overview.html":{}}}],["17",{"_index":958,"title":{},"body":{"overview.html":{}}}],["2.0.3",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["24:00:00",{"_index":572,"title":{},"body":{"interfaces/EventElement.html":{}}}],["27.0.0",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":957,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["5.5.0",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":578,"title":{},"body":{"interfaces/EventElement.html":{}}}],["_",{"_index":657,"title":{},"body":{"interfaces/Location.html":{}}}],["_sortevents(ev",{"_index":484,"title":{},"body":{"interfaces/Day-1.html":{}}}],["a.startd",{"_index":487,"title":{},"body":{"interfaces/Day-1.html":{}}}],["access",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessor",{"_index":658,"title":{},"body":{"interfaces/Location.html":{},"injectables/SessionService.html":{}}}],["activ",{"_index":415,"title":{},"body":{"interfaces/DateObject.html":{}}}],["actual_compon",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["ad",{"_index":598,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["adapter.compon",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["adapter.component.t",{"_index":768,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["adapter.component.ts:11",{"_index":775,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["adapter.component.ts:7",{"_index":772,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["addgroup",{"_index":595,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["addgroup(group",{"_index":501,"title":{},"body":{"interfaces/Day-1.html":{},"components/GroupSelectForm.html":{}}}],["addmemb",{"_index":729,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["addmember(us",{"_index":735,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["address",{"_index":64,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Location.html":{},"interfaces/Recurring.html":{}}}],["addtodo",{"_index":850,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["addtodo(todo",{"_index":875,"title":{},"body":{"injectables/TodoListService.html":{}}}],["agm/cor",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Location.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["aizasydujitlzddw3spdwzbzdw5ynts_i",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["angular",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/anim",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/Day-1.html":{},"modules/DropdownModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DashboardModule.html":{},"interfaces/Day-1.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["api_root",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Day-1.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["apicreateev",{"_index":39,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["apicreategroup",{"_index":1,"title":{"interfaces/ApiCreateGroup.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"injectables/GroupService.html":{}}}],["apicreateus",{"_index":33,"title":{"interfaces/ApiCreateUser.html":{}},"body":{"interfaces/ApiCreateUser.html":{},"interfaces/ApiUser.html":{},"injectables/UserService.html":{}}}],["apiev",{"_index":22,"title":{"interfaces/ApiEvent.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{}}}],["apigroup",{"_index":25,"title":{"interfaces/ApiGroup.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/Day-1.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{}}}],["apikey",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["apitodo",{"_index":96,"title":{"interfaces/ApiTodo.html":{}},"body":{"interfaces/ApiTodo.html":{},"interfaces/EventElement.html":{},"interfaces/PayloadModel.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["apius",{"_index":17,"title":{"interfaces/ApiUser.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"interfaces/Day-1.html":{},"components/MemberFormComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/UserService.html":{}}}],["app",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["app'},{'nam",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["app.compon",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.less",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["app/models/ev",{"_index":431,"title":{},"body":{"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{}}}],["app/models/group",{"_index":839,"title":{},"body":{"components/SidebarComponent.html":{}}}],["app/models/todo",{"_index":527,"title":{},"body":{"interfaces/EventElement.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["app/services/cor",{"_index":524,"title":{},"body":{"interfaces/EventElement.html":{},"components/SidebarComponent.html":{}}}],["app/services/interceptor",{"_index":386,"title":{},"body":{"modules/DashboardModule.html":{}}}],["app_rout",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":112,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["appmodul",{"_index":189,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appoint",{"_index":51,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["april",{"_index":760,"title":{},"body":{"interfaces/Month.html":{}}}],["array",{"_index":801,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["august",{"_index":763,"title":{},"body":{"interfaces/Month.html":{}}}],["auth",{"_index":297,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["auth.servic",{"_index":305,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguard",{"_index":201,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"overview.html":{}}}],["authresult",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.accesstoken",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.us",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.user.id",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservic",{"_index":127,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["autocomplet",{"_index":672,"title":{},"body":{"interfaces/Location.html":{}}}],["autocomplete.addlistener(\"place_chang",{"_index":674,"title":{},"body":{"interfaces/Location.html":{}}}],["autocomplete.getplac",{"_index":677,"title":{},"body":{"interfaces/Location.html":{}}}],["awesom",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":486,"title":{},"body":{"interfaces/Day-1.html":{}}}],["back",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"components/NotFoundComponent.html":{}}}],["basic",{"_index":62,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["befor",{"_index":71,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["belong",{"_index":75,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["beta.2",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["binari",{"_index":85,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["blur",{"_index":694,"title":{},"body":{"interfaces/Location.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{},"interfaces/Week.html":{}}}],["bootstrap",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DropdownModule.html":{},"injectables/NgbDateNativeAdapter.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/datepick",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/ng",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/NgbDateNativeAdapter.html":{},"dependencies.html":{}}}],["box'},{'nam",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["box.compon",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["box/combo",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["box/search.pip",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["box/search.pipe.t",{"_index":796,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["box/search.pipe.ts:14",{"_index":807,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["box/search.pipe.ts:26",{"_index":803,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["brows",{"_index":955,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["bsdatepickermodul",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdatepickermodule.forroot",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["budget",{"_index":931,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cache.servic",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"components/SidebarComponent.html":{}}}],["cache.service.t",{"_index":434,"title":{},"body":{"interfaces/Day-1.html":{}}}],["cache.service.ts:139",{"_index":435,"title":{},"body":{"interfaces/Day-1.html":{}}}],["cache.service.ts:140",{"_index":436,"title":{},"body":{"interfaces/Day-1.html":{}}}],["calendar",{"_index":83,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["call",{"_index":662,"title":{},"body":{"interfaces/Location.html":{}}}],["callback",{"_index":664,"title":{},"body":{"interfaces/Location.html":{}}}],["canactiv",{"_index":300,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["chang",{"_index":652,"title":{},"body":{"interfaces/Location.html":{}}}],["changed",{"_index":402,"title":{},"body":{"injectables/DashboardService.html":{}}}],["changedate(d",{"_index":404,"title":{},"body":{"injectables/DashboardService.html":{}}}],["check",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/Day-1.html":{},"modules/DropdownModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":943,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dashboardmodul",{"_index":379,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":380,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_export",{"_index":381,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_provid",{"_index":382,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dropdownmodul",{"_index":506,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declar",{"_index":507,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_export",{"_index":508,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["code",{"_index":80,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"index.html":{}}}],["code(javascript",{"_index":946,"title":{},"body":{"index.html":{}}}],["collapsemodul",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["collapsemodule.forroot",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["color",{"_index":77,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["combo",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["comboboxcompon",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["compar",{"_index":805,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["compon",{"_index":111,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["component_templ",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["config",{"_index":951,"title":{},"body":{"index.html":{}}}],["configuration(json",{"_index":952,"title":{},"body":{"index.html":{}}}],["console.log(err",{"_index":723,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(r",{"_index":721,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(userinfo",{"_index":719,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":512,"title":{},"body":{"modules/DropdownModule.html":{},"interfaces/Location.html":{},"interfaces/Month.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"interfaces/Week.html":{}}}],["constants.modul",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":301,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(authservic",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(http",{"_index":624,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor(priv",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor(publ",{"_index":307,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["constructor(rout",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(todoservic",{"_index":852,"title":{},"body":{"components/TodoListComponent.html":{}}}],["continu",{"_index":818,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["controlvalueaccessor",{"_index":642,"title":{},"body":{"interfaces/Location.html":{}}}],["core",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["corecach",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"components/SidebarComponent.html":{}}}],["corecacheservic",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["creat",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/UserService.html":{}}}],["create(group",{"_index":626,"title":{},"body":{"injectables/GroupService.html":{}}}],["create(us",{"_index":888,"title":{},"body":{"injectables/UserService.html":{}}}],["creategroupcompon",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["cur",{"_index":545,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr.format('dddd",{"_index":555,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr.format(date_format",{"_index":553,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr.utc().valueof",{"_index":558,"title":{},"body":{"interfaces/EventElement.html":{}}}],["current",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"interfaces/Week.html":{}}}],["currentus",{"_index":450,"title":{},"body":{"interfaces/Day-1.html":{}}}],["currentuserid",{"_index":821,"title":{},"body":{"injectables/SessionService.html":{}}}],["custom_input_control_value_accessor",{"_index":646,"title":{},"body":{"interfaces/Location.html":{}}}],["d",{"_index":557,"title":{},"body":{"interfaces/EventElement.html":{}}}],["dashboard",{"_index":374,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotFoundComponent.html":{}}}],["dashboard'},{'nam",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["dashboard.compon",{"_index":387,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.component.html",{"_index":376,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.less",{"_index":375,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.rout",{"_index":394,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.servic",{"_index":396,"title":{},"body":{"modules/DashboardModule.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["dashboard/dashboard.modul",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard/models/date.model",{"_index":441,"title":{},"body":{"interfaces/Day-1.html":{}}}],["dashboard_rout",{"_index":393,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboardcompon",{"_index":152,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":200,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardservic",{"_index":383,"title":{"injectables/DashboardService.html":{}},"body":{"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["date",{"_index":59,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/ApiTodo.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{},"miscellaneous/functions.html":{}}}],["date(date.year",{"_index":780,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.day",{"_index":782,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.getd",{"_index":779,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.getfullyear",{"_index":776,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.getmonth",{"_index":778,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.model",{"_index":430,"title":{},"body":{"interfaces/Day.html":{}}}],["date.month",{"_index":781,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date_format",{"_index":526,"title":{},"body":{"interfaces/EventElement.html":{}}}],["datemap",{"_index":453,"title":{},"body":{"interfaces/Day-1.html":{}}}],["dateobject",{"_index":413,"title":{"interfaces/DateObject.html":{}},"body":{"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{}}}],["datetimepick",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["datevalu",{"_index":554,"title":{},"body":{"interfaces/EventElement.html":{}}}],["day",{"_index":46,"title":{"interfaces/Day.html":{},"interfaces/Day-1.html":{}},"body":{"interfaces/ApiEvent.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{},"miscellaneous/enumerations.html":{}}}],["day'},{'nam",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["day.component.html",{"_index":528,"title":{},"body":{"interfaces/EventElement.html":{}}}],["day.component.less",{"_index":529,"title":{},"body":{"interfaces/EventElement.html":{}}}],["day.model",{"_index":895,"title":{},"body":{"interfaces/Week.html":{}}}],["day/day.compon",{"_index":397,"title":{},"body":{"modules/DashboardModule.html":{}}}],["daycompon",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["decemb",{"_index":766,"title":{},"body":{"interfaces/Month.html":{}}}],["declar",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DropdownModule.html":{},"overview.html":{}}}],["decor",{"_index":608,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["default",{"_index":408,"title":{},"body":{"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["defin",{"_index":15,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["dep",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["depend",{"_index":190,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DropdownModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":530,"title":{},"body":{"interfaces/EventElement.html":{}}}],["descript",{"_index":9,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["diff",{"_index":534,"title":{},"body":{"interfaces/EventElement.html":{}}}],["direct",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["disabl",{"_index":651,"title":{},"body":{"interfaces/Location.html":{}}}],["display",{"_index":416,"title":{},"body":{"interfaces/DateObject.html":{},"interfaces/EventElement.html":{}}}],["display1",{"_index":417,"title":{},"body":{"interfaces/DateObject.html":{}}}],["dldatetimepickerdatemodul",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["doctor",{"_index":50,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["dom",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["done",{"_index":98,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["dropdown",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DropdownModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["dropdown.direct",{"_index":511,"title":{},"body":{"modules/DropdownModule.html":{}}}],["dropdown]'},{'nam",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["dropdown_direct",{"_index":513,"title":{},"body":{"modules/DropdownModule.html":{}}}],["dropdownmenu",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DropdownModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["dropdownmenu]'},{'nam",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["dropdownmodul",{"_index":199,"title":{"modules/DropdownModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DropdownModule.html":{},"modules.html":{},"overview.html":{}}}],["dropdowntoggl",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DropdownModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["dynam",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["editeventcompon",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["el",{"_index":614,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["el.children.length",{"_index":616,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["el.children[0].id",{"_index":618,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["element",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["elementref",{"_index":607,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["email",{"_index":35,"title":{},"body":{"interfaces/ApiCreateUser.html":{},"interfaces/ApiUser.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["end",{"_index":57,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["enddat",{"_index":61,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["endtim",{"_index":58,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["enum",{"_index":42,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["enumer",{"_index":926,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Day-1.html":{},"components/LoginComponent.html":{}}}],["err.json().messag",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["esdoc",{"_index":940,"title":{},"body":{"index.html":{}}}],["event",{"_index":23,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["event'},{'nam",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["event.compon",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["event.hidden",{"_index":479,"title":{},"body":{"interfaces/Day-1.html":{}}}],["event.titl",{"_index":589,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["event/edit",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["event/event.servic",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["eventel",{"_index":517,"title":{"interfaces/EventElement.html":{}},"body":{"interfaces/EventElement.html":{}}}],["eventemitt",{"_index":603,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["eventmap",{"_index":454,"title":{},"body":{"interfaces/Day-1.html":{}}}],["eventpopovercompon",{"_index":160,"title":{"components/EventPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["events.sort((a",{"_index":485,"title":{},"body":{"interfaces/Day-1.html":{}}}],["eventservic",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ex",{"_index":49,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["expiri",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"modules/DropdownModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"overview.html":{}}}],["extend",{"_index":26,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/Recurring.html":{}}}],["fals",{"_index":107,"title":{},"body":{"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["fb",{"_index":709,"title":{},"body":{"components/LoginComponent.html":{}}}],["februari",{"_index":758,"title":{},"body":{"interfaces/Month.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"modules/DropdownModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["filter",{"_index":797,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["filter(item",{"_index":800,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["filtereventsbygroup(group",{"_index":504,"title":{},"body":{"interfaces/Day-1.html":{}}}],["filtergroup",{"_index":830,"title":{},"body":{"components/SidebarComponent.html":{}}}],["filtergroup(group",{"_index":833,"title":{},"body":{"components/SidebarComponent.html":{}}}],["fn",{"_index":700,"title":{},"body":{"interfaces/Location.html":{}}}],["font",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":78,"title":{},"body":{"interfaces/ApiEvent.html":{},"components/MemberFormComponent.html":{},"interfaces/Recurring.html":{}}}],["form'},{'nam",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["form.compon",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["form.component.html",{"_index":592,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.t",{"_index":591,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:11",{"_index":610,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:12",{"_index":601,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:13",{"_index":602,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:14",{"_index":604,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:16",{"_index":599,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:20",{"_index":606,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:31",{"_index":605,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form/group",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"components/GroupSelectForm.html":{}}}],["formbuild",{"_index":710,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":600,"title":{},"body":{"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{}}}],["formsmodul",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["forroot",{"_index":516,"title":{},"body":{"modules/DropdownModule.html":{}}}],["forwardref",{"_index":641,"title":{},"body":{"interfaces/Location.html":{}}}],["found",{"_index":619,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{}}}],["found'},{'nam",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["found.compon",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["found.component.html",{"_index":786,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.less",{"_index":785,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.t",{"_index":784,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/NotFoundComponent.html":{}}}],["friday",{"_index":898,"title":{},"body":{"interfaces/Week.html":{}}}],["frommodel",{"_index":769,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["frommodel(d",{"_index":771,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["function",{"_index":104,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/ApiTodo.html":{},"miscellaneous/functions.html":{}}}],["futur",{"_index":418,"title":{},"body":{"interfaces/DateObject.html":{}}}],["geoloc",{"_index":686,"title":{},"body":{"interfaces/Location.html":{}}}],["get",{"_index":936,"title":{"index.html":{}},"body":{}}],["get(id",{"_index":628,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["getal",{"_index":623,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":822,"title":{},"body":{"injectables/SessionService.html":{}}}],["getduration(v",{"_index":566,"title":{},"body":{"interfaces/EventElement.html":{}}}],["geteventmap",{"_index":489,"title":{},"body":{"interfaces/Day-1.html":{}}}],["getgroup",{"_index":492,"title":{},"body":{"interfaces/Day-1.html":{}}}],["getgroupbyid(groupid",{"_index":495,"title":{},"body":{"interfaces/Day-1.html":{}}}],["getstart(v",{"_index":575,"title":{},"body":{"interfaces/EventElement.html":{}}}],["gettodo",{"_index":872,"title":{},"body":{"injectables/TodoListService.html":{}}}],["gettodo(id",{"_index":877,"title":{},"body":{"injectables/TodoListService.html":{}}}],["go",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["googl",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["google.maps.places.autocomplete(this.search.nativeel",{"_index":673,"title":{},"body":{"interfaces/Location.html":{}}}],["google.maps.places.placeresult",{"_index":676,"title":{},"body":{"interfaces/Location.html":{}}}],["googleapi",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["googlemap",{"_index":644,"title":{},"body":{"interfaces/Location.html":{}}}],["granular",{"_index":74,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["granularity.non",{"_index":533,"title":{},"body":{"interfaces/EventElement.html":{}}}],["group",{"_index":41,"title":{},"body":{"interfaces/ApiEvent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Day-1.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["group'},{'nam",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["group.compon",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["group.events.foreach(ev",{"_index":505,"title":{},"body":{"interfaces/Day-1.html":{}}}],["group.nam",{"_index":621,"title":{},"body":{"components/GroupSelectForm.html":{},"components/SidebarComponent.html":{}}}],["group.showev",{"_index":471,"title":{},"body":{"interfaces/Day-1.html":{},"components/SidebarComponent.html":{}}}],["group/creat",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["group/group",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["group/group.servic",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["groupdropdown",{"_index":593,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupform",{"_index":613,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupid",{"_index":76,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["groupnotfound",{"_index":594,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groups.map(x",{"_index":498,"title":{},"body":{"interfaces/Day-1.html":{}}}],["groups.push",{"_index":503,"title":{},"body":{"interfaces/Day-1.html":{}}}],["groups[index",{"_index":500,"title":{},"body":{"interfaces/Day-1.html":{}}}],["groupsearch",{"_index":596,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupselectform",{"_index":162,"title":{"components/GroupSelectForm.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["groupservic",{"_index":205,"title":{"injectables/GroupService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GroupService.html":{},"overview.html":{}}}],["guard",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["guard.t",{"_index":295,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.ts:6",{"_index":302,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.ts:7",{"_index":304,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.ts:8",{"_index":303,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hash",{"_index":79,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["header'},{'nam",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["header/header.compon",{"_index":392,"title":{},"body":{"modules/DashboardModule.html":{}}}],["headercompon",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["height",{"_index":519,"title":{},"body":{"interfaces/EventElement.html":{}}}],["hemc",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["hidden",{"_index":82,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["home",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["hour",{"_index":45,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["html",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["http",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DashboardModule.html":{},"interfaces/Day-1.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["httpfactori",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"miscellaneous/functions.html":{}}}],["httpfactory(xhrbackend",{"_index":935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpmodul",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["id",{"_index":27,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/GroupService.html":{},"interfaces/Recurring.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["implement",{"_index":306,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/Location.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["import",{"_index":20,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"modules/DropdownModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["includ",{"_index":661,"title":{},"body":{"interfaces/Location.html":{}}}],["incorrect",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"modules/DropdownModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["init",{"_index":535,"title":{},"body":{"interfaces/EventElement.html":{}}}],["inject",{"_index":293,"title":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/GroupService.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/Day-1.html":{},"injectables/GroupService.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["innervalu",{"_index":653,"title":{},"body":{"interfaces/Location.html":{}}}],["input",{"_index":586,"title":{},"body":{"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["input'},{'nam",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["input('ev",{"_index":588,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["input('group",{"_index":612,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["input('memb",{"_index":741,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["input('us",{"_index":743,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["input.compon",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["input.component.t",{"_index":634,"title":{},"body":{"interfaces/Location.html":{}}}],["input.component.ts:21",{"_index":637,"title":{},"body":{"interfaces/Location.html":{}}}],["input.component.ts:22",{"_index":638,"title":{},"body":{"interfaces/Location.html":{}}}],["input.component.ts:23",{"_index":639,"title":{},"body":{"interfaces/Location.html":{}}}],["input/loc",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Location.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"interfaces/Location.html":{},"interfaces/Month.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"interfaces/Location.html":{},"interfaces/Month.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{},"overview.html":{}}}],["invit",{"_index":68,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["isauthent",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["isdis",{"_index":704,"title":{},"body":{"interfaces/Location.html":{}}}],["isopen",{"_index":829,"title":{},"body":{"components/SidebarComponent.html":{}}}],["item",{"_index":804,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["item[properti",{"_index":817,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["item[property].tostring().tolowercase().includes(tocompar",{"_index":819,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["items.filter((item",{"_index":816,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["januari",{"_index":757,"title":{},"body":{"interfaces/Month.html":{}}}],["js",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["juli",{"_index":762,"title":{},"body":{"interfaces/Month.html":{}}}],["june",{"_index":761,"title":{},"body":{"interfaces/Month.html":{}}}],["latitud",{"_index":635,"title":{},"body":{"interfaces/Location.html":{}}}],["legend",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DropdownModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["librari",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["list",{"_index":66,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{}}}],["list'},{'nam",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["list.compon",{"_index":399,"title":{},"body":{"modules/DashboardModule.html":{}}}],["list.component.html",{"_index":848,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.less",{"_index":847,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.t",{"_index":846,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:14",{"_index":859,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:15",{"_index":858,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:17",{"_index":853,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:27",{"_index":855,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:33",{"_index":857,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.servic",{"_index":400,"title":{},"body":{"modules/DashboardModule.html":{},"components/TodoListComponent.html":{}}}],["list.service.t",{"_index":871,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:11",{"_index":876,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:17",{"_index":880,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:23",{"_index":882,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:29",{"_index":878,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:35",{"_index":879,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:8",{"_index":874,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list/todo",{"_index":398,"title":{},"body":{"modules/DashboardModule.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["liter",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["load",{"_index":531,"title":{},"body":{"interfaces/EventElement.html":{}}}],["localstorag",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('access_token",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('user_id",{"_index":824,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.removeitem('access_token",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('user_id",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('access_token",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('user_id",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":63,"title":{"interfaces/Location.html":{}},"body":{"interfaces/ApiEvent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["locationinput",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["login",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["login(userinfo",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login.component.html",{"_index":707,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.less",{"_index":706,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["logincompon",{"_index":168,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["loginform",{"_index":708,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["longitud",{"_index":636,"title":{},"body":{"interfaces/Location.html":{}}}],["made",{"_index":52,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["manag",{"_index":938,"title":{},"body":{"index.html":{}}}],["mani",{"_index":69,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["manual",{"_index":949,"title":{},"body":{"index.html":{}}}],["manual(usag",{"_index":948,"title":{},"body":{"index.html":{}}}],["map",{"_index":86,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["map(r",{"_index":464,"title":{},"body":{"interfaces/Day-1.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["mapapiload",{"_index":654,"title":{},"body":{"interfaces/Location.html":{}}}],["mapsapiload",{"_index":645,"title":{},"body":{"interfaces/Location.html":{}}}],["march",{"_index":759,"title":{},"body":{"interfaces/Month.html":{}}}],["match",{"_index":32,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"modules/DropdownModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["materi",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["meet",{"_index":937,"title":{},"body":{"index.html":{}}}],["member",{"_index":10,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["member'",{"_index":67,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["member.component.html",{"_index":726,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["memberdropdown",{"_index":727,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["memberform",{"_index":742,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["memberformcompon",{"_index":170,"title":{"components/MemberFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["membernotfound",{"_index":728,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["membersearch",{"_index":730,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["metadata",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["method",{"_index":299,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["minut",{"_index":44,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["minutes/hours/days/week",{"_index":70,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["miscellan",{"_index":925,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mmmm",{"_index":556,"title":{},"body":{"interfaces/EventElement.html":{}}}],["mnm",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["mockpayload",{"_index":446,"title":{},"body":{"interfaces/Day-1.html":{}}}],["modalmodul",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["model",{"_index":525,"title":{},"body":{"interfaces/EventElement.html":{}}}],["models/ev",{"_index":442,"title":{},"body":{"interfaces/Day-1.html":{}}}],["models/group",{"_index":449,"title":{},"body":{"interfaces/Day-1.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{}}}],["models/mock",{"_index":447,"title":{},"body":{"interfaces/Day-1.html":{}}}],["models/payload",{"_index":444,"title":{},"body":{"interfaces/Day-1.html":{}}}],["models/us",{"_index":445,"title":{},"body":{"interfaces/Day-1.html":{},"components/MemberFormComponent.html":{},"injectables/UserService.html":{}}}],["modul",{"_index":188,"title":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DropdownModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DropdownModule.html":{},"modules.html":{},"overview.html":{}}}],["moduleid",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["modulewithprovid",{"_index":510,"title":{},"body":{"modules/DropdownModule.html":{}}}],["moment",{"_index":378,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{},"dependencies.html":{}}}],["moment().format(date_format",{"_index":552,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment(v.endd",{"_index":567,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment(v.startd",{"_index":569,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment.duration(end.clone().diff(start)).ashour",{"_index":573,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment.duration(end.diff(start)).asday",{"_index":571,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment.mo",{"_index":405,"title":{},"body":{"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["monday",{"_index":88,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["month",{"_index":750,"title":{"interfaces/Month.html":{}},"body":{"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{}}}],["month'},{'nam",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["month/month.compon",{"_index":388,"title":{},"body":{"modules/DashboardModule.html":{}}}],["monthcompon",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["multi",{"_index":648,"title":{},"body":{"interfaces/Location.html":{}}}],["name",{"_index":11,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["navig",{"_index":687,"title":{},"body":{"interfaces/Location.html":{}}}],["navigator.geolocation.getcurrentposition((posit",{"_index":688,"title":{},"body":{"interfaces/Location.html":{}}}],["new",{"_index":410,"title":{},"body":{"injectables/DashboardService.html":{},"interfaces/Day-1.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/SidebarComponent.html":{}}}],["newgroup",{"_index":631,"title":{},"body":{"injectables/GroupService.html":{},"components/SidebarComponent.html":{}}}],["newtodo",{"_index":849,"title":{},"body":{"components/TodoListComponent.html":{}}}],["ng",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/NgbDateNativeAdapter.html":{},"dependencies.html":{}}}],["ng_value_accessor",{"_index":643,"title":{},"body":{"interfaces/Location.html":{}}}],["ngbdateadapt",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"injectables/NgbDateNativeAdapter.html":{}}}],["ngbdatenativeadapt",{"_index":251,"title":{"injectables/NgbDateNativeAdapter.html":{}},"body":{"modules/AppModule.html":{},"injectables/NgbDateNativeAdapter.html":{}}}],["ngbdatestruct",{"_index":773,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["ngbmodul",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["ngbmodule.forroot",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["ngmodul",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DropdownModule.html":{}}}],["ngmodule({declar",{"_index":514,"title":{},"body":{"modules/DropdownModule.html":{}}}],["ngoninit",{"_index":538,"title":{},"body":{"interfaces/EventElement.html":{},"interfaces/Location.html":{},"components/SidebarComponent.html":{}}}],["ngx",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":640,"title":{},"body":{"interfaces/Location.html":{}}}],["none",{"_index":929,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["note",{"_index":65,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["notfoundcompon",{"_index":174,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["notif",{"_index":72,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["notificationgranular",{"_index":43,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["notificationvalu",{"_index":73,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["novemb",{"_index":765,"title":{},"body":{"interfaces/Month.html":{}}}],["null",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Day-1.html":{},"interfaces/Location.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["number",{"_index":28,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"interfaces/DateObject.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"interfaces/Recurring.html":{},"injectables/SessionService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["object",{"_index":799,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["observ",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Day-1.html":{}}}],["observable(err",{"_index":465,"title":{},"body":{"interfaces/Day-1.html":{}}}],["observable.throw(err",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["onauth",{"_index":457,"title":{},"body":{"interfaces/Day-1.html":{}}}],["onblur",{"_index":695,"title":{},"body":{"interfaces/Location.html":{}}}],["onchang",{"_index":663,"title":{},"body":{"interfaces/Location.html":{}}}],["onchangecallback",{"_index":656,"title":{},"body":{"interfaces/Location.html":{}}}],["ontouchedcallback",{"_index":655,"title":{},"body":{"interfaces/Location.html":{}}}],["option",{"_index":8,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DropdownModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":597,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["overview",{"_index":956,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownerid",{"_index":53,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["p",{"_index":461,"title":{},"body":{"interfaces/Day-1.html":{}}}],["packag",{"_index":899,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":787,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["page(markdown",{"_index":945,"title":{},"body":{"index.html":{}}}],["param",{"_index":812,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["paramet",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseday(curr",{"_index":547,"title":{},"body":{"interfaces/EventElement.html":{}}}],["parseevents(payload",{"_index":467,"title":{},"body":{"interfaces/Day-1.html":{}}}],["password",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["past",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DateObject.html":{}}}],["payload",{"_index":448,"title":{},"body":{"interfaces/Day-1.html":{}}}],["payload.ev",{"_index":469,"title":{},"body":{"interfaces/Day-1.html":{}}}],["payload.groups.foreach(group",{"_index":470,"title":{},"body":{"interfaces/Day-1.html":{}}}],["payloadmodel",{"_index":443,"title":{"interfaces/PayloadModel.html":{}},"body":{"interfaces/Day-1.html":{},"interfaces/PayloadModel.html":{}}}],["picker",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":809,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["pipetransform",{"_index":810,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["place",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Location.html":{},"index.html":{}}}],["place.formatted_address",{"_index":681,"title":{},"body":{"interfaces/Location.html":{}}}],["place.geometri",{"_index":679,"title":{},"body":{"interfaces/Location.html":{}}}],["place.geometry.location.lat",{"_index":682,"title":{},"body":{"interfaces/Location.html":{}}}],["place.geometry.location.lng",{"_index":683,"title":{},"body":{"interfaces/Location.html":{}}}],["pleas",{"_index":941,"title":{},"body":{"index.html":{}}}],["popov",{"_index":583,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover'},{'nam",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["popover.compon",{"_index":391,"title":{},"body":{"modules/DashboardModule.html":{}}}],["popover.component.html",{"_index":585,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover.component.less",{"_index":584,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover.component.t",{"_index":582,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover.component.ts:11",{"_index":587,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover/ev",{"_index":390,"title":{},"body":{"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{}}}],["popovermodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["popovermodule.forroot",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["position.coords.latitud",{"_index":690,"title":{},"body":{"interfaces/Location.html":{}}}],["position.coords.longitud",{"_index":692,"title":{},"body":{"interfaces/Location.html":{}}}],["privat",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["promis",{"_index":452,"title":{},"body":{"interfaces/Day-1.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["promise(resolv",{"_index":490,"title":{},"body":{"interfaces/Day-1.html":{}}}],["promise.resolve(mockpayload",{"_index":456,"title":{},"body":{"interfaces/Day-1.html":{}}}],["promisefordata",{"_index":451,"title":{},"body":{"interfaces/Day-1.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Week.html":{}}}],["provid",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DropdownModule.html":{},"interfaces/Location.html":{},"overview.html":{}}}],["public",{"_index":296,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/UserService.html":{}}}],["pure",{"_index":811,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["re",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["reactiveformsmodul",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["recur",{"_index":84,"title":{"interfaces/Recurring.html":{}},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["registeronchange(fn",{"_index":698,"title":{},"body":{"interfaces/Location.html":{}}}],["registerontouched(fn",{"_index":701,"title":{},"body":{"interfaces/Location.html":{}}}],["remov",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["removetodo",{"_index":851,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["removetodo(todo",{"_index":856,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["repeatweekli",{"_index":92,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["replaysubject",{"_index":407,"title":{},"body":{"injectables/DashboardService.html":{}}}],["requestopt",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"miscellaneous/functions.html":{}}}],["requir",{"_index":724,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.json",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Day-1.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["reset",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DropdownModule.html":{},"overview.html":{}}}],["resolve(this.eventmap",{"_index":491,"title":{},"body":{"interfaces/Day-1.html":{}}}],["resolve(this.payload.group",{"_index":493,"title":{},"body":{"interfaces/Day-1.html":{}}}],["result",{"_index":31,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"modules/DropdownModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":106,"title":{},"body":{"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/Day-1.html":{},"modules/DropdownModule.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["rout",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["router",{"_index":298,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["routermodule.forroot(app_rout",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["rxj",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"dependencies.html":{}}}],["rxjs/add/operator/catch",{"_index":438,"title":{},"body":{"interfaces/Day-1.html":{}}}],["rxjs/add/operator/map",{"_index":439,"title":{},"body":{"interfaces/Day-1.html":{}}}],["rxjs/add/operator/topromis",{"_index":440,"title":{},"body":{"interfaces/Day-1.html":{}}}],["rxjs/observ",{"_index":437,"title":{},"body":{"interfaces/Day-1.html":{}}}],["saturday",{"_index":91,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["search",{"_index":650,"title":{},"body":{"interfaces/Location.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["searchfilterpip",{"_index":258,"title":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}},"body":{"modules/AppModule.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["searchfilterpipe.filter(item",{"_index":813,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["select",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"components/GroupSelectForm.html":{}}}],["select'},{'nam",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["selector",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["septemb",{"_index":764,"title":{},"body":{"interfaces/Month.html":{}}}],["services/auth",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["services/auth.servic",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["services/cor",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GroupService.html":{}}}],["services/interceptor",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["services/session.servic",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["sessionservic",{"_index":203,"title":{"injectables/SessionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/SessionService.html":{},"overview.html":{}}}],["set",{"_index":660,"title":{},"body":{"interfaces/Location.html":{}}}],["setcurrentposit",{"_index":685,"title":{},"body":{"interfaces/Location.html":{}}}],["setdisabledstate?(isdis",{"_index":702,"title":{},"body":{"interfaces/Location.html":{}}}],["sethour",{"_index":579,"title":{},"body":{"interfaces/EventElement.html":{}}}],["setsess",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["setsession(authresult",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/combo",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/datepick",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/dropdown/dropdown.modul",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/loc",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/not",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["showev",{"_index":29,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{}}}],["sidebar",{"_index":826,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["sidebar.component.html",{"_index":828,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.less",{"_index":827,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.compon",{"_index":395,"title":{},"body":{"modules/DashboardModule.html":{}}}],["sidebarcompon",{"_index":176,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"modules/DropdownModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"index.html":{}}}],["src/.../day.component.t",{"_index":927,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../event.t",{"_index":928,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../interceptor.t",{"_index":932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../todo.t",{"_index":933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.t",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/group/group",{"_index":590,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["src/app/group/group.service.t",{"_index":622,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:13",{"_index":629,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:19",{"_index":630,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:25",{"_index":627,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:9",{"_index":625,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/login/login.component.t",{"_index":705,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:13",{"_index":711,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:15",{"_index":714,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":713,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/models/event.t",{"_index":38,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/event.ts:77",{"_index":40,"title":{},"body":{"interfaces/ApiEvent.html":{}}}],["src/app/models/event.ts:85",{"_index":793,"title":{},"body":{"interfaces/Recurring.html":{}}}],["src/app/models/event.ts:86",{"_index":794,"title":{},"body":{"interfaces/Recurring.html":{}}}],["src/app/models/group.t",{"_index":5,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:11",{"_index":94,"title":{},"body":{"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:12",{"_index":93,"title":{},"body":{"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:13",{"_index":95,"title":{},"body":{"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:5",{"_index":19,"title":{},"body":{"interfaces/ApiCreateGroup.html":{}}}],["src/app/models/group.ts:6",{"_index":16,"title":{},"body":{"interfaces/ApiCreateGroup.html":{}}}],["src/app/models/group.ts:7",{"_index":18,"title":{},"body":{"interfaces/ApiCreateGroup.html":{}}}],["src/app/models/payload.t",{"_index":788,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:10",{"_index":791,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:7",{"_index":792,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:8",{"_index":790,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:9",{"_index":789,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/todo.t",{"_index":97,"title":{},"body":{"interfaces/ApiTodo.html":{},"miscellaneous/functions.html":{}}}],["src/app/models/todo.ts:2",{"_index":102,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:3",{"_index":103,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:4",{"_index":100,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:5",{"_index":99,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:6",{"_index":101,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/user.t",{"_index":34,"title":{},"body":{"interfaces/ApiCreateUser.html":{},"interfaces/ApiUser.html":{}}}],["src/app/models/user.ts:10",{"_index":110,"title":{},"body":{"interfaces/ApiUser.html":{}}}],["src/app/models/user.ts:3",{"_index":36,"title":{},"body":{"interfaces/ApiCreateUser.html":{}}}],["src/app/models/user.ts:4",{"_index":37,"title":{},"body":{"interfaces/ApiCreateUser.html":{}}}],["src/app/models/user.ts:8",{"_index":109,"title":{},"body":{"interfaces/ApiUser.html":{}}}],["src/app/models/user.ts:9",{"_index":108,"title":{},"body":{"interfaces/ApiUser.html":{}}}],["src/app/services/auth",{"_index":294,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/services/auth.service.t",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:11",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:13",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:19",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:30",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:37",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:45",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/cor",{"_index":433,"title":{},"body":{"interfaces/Day-1.html":{}}}],["src/app/services/interceptor.t",{"_index":934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/services/session.service.t",{"_index":820,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:6",{"_index":823,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/shared/combo",{"_index":795,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["src/app/shared/datepick",{"_index":767,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["src/app/shared/dropdown/dropdown.module.t",{"_index":509,"title":{},"body":{"modules/DropdownModule.html":{}}}],["src/app/shared/loc",{"_index":633,"title":{},"body":{"interfaces/Location.html":{}}}],["src/app/shared/not",{"_index":783,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["src/app/user/member/member.component.t",{"_index":725,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:12",{"_index":738,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:13",{"_index":732,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:14",{"_index":733,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:15",{"_index":734,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:17",{"_index":731,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:21",{"_index":737,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:32",{"_index":736,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/user.service.t",{"_index":886,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:11",{"_index":891,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:17",{"_index":890,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:23",{"_index":889,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:8",{"_index":887,"title":{},"body":{"injectables/UserService.html":{}}}],["src/dashboard/dashboard.component.t",{"_index":373,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/dashboard/dashboard.component.ts:11",{"_index":377,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/dashboard/dashboard.module.t",{"_index":385,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/dashboard/dashboard.service.t",{"_index":401,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:13",{"_index":406,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:7",{"_index":403,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/day/day.component.t",{"_index":518,"title":{},"body":{"interfaces/EventElement.html":{},"miscellaneous/enumerations.html":{}}}],["src/dashboard/day/day.component.ts:112",{"_index":523,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/day/day.component.ts:113",{"_index":522,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/day/day.component.ts:114",{"_index":521,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/ev",{"_index":581,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["src/dashboard/models/date.model.t",{"_index":414,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:2",{"_index":426,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:3",{"_index":421,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:4",{"_index":422,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:5",{"_index":423,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:6",{"_index":424,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:7",{"_index":425,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:8",{"_index":420,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/day.model.t",{"_index":427,"title":{},"body":{"interfaces/Day.html":{}}}],["src/dashboard/models/day.model.ts:5",{"_index":428,"title":{},"body":{"interfaces/Day.html":{}}}],["src/dashboard/models/day.model.ts:6",{"_index":429,"title":{},"body":{"interfaces/Day.html":{}}}],["src/dashboard/models/month.model.t",{"_index":751,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/month.model.ts:4",{"_index":753,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/month.model.ts:5",{"_index":755,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/month.model.ts:6",{"_index":754,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/week.model.t",{"_index":892,"title":{},"body":{"interfaces/Week.html":{}}}],["src/dashboard/models/week.model.ts:4",{"_index":894,"title":{},"body":{"interfaces/Week.html":{}}}],["src/dashboard/models/week.model.ts:5",{"_index":893,"title":{},"body":{"interfaces/Week.html":{}}}],["src/dashboard/sidebar/sidebar.component.t",{"_index":825,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/sidebar/sidebar.component.ts:13",{"_index":838,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/sidebar/sidebar.component.ts:14",{"_index":832,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/sidebar/sidebar.component.ts:18",{"_index":836,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/sidebar/sidebar.component.ts:22",{"_index":835,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/sidebar/sidebar.component.ts:26",{"_index":834,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/sidebar/sidebar.component.ts:31",{"_index":837,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/dashboard/todo",{"_index":845,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["start",{"_index":55,"title":{"index.html":{}},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["start.hour",{"_index":576,"title":{},"body":{"interfaces/EventElement.html":{}}}],["start.minut",{"_index":577,"title":{},"body":{"interfaces/EventElement.html":{}}}],["startdat",{"_index":60,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["starttim",{"_index":56,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["state",{"_index":532,"title":{},"body":{"interfaces/EventElement.html":{}}}],["static",{"_index":515,"title":{},"body":{"modules/DropdownModule.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/AuthService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"interfaces/Month.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"interfaces/Week.html":{}}}],["styleurl",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["subscrib",{"_index":537,"title":{},"body":{"interfaces/EventElement.html":{}}}],["sunday",{"_index":896,"title":{},"body":{"interfaces/Week.html":{}}}],["support",{"_index":953,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":954,"title":{},"body":{"modules.html":{}}}],["templat",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["templateurl",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["temppayload",{"_index":455,"title":{},"body":{"interfaces/Day-1.html":{}}}],["term",{"_index":802,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["term'",{"_index":808,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["term.tolowercas",{"_index":815,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["test",{"_index":947,"title":{},"body":{"index.html":{}}}],["then(group",{"_index":497,"title":{},"body":{"interfaces/Day-1.html":{}}}],["then(p",{"_index":460,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this._sortevents(this.ev",{"_index":475,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.added.emit(us",{"_index":747,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.auth.isauthent",{"_index":308,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.authservice.login(userinfo).subscribe(r",{"_index":720,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.change.emit(this.loc",{"_index":668,"title":{},"body":{"interfaces/Location.html":{}}}],["this.changedate(mo",{"_index":411,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.corecache.addgroup(newgroup",{"_index":632,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.corecache.currentus",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.corecache.filtereventsbygroup(group",{"_index":843,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.corecache.getdatemap().then(map",{"_index":541,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.corecache.getgroups().then(group",{"_index":840,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.corecache.onauth",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.curr",{"_index":544,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.current.next(d",{"_index":412,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.dashboardservice.current.subscribe(cur",{"_index":543,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.dashboardservice.current.subscribe(d",{"_index":860,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.dat",{"_index":861,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.datemap",{"_index":476,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.datemap.get(event.startdate).push(ev",{"_index":482,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.datemap.has(event.startd",{"_index":481,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.datemap.set(event.startd",{"_index":483,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.day",{"_index":559,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.day.events.foreach(ev",{"_index":562,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.diff",{"_index":549,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.dis",{"_index":703,"title":{},"body":{"interfaces/Location.html":{}}}],["this.ev",{"_index":468,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.eventel",{"_index":548,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.eventelements.push",{"_index":563,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.eventmap",{"_index":477,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.eventmap.set(event.id",{"_index":480,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.events.concat(group.ev",{"_index":472,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.events.foreach(ev",{"_index":478,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.events.length",{"_index":473,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.fb.group",{"_index":716,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getduration(ev",{"_index":565,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.getgroup",{"_index":496,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.getgroups().then(group",{"_index":502,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.getstart(ev",{"_index":564,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.group",{"_index":841,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.groupdropdown.nativeel",{"_index":615,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["this.groupform.patchvalue(group",{"_index":620,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["this.groupnotfound",{"_index":617,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["this.height",{"_index":550,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.hours.push(12",{"_index":580,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.http.delete(api_root",{"_index":883,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.get(api_root",{"_index":463,"title":{},"body":{"interfaces/Day-1.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["this.http.post(api_root",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["this.http.put(api_root",{"_index":885,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.innervalu",{"_index":659,"title":{},"body":{"interfaces/Location.html":{}}}],["this.isauthent",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isopen",{"_index":844,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.load",{"_index":539,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.loc",{"_index":669,"title":{},"body":{"interfaces/Location.html":{}}}],["this.location.latitud",{"_index":689,"title":{},"body":{"interfaces/Location.html":{}}}],["this.location.longitud",{"_index":691,"title":{},"body":{"interfaces/Location.html":{}}}],["this.loginform",{"_index":715,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.map",{"_index":542,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.map.get(d",{"_index":561,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.map.has(d",{"_index":560,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.mapapiloader.load().then",{"_index":671,"title":{},"body":{"interfaces/Location.html":{}}}],["this.memberdropdown.nativeel",{"_index":744,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.memberform.patchvalue(us",{"_index":746,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.membernotfound",{"_index":745,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.newtodo",{"_index":862,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.ngzone.run",{"_index":675,"title":{},"body":{"interfaces/Location.html":{}}}],["this.onchangecallback",{"_index":699,"title":{},"body":{"interfaces/Location.html":{}}}],["this.onchangecallback(v",{"_index":667,"title":{},"body":{"interfaces/Location.html":{}}}],["this.ontouchedcallback",{"_index":696,"title":{},"body":{"interfaces/Location.html":{}}}],["this.parseday(this.current.clon",{"_index":546,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.parseevents(this.payload",{"_index":462,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.payload",{"_index":459,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.payload.group",{"_index":494,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.promisefordata",{"_index":458,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.promisefordata.then(payload",{"_index":488,"title":{},"body":{"interfaces/Day-1.html":{}}}],["this.router.navig",{"_index":722,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['group/cr",{"_index":842,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.router.navigate(['login",{"_index":309,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.setcurrentposit",{"_index":670,"title":{},"body":{"interfaces/Location.html":{}}}],["this.sethour",{"_index":540,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.setsession(r",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.todos.indexof(todo",{"_index":867,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todos.push(this.newtodo",{"_index":864,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todos.splice(index",{"_index":868,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todoservice.addtodo(this.newtodo",{"_index":865,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todoservice.removetodo(todo",{"_index":869,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.valu",{"_index":684,"title":{},"body":{"interfaces/Location.html":{}}}],["thursday",{"_index":90,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["time",{"_index":54,"title":{},"body":{"interfaces/ApiEvent.html":{},"injectables/AuthService.html":{},"interfaces/Recurring.html":{},"dependencies.html":{}}}],["timepickermodul",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["timepickermodule.forroot",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["titl",{"_index":48,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/ApiTodo.html":{},"interfaces/Recurring.html":{}}}],["tocompar",{"_index":814,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["today",{"_index":551,"title":{},"body":{"interfaces/EventElement.html":{}}}],["todo",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"miscellaneous/functions.html":{}}}],["todo(d",{"_index":105,"title":{},"body":{"interfaces/ApiTodo.html":{},"miscellaneous/functions.html":{}}}],["todo(date.tod",{"_index":863,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo(this.date.tod",{"_index":866,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo.id",{"_index":884,"title":{},"body":{"injectables/TodoListService.html":{}}}],["todo.titl",{"_index":870,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todolistcompon",{"_index":178,"title":{"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["todolistservic",{"_index":384,"title":{"injectables/TodoListService.html":{}},"body":{"modules/DashboardModule.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"overview.html":{}}}],["todoservic",{"_index":854,"title":{},"body":{"components/TodoListComponent.html":{}}}],["togglepanel",{"_index":831,"title":{},"body":{"components/SidebarComponent.html":{}}}],["token",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["token'",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["tomodel",{"_index":770,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["tomodel(d",{"_index":774,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["top",{"_index":520,"title":{},"body":{"interfaces/EventElement.html":{}}}],["topromis",{"_index":466,"title":{},"body":{"interfaces/Day-1.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["touch",{"_index":693,"title":{},"body":{"interfaces/Location.html":{}}}],["transform",{"_index":798,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["transform(item",{"_index":806,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["tree",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["tri",{"_index":939,"title":{},"body":{"index.html":{}}}],["true",{"_index":310,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{}}}],["tuesday",{"_index":897,"title":{},"body":{"interfaces/Week.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["undefin",{"_index":680,"title":{},"body":{"interfaces/Location.html":{},"miscellaneous/functions.html":{}}}],["updatetodo",{"_index":873,"title":{},"body":{"injectables/TodoListService.html":{}}}],["updatetodo(todo",{"_index":881,"title":{},"body":{"injectables/TodoListService.html":{}}}],["us",{"_index":944,"title":{},"body":{"index.html":{}}}],["usage(markdown",{"_index":950,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["useexist",{"_index":647,"title":{},"body":{"interfaces/Location.html":{}}}],["usefactori",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["user",{"_index":21,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/MemberFormComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":749,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["user.nam",{"_index":748,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["user.servic",{"_index":739,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["user/member/member.compon",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.servic",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["userinfo",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["userinfo).map(r",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernam",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["userservic",{"_index":204,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/MemberFormComponent.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["utcdatevalu",{"_index":419,"title":{},"body":{"interfaces/DateObject.html":{},"interfaces/EventElement.html":{}}}],["v",{"_index":666,"title":{},"body":{"interfaces/Location.html":{}}}],["v.endtim",{"_index":568,"title":{},"body":{"interfaces/EventElement.html":{}}}],["v.starttim",{"_index":570,"title":{},"body":{"interfaces/EventElement.html":{}}}],["valid",{"_index":712,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":718,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.requir",{"_index":717,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":409,"title":{},"body":{"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["value(v",{"_index":665,"title":{},"body":{"interfaces/Location.html":{}}}],["var",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["verifi",{"_index":678,"title":{},"body":{"interfaces/Location.html":{}}}],["viewchild",{"_index":609,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["viewchild('groupdropdown",{"_index":611,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["viewchild('memberdropdown",{"_index":740,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["viewchild('search",{"_index":649,"title":{},"body":{"interfaces/Location.html":{}}}],["void",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Day-1.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{}}}],["want",{"_index":536,"title":{},"body":{"interfaces/EventElement.html":{}}}],["wednesday",{"_index":89,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["week",{"_index":47,"title":{"interfaces/Week.html":{}},"body":{"interfaces/ApiEvent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"interfaces/Week.html":{},"miscellaneous/enumerations.html":{}}}],["week.model",{"_index":756,"title":{},"body":{"interfaces/Month.html":{}}}],["week/week.compon",{"_index":389,"title":{},"body":{"modules/DashboardModule.html":{}}}],["weekcompon",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/SidebarComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["weekday",{"_index":752,"title":{},"body":{"interfaces/Month.html":{},"interfaces/Week.html":{}}}],["whether",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["workout",{"_index":930,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["write",{"_index":942,"title":{},"body":{"index.html":{}}}],["writevalue(valu",{"_index":697,"title":{},"body":{"interfaces/Location.html":{}}}],["x.id).indexof(groupid",{"_index":499,"title":{},"body":{"interfaces/Day-1.html":{}}}],["xhrbackend",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"miscellaneous/functions.html":{}}}],["year",{"_index":777,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["zone.j",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DropdownModule.html":{},"interfaces/Location.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiCreateGroup.html":{"url":"interfaces/ApiCreateGroup.html","title":"interface - ApiCreateGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiCreateGroup\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/group.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Description\n                                \n                                \n                                        Members\n                                \n                                \n                                        Name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                    \n                                \n                                \n                                    \n                                        Description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Members\n                                    \n                                \n                                \n                                    \n                                        Members:     ApiUser[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiUser[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:5\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from './user';\nimport { ApiEvent } from './event';\n\nexport interface ApiCreateGroup {\n    Name: string;\n    Description?: string;\n    Members: ApiUser[];\n}\n\nexport interface ApiGroup extends ApiCreateGroup {\n    Id: number;\n    Events: ApiEvent[];\n    ShowEvents?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiCreateUser.html":{"url":"interfaces/ApiCreateUser.html","title":"interface - ApiCreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiCreateUser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Email\n                                \n                                \n                                        Name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                    \n                                \n                                \n                                    \n                                        Email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiCreateUser {\n    Email: string;\n    Name: string;\n}\n\nexport interface ApiUser {\n    Id: number;\n    Email: string;\n    Name: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiEvent.html":{"url":"interfaces/ApiEvent.html","title":"interface - ApiEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiCreateEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/event.ts:77\n                                        \n                                    \n\n                            \n                                \n                                    Id of the event\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from \"./user\";\nimport { ApiGroup } from \"./group\";\n\nexport enum NotificationGranularity {\n    Minutes,\n    Hours,\n    Days,\n    Weeks\n}\n\nexport interface ApiCreateEvent {\n    /**\n     * Title ex) Doctors Appointment\n     */\n    Title: string;\n    /**\n     * Id of the member that made the event\n     */\n    OwnerId: number;\n    /**\n     * Time of day that the event should start\n     */\n    StartTime: string;\n    /**\n     * Time of day that the event should end\n     */\n    EndTime: string;\n    /**\n     * Date of the event (start date)\n     */\n    StartDate: string;\n    /**\n     * End date\n     */\n    EndDate?: string;\n    /** \n     * Either basic location or address\n     */\n    Location?: string;\n    /**\n     * Notes or description of the event\n     */\n    Notes?: string;\n    /**\n     * List of member's who are invited to the event\n     */\n    Members: ApiUser[];\n    /**\n     * How many (minutes/hours/days/weeks) before the event that the user should be notifed\n     */\n    NotificationValue?: number;\n    /**\n     * Notification granularity (minutes/hours/days/weeks)\n     */\n    NotificationGranularity?: NotificationGranularity;\n    /**\n     * group id that this event should belong to, if in a group\n     */\n    GroupId?: number;\n    /**\n     * Color of the event in the form of a hash code (#00000)\n     */\n    Color?: string;\n\n    /**\n     * If it should be hidden on the calendar\n     */\n    Hidden?: boolean;\n\n    Recurring?: Recurring;\n}\n\nexport interface ApiEvent extends ApiCreateEvent {\n    /**\n     * Id of the event\n     */\n    Id: number;\n}\n\nexport interface Recurring {\n    /**\n     * Binary number that maps to days of the week that it should be recurring\n     * ex) 0101101, maps to every monday, wednesday, thursday, saturday\n     */\n    Days: number;\n    RepeatWeekly: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiGroup.html":{"url":"interfaces/ApiGroup.html","title":"interface - ApiGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiGroup\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/group.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiCreateGroup\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Events\n                                \n                                \n                                        Id\n                                \n                                \n                                            Optional\n                                        ShowEvents\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Events\n                                    \n                                \n                                \n                                    \n                                        Events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:11\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ShowEvents\n                                    \n                                \n                                \n                                    \n                                        ShowEvents:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:13\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from './user';\nimport { ApiEvent } from './event';\n\nexport interface ApiCreateGroup {\n    Name: string;\n    Description?: string;\n    Members: ApiUser[];\n}\n\nexport interface ApiGroup extends ApiCreateGroup {\n    Id: number;\n    Events: ApiEvent[];\n    ShowEvents?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiTodo.html":{"url":"interfaces/ApiTodo.html","title":"interface - ApiTodo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiTodo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/todo.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Date\n                                \n                                \n                                            Optional\n                                        Description\n                                \n                                \n                                        Done\n                                \n                                \n                                            Optional\n                                        Id\n                                \n                                \n                                        Title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Date\n                                    \n                                \n                                \n                                    \n                                        Date:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                    \n                                \n                                \n                                    \n                                        Description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Done\n                                    \n                                \n                                \n                                    \n                                        Done:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:2\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Title\n                                    \n                                \n                                \n                                    \n                                        Title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:3\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiTodo {\n    Id?: number;\n    Title: string;\n    Description?: string;\n    Date: Date;\n    Done: boolean;\n}\n\nexport function Todo(date: Date): ApiTodo {\n    return {\n        Title: \"\",\n        Description: \"\",\n        Done: false,\n        Date: date\n    };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiUser.html":{"url":"interfaces/ApiUser.html","title":"interface - ApiUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiUser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Email\n                                \n                                \n                                        Id\n                                \n                                \n                                        Name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                    \n                                \n                                \n                                    \n                                        Email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:10\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiCreateUser {\n    Email: string;\n    Name: string;\n}\n\nexport interface ApiUser {\n    Id: number;\n    Email: string;\n    Name: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                app\n            \n\n\n\n\n            \n                selector\n                my-app\n            \n\n            \n                styleUrls\n                app.component.less\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { CoreCacheService } from './services/core-cache.service';\n\n@Component({\n  moduleId: 'app',\n  selector: 'my-app',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.less']\n})\nexport class AppComponent {\n  constructor(private authService: AuthService, private coreCache: CoreCacheService) {}\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [{'name': 'Dropdown', 'selector': '[dropdown]'},{'name': 'DropdownMenu', 'selector': '[dropdownMenu]'},{'name': 'DropdownToggle', 'selector': '[dropdownToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nEditEventComponent\n\nEditEventComponent\n\nAppModule -->\n\nEditEventComponent->AppModule\n\n\n\n\n\nComboBoxComponent\n\nComboBoxComponent\n\nAppModule -->\n\nComboBoxComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nLocationInput\n\nLocationInput\n\nAppModule -->\n\nLocationInput->AppModule\n\n\n\n\n\nCreateGroupComponent\n\nCreateGroupComponent\n\nAppModule -->\n\nCreateGroupComponent->AppModule\n\n\n\n\n\nMemberFormComponent\n\nMemberFormComponent\n\nAppModule -->\n\nMemberFormComponent->AppModule\n\n\n\n\n\nGroupSelectForm\n\nGroupSelectForm\n\nAppModule -->\n\nGroupSelectForm->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nAppModule -->\n\nDropdownModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nCoreCacheService\n\nCoreCacheService\n\nAppModule -->\n\nCoreCacheService->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nEventService\n\nEventService\n\nAppModule -->\n\nEventService->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nAppModule -->\n\nGroupService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                EditEventComponent\n                            \n                            \n                                ComboBoxComponent\n                            \n                            \n                                NotFoundComponent\n                            \n                            \n                                LocationInput\n                            \n                            \n                                CreateGroupComponent\n                            \n                            \n                                MemberFormComponent\n                            \n                            \n                                GroupSelectForm\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CoreCacheService\n                            \n                            \n                                     AuthGuard\n                            \n                            \n                                     AuthService\n                            \n                            \n                                     EventService\n                            \n                            \n                                     SessionService\n                            \n                            \n                                     UserService\n                            \n                            \n                                     GroupService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DropdownModule\n                            \n                            \n                                    DashboardModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule, NgbDateAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DlDateTimePickerDateModule } from 'angular-bootstrap-datetimepicker';\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\nimport { APP_ROUTES } from './app.routing';\nimport { TimepickerModule, ModalModule, PopoverModule, CollapseModule } from 'ngx-bootstrap';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { httpFactory } from './services/interceptor';\n\nimport { AppComponent } from './app.component';\nimport { CoreCacheService } from './services/core-cache.service';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './services/auth-guard';\nimport { AuthService } from './services/auth.service';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { RouterModule } from '@angular/router';\nimport { EditEventComponent } from './event/edit-event/edit-event.component';\nimport { EventService } from './event/event.service';\nimport { SessionService } from './services/session.service';\nimport { NgbDateNativeAdapter } from './shared/datepicker-adapter.component';\nimport { DropdownModule } from './shared/dropdown/dropdown.module';\nimport { ComboBoxComponent } from './shared/combo-box/combo-box.component';\nimport { SearchFilterPipe } from './shared/combo-box/search.pipe';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\nimport { AgmCoreModule } from '@agm/core';\nimport { UserService } from './user/user.service';\nimport { LocationInput } from './shared/location-input/location-input.component';\nimport { GroupService } from './group/group.service';\nimport { CreateGroupComponent } from './group/create-group/create-group.component';\nimport { MemberFormComponent } from './user/member/member.component';\nimport { GroupSelectForm } from './group/group-select-form/group-select-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    EditEventComponent,\n    ComboBoxComponent,\n    SearchFilterPipe,\n    NotFoundComponent,\n    LocationInput,\n    CreateGroupComponent,\n    MemberFormComponent,\n    GroupSelectForm\n  ],\n  imports: [\n    NgbModule.forRoot(),\n    TimepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PopoverModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    CollapseModule.forRoot(),\n    AgmCoreModule.forRoot({\n      apiKey: \"AIzaSyDUJitlzdDW3SpdwzBzDW5YnTS_I-HeMCs\",\n      libraries: [\"places\"]\n    }),\n    DropdownModule,\n    RouterModule.forRoot(APP_ROUTES),\n    DashboardModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DlDateTimePickerDateModule,\n    HttpModule\n  ],\n  providers: [\n    CoreCacheService,\n    AuthGuard,\n    AuthService,\n    EventService,\n    SessionService,\n    UserService,\n    GroupService,\n    {\n      provide: NgbDateAdapter,\n      useClass: NgbDateNativeAdapter\n    },\n    {\n      provide: Http,\n      useFactory: httpFactory,\n      deps: [XHRBackend, RequestOptions]\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-guard.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth-guard.ts:8\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth-guard.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth-guard.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Private\n                                setSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, http: Http, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isAuthenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:45\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(userInfo: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:19\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfo\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:37\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setSession\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSession(authResult: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:30\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authResult\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http } from '@angular/http';\nimport { API_ROOT } from '../../constants.module';\nimport { Observable } from 'rxjs';\nimport { CoreCacheService } from './core-cache.service';\nimport { google } from 'googleapis';\n\n@Injectable()\nexport class AuthService {\n\n  constructor(public router: Router, private http: Http, private coreCache: CoreCacheService) {\n    if (this.isAuthenticated()) {\n      this.coreCache.OnAuth();\n    }\n  }\n\n  public login(userInfo: { email: string, password: string }): Observable {\n    return this.http.post(API_ROOT + '/login', userInfo).map(res => {\n      res = res.json();\n      this.setSession(res);\n      return res;\n    }, err => {\n        err = err ? err.json().message : 'Username or password incorrect';\n        return Observable.throw(err);\n    });\n  }\n\n  private setSession(authResult): void {\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('user_id', authResult.user.id);\n    this.coreCache.currentUser = authResult.user;\n    this.coreCache.OnAuth();\n  }\n\n  public logout(): void {\n    // Remove tokens and expiry time from localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user_id');\n    // Go back to the home route\n    this.router.navigate(['login']);\n  }\n\n  public isAuthenticated(): boolean {\n    // Check whether the current time is past the\n    // access token's expiry time\n    return localStorage.getItem('access_token') != null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-dashboard\n            \n\n            \n                styleUrls\n                dashboard.component.less\n            \n\n\n\n            \n                templateUrl\n                dashboard.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/dashboard.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'mnm-dashboard',\n    templateUrl: 'dashboard.component.html',\n    styleUrls: ['dashboard.component.less']\n})\n\nexport class DashboardComponent {\n    constructor(private router: Router) {}\n}\n\n    \n\n    \n        \n\n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [{'name': 'Dropdown', 'selector': '[dropdown]'},{'name': 'DropdownMenu', 'selector': '[dropdownMenu]'},{'name': 'DropdownToggle', 'selector': '[dropdownToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nDashboardModule -->\n\nSidebarComponent->DashboardModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nDashboardModule -->\n\nHeaderComponent->DashboardModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nDashboardModule -->\n\nMonthComponent->DashboardModule\n\n\n\n\n\nDayComponent\n\nDayComponent\n\nDashboardModule -->\n\nDayComponent->DashboardModule\n\n\n\n\n\nWeekComponent\n\nWeekComponent\n\nDashboardModule -->\n\nWeekComponent->DashboardModule\n\n\n\n\n\nEventPopoverComponent\n\nEventPopoverComponent\n\nDashboardModule -->\n\nEventPopoverComponent->DashboardModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nDashboardModule -->\n\nTodoListComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\nTodoListService\n\nTodoListService\n\nDashboardModule -->\n\nTodoListService->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                MonthComponent\n                            \n                            \n                                DayComponent\n                            \n                            \n                                WeekComponent\n                            \n                            \n                                EventPopoverComponent\n                            \n                            \n                                TodoListComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DashboardService\n                            \n                            \n                                     TodoListService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DashboardComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                DashboardComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\nimport { httpFactory } from '../app/services/interceptor';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { MonthComponent } from './month/month.component';\nimport { WeekComponent } from './week/week.component';\nimport { EventPopoverComponent } from './event-popover/event-popover.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RouterModule } from '@angular/router';\nimport { DASHBOARD_ROUTES } from './dashboard.routing';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { DashboardService } from './dashboard.service';\nimport { DayComponent } from './day/day.component';\nimport { CollapseModule } from 'ngx-bootstrap';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { TodoListService } from './todo-list/todo-list.service';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    SidebarComponent,\n    HeaderComponent,\n    MonthComponent,\n    DayComponent,\n    WeekComponent,\n    EventPopoverComponent,\n    TodoListComponent\n  ],\n  imports: [\n    RouterModule,\n    NgbModule.forRoot(),\n    CollapseModule.forRoot(),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule\n  ],\n  exports: [\n      DashboardComponent\n  ],\n  providers: [\n    DashboardService,\n    TodoListService,\n    {\n      provide: Http,\n      useFactory: httpFactory,\n      deps: [XHRBackend, RequestOptions]\n    }],\n  bootstrap: [DashboardComponent]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardService.html":{"url":"injectables/DashboardService.html","title":"injectable - DashboardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DashboardService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dashboard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/dashboard.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeDate(date: moment.Moment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/dashboard.service.ts:13\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    moment.Moment\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     moment.Moment\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        current:     ReplaySubject\n\n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/dashboard.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class DashboardService {\n    public current: ReplaySubject = new ReplaySubject();\n\n    constructor() {\n        this.changeDate(moment());\n    }\n\n    public changeDate(date: moment.Moment): moment.Moment {\n        this.current.next(date);\n        return date;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateObject.html":{"url":"interfaces/DateObject.html","title":"interface - DateObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateObject\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/date.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        current\n                                \n                                \n                                            Optional\n                                        display\n                                \n                                \n                                            Optional\n                                        display1\n                                \n                                \n                                            Optional\n                                        future\n                                \n                                \n                                            Optional\n                                        past\n                                \n                                \n                                        utcDateValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display1\n                                    \n                                \n                                \n                                    \n                                        display1:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        future\n                                    \n                                \n                                \n                                    \n                                        future:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        past\n                                    \n                                \n                                \n                                    \n                                        past:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        utcDateValue\n                                    \n                                \n                                \n                                    \n                                        utcDateValue:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface DateObject {\n    utcDateValue: number;\n    current?: boolean;\n    display?: string;\n    display1?: string;\n    future?: boolean;\n    past?: boolean;\n    active?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/day.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        events\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:     DateObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DateObject\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/day.model.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        events\n                                    \n                                \n                                \n                                    \n                                        events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/day.model.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { DateObject } from \"./date.model\";\nimport { ApiEvent } from \"../../app/models/event\";\n\nexport interface Day {\n    day: DateObject;\n    events: ApiEvent[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day-1.html":{"url":"interfaces/Day-1.html","title":"interface - Day-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/core-cache.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        events\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:     DateObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DateObject\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/services/core-cache.service.ts:139\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        events\n                                    \n                                \n                                \n                                    \n                                        events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/services/core-cache.service.ts:140\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { DateObject } from '../../dashboard/models/date.model';\nimport { ApiEvent } from '../models/event';\nimport { API_ROOT } from '../../constants.module';\nimport { PayloadModel } from '../models/payload';\nimport { ApiUser } from '../models/user';\nimport { MockPayload } from '../models/mock-payload';\nimport { ApiGroup } from '../models/group';\n\n@Injectable()\n\nexport class CoreCacheService {\n    currentUser: ApiUser;\n    payload: PayloadModel;\n    promiseForData: Promise;\n    constructor(private http: Http) {}\n    private events: ApiEvent[];\n    private dateMap: Map;\n    private eventMap: Map;\n    tempPayload: Promise = Promise.resolve(MockPayload);\n\n    OnAuth(): Promise {\n        this.promiseForData = this.Payload()\n                .then(p => {\n                    this.payload = p;\n                    this.ParseEvents(this.payload);\n                    return this.payload;\n                });\n\n        return this.promiseForData;\n    }\n\n    Payload(): Promise {\n        return this.http.get(API_ROOT + '/payload')\n            .map(res => res.json(), err => new Observable(err))\n            .toPromise();\n    }\n\n    private ParseEvents(payload: PayloadModel): void {\n        this.events = payload.Events;\n\n        payload.Groups.forEach(group => {\n            group.ShowEvents = true;\n            this.events = this.events.concat(group.Events);\n        });\n\n        if (this.events.length === 0) {\n            return;\n        }\n\n        this._sortEvents(this.events);\n\n        this.dateMap = new Map();\n        this.eventMap = new Map();\n\n        this.events.forEach(event => {\n            event.Hidden = false;\n            this.eventMap.set(event.Id, event);\n\n            if (this.dateMap.has(event.StartDate)) {\n                this.dateMap.get(event.StartDate).push(event);\n            } else {\n                this.dateMap.set(event.StartDate, [event]);\n            }\n        });\n    }\n\n    private _sortEvents(events: ApiEvent[]) {\n        events.sort((a, b) => {\n            if (a.StartDate > {\n        return this.promiseForData.then(payload => this.dateMap);\n    }\n\n    public GetEventMap(): Promise> {\n        if (this.eventMap) {\n            return new Promise(resolve => resolve(this.eventMap));\n        } else {\n            return this.promiseForData.then(payload => this.eventMap);\n        }\n    }\n\n    public GetGroups(): Promise {\n        if (this.payload) {\n            return new Promise(resolve => resolve(this.payload.Groups));\n        } else {\n            return this.promiseForData.then(payload => this.payload.Groups);\n        }\n    }\n\n    public GetGroupById(groupId: number): Promise {\n        return this.GetGroups()\n            .then(groups => {\n                let index = groups.map(x => x.Id).indexOf(groupId);\n                if (index > -1) {\n                    return groups[index];\n                } else {\n                    return null;\n                }\n            });\n    }\n\n    public AddGroup(group: ApiGroup): ApiGroup {\n        this.GetGroups().then(groups => groups.push());\n        return group;\n    }\n\n    public FilterEventsByGroup(group: ApiGroup): void {\n        if (this.events) {\n            group.Events.forEach(event => {\n                event.Hidden = !group.ShowEvents;\n            });\n        }\n    }\n}\n\ninterface Day {\n    day: DateObject;\n    events: ApiEvent[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n  Modules\n  DropdownModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nDropdown\n\nDropdown\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdown->DropdownModule\n\n\n\n\n\nDropdownToggle\n\nDropdownToggle\n\nDropdownModule -->\n\nDropdownToggle->DropdownModule\n\n\n\n\n\nDropdownMenu\n\nDropdownMenu\n\nDropdownModule -->\n\nDropdownMenu->DropdownModule\n\n\n\n\n\nDropdown \n\nDropdown \n\nDropdown  -->\n\nDropdownModule->Dropdown \n\n\n\n\n\nDropdownToggle \n\nDropdownToggle \n\nDropdownToggle  -->\n\nDropdownModule->DropdownToggle \n\n\n\n\n\nDropdownMenu \n\nDropdownMenu \n\nDropdownMenu  -->\n\nDropdownModule->DropdownMenu \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/dropdown/dropdown.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                Dropdown\n                            \n                            \n                                DropdownToggle\n                            \n                            \n                                DropdownMenu\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    Dropdown\n                            \n                            \n                                    DropdownToggle\n                            \n                            \n                                    DropdownMenu\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { Dropdown, DropdownToggle, DropdownMenu } from './dropdown.directive';\n\nconst DROPDOWN_DIRECTIVES = [Dropdown, DropdownToggle, DropdownMenu];\n\n@NgModule({declarations: DROPDOWN_DIRECTIVES, exports: DROPDOWN_DIRECTIVES})\nexport class DropdownModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: DropdownModule}; }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventElement.html":{"url":"interfaces/EventElement.html","title":"interface - EventElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventElement\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/day/day.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                                \n                                        height\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     ApiEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/day/day.component.ts:114\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/day/day.component.ts:113\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/day/day.component.ts:112\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { CoreCacheService } from '../../app/services/core-cache.service';\nimport { DateObject, Day } from '../models';\nimport {DATE_FORMAT} from '../../constants.module';\nimport * as moment from 'moment';\nimport { ApiEvent } from '../../app/models/event';\nimport { DashboardService } from '../dashboard.service';\nimport { ApiTodo } from '../../app/models/todo';\n\n@Component({\n    selector: 'mnm-day',\n    templateUrl: 'day.component.html',\n    styleUrls: ['day.component.less']\n})\n\n/**\n * @desc DayComponent\n */\nexport class DayComponent {\n    public current: moment.Moment;\n    public map: Map;\n    public day: Day;\n    public hours: string[] = [];\n    public eventElements: EventElement[] = [];\n    public loading: boolean = true;\n    public Granularity = Granularity;\n    public state: Granularity = Granularity.None;\n\n    private diff = 0;\n    private height = 0;\n\n    constructor(private coreCache: CoreCacheService,\n                private dashboardService: DashboardService) {}\n\n    /**\n     * @desc on init of this component, we want to get the date map and subscribe to the current date\n     */\n    ngOnInit(): void {\n        this.loading = true;\n        this.setHours();\n\n        this.coreCache.GetDateMap().then(map => {\n            this.map = map;\n            this.dashboardService.current.subscribe(cur => {\n                this.current = cur;\n                this.parseDay(this.current.clone());\n                this.loading = false;\n            });\n        });\n    }\n\n    public parseDay(curr: moment.Moment): void {\n        this.eventElements = [];\n        this.diff = 0;\n        this.height = 0;\n        let today = moment().format(DATE_FORMAT);\n        let date = curr.format(DATE_FORMAT);\n\n        let dateValue: DateObject = {\n            current: curr.format(DATE_FORMAT) === today,\n            display: curr.format('dddd, MMMM D'),\n            utcDateValue: curr.utc().valueOf()\n        };\n\n        this.day = {\n            day: dateValue,\n            events: this.map.has(date) ? this.map.get(date) : []\n        };\n\n        this.day.events.forEach(event => {\n            this.eventElements.push({\n                top: this.getStart(event),\n                height: this.getDuration(event),\n                event: event\n            });\n        });\n    }\n\n    public getDuration(v) {\n        let end = moment(v.EndDate + \" \" + v.EndTime);\n\n        let start = moment(v.StartDate + \" \" + v.StartTime);\n        if (moment.duration(end.diff(start)).asDays() >= 1) {\n            end = moment(v.StartDate + \" \" + \"24:00:00\");\n        }\n\n        return this.height = moment.duration(end.clone().diff(start)).asHours() * 100;\n    }\n\n    public getStart(v) {\n        let start = moment(v.StartDate + \" \" + v.StartTime);\n        return this.diff = ((start.hours() + (start.minutes() / 60)) * 100) - this.diff - this.height;\n    }\n\n    private setHours(): void {\n        this.hours.push(12 + 'am');\n        for (let i = 1; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventPopoverComponent.html":{"url":"components/EventPopoverComponent.html","title":"component - EventPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventPopoverComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/event-popover/event-popover.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-event-popover\n            \n\n            \n                styleUrls\n                event-popover.component.less\n            \n\n\n\n            \n                templateUrl\n                event-popover.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/event-popover/event-popover.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        event\n                    \n                    \n                            \n                            Type:    ApiEvent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/dashboard/event-popover/event-popover.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ApiEvent } from '../../app/models/event';\n\n@Component({\n    selector: 'mnm-event-popover',\n    templateUrl: 'event-popover.component.html',\n    styleUrls: ['event-popover.component.less']\n})\n\nexport class EventPopoverComponent {\n    @Input('event') event: ApiEvent;\n    constructor() {}\n}\n\n    \n\n    \n        {{event.Title}}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{event.Title}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [{'name': 'Dropdown', 'selector': '[dropdown]'},{'name': 'DropdownMenu', 'selector': '[dropdownMenu]'},{'name': 'DropdownToggle', 'selector': '[dropdownToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'EventPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupSelectForm.html":{"url":"components/GroupSelectForm.html","title":"component - GroupSelectForm","body":"\n                   \n\n\n\n\n\n  Components\n  GroupSelectForm\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/group/group-select-form/group-select-form.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                group-select\n            \n\n\n\n\n            \n                templateUrl\n                group-select-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groupDropdown\n                            \n                            \n                                groupNotFound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                groupSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                groups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                added\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/group/group-select-form/group-select-form.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groups\n                    \n                    \n                            \n                            Type:    ApiGroup[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        added\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addGroup(group: ApiGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:31\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    ApiGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        groupSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:20\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDropdown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupDropdown:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupNotFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupNotFound:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ApiGroup } from '../../models/group';\n\n@Component({\n    selector: 'group-select',\n    templateUrl: 'group-select-form.component.html'\n})\n\nexport class GroupSelectForm {\n    @ViewChild('groupDropdown') groupDropdown: ElementRef;\n    @Input('group') groupForm: FormGroup;\n    @Input('groups') groups: ApiGroup[];\n    @Output() added: EventEmitter = new EventEmitter();\n\n    groupNotFound: boolean = false;\n\n    constructor() {}\n\n    public groupSearch(): void {\n        let el = this.groupDropdown.nativeElement;\n        if (el.children.length === 0) {\n            this.groupNotFound = true;\n        } else if (el.children.length === 1 && el.children[0].id === \"not-found\") {\n            this.groupNotFound = true;\n        } else {\n            this.groupNotFound = false;\n        }\n    }\n\n    public addGroup(group: ApiGroup): void {\n        this.groupForm.patchValue(group);\n    }\n}\n\n    \n\n    \n        \n        \n        \n            \n                No Groups Found\n            \n            \n                {{group.Name}}\n            \n        \n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            No Groups Found                                        {{group.Name}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [{'name': 'Dropdown', 'selector': '[dropdown]'},{'name': 'DropdownMenu', 'selector': '[dropdownMenu]'},{'name': 'DropdownToggle', 'selector': '[dropdownToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'GroupSelectForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/group/group.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Create\n                            \n                            \n                                    Public\n                                Get\n                            \n                            \n                                    Public\n                                GetAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/group/group.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Create(group: ApiCreateGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group.service.ts:25\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    ApiCreateGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Get(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group.service.ts:13\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            GetAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group.service.ts:19\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiGroup, ApiCreateGroup } from '../models/group';\nimport { API_ROOT } from '../../constants.module';\nimport { CoreCacheService } from '../services/core-cache.service';\n\n@Injectable()\n\nexport class GroupService {\n    constructor(private http: Http,\n                private coreCache: CoreCacheService) {}\n\n    public Get(id: number): Promise {\n        return this.http.get(API_ROOT + '/group/' + id)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    public GetAll(): Promise {\n        return this.http.get(API_ROOT + '/group')\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    public Create(group: ApiCreateGroup): Promise {\n        return this.http.post(API_ROOT + '/group', group)\n            .map(res => {\n                let newGroup: ApiGroup = res.json();\n                this.coreCache.AddGroup(newGroup);\n                return newGroup;\n            })\n            .toPromise();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/location-input/location-input.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Address\n                                \n                                \n                                        Latitude\n                                \n                                \n                                        Longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Address\n                                    \n                                \n                                \n                                    \n                                        Address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/shared/location-input/location-input.component.ts:21\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Latitude\n                                    \n                                \n                                \n                                    \n                                        Latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/shared/location-input/location-input.component.ts:22\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Longitude\n                                    \n                                \n                                \n                                    \n                                        Longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/shared/location-input/location-input.component.ts:23\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Component,\n    ElementRef,\n    ViewChild,\n    NgZone,\n    forwardRef,\n    Input,\n    Output,\n    EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { } from 'googlemaps';\nimport { MapsAPILoader } from '@agm/core';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => LocationInput),\n    multi: true\n};\n\nexport interface Location {\n    Address: string;\n    Latitude: number;\n    Longitude: number;\n}\n\n@Component({\n    selector: 'location-input',\n    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],\n    template: `\n        \n        `\n})\nexport class LocationInput implements ControlValueAccessor {\n    @ViewChild('search')\n    public search: ElementRef;\n\n    @Input() disabled: boolean;\n    @Output() change: EventEmitter = new EventEmitter();\n\n    private location: Location;\n    private innerValue: any;\n\n    constructor(\n        private mapApiLoader: MapsAPILoader,\n        private ngZone: NgZone\n    ) {}\n\n    private onTouchedCallback: () => () => {};\n    private onChangeCallback: (_: any) => () => {};\n\n    // get accessor\n    get value(): any {\n        return this.innerValue;\n    };\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n        if (v !== this.innerValue) {\n            this.innerValue = v;\n            this.onChangeCallback(v);\n        }\n\n        // set latitude, longitude and zoom\n        this.change.emit(this.location);\n    }\n\n    ngOnInit(): void {\n        this.location = { Address: \"\", Latitude: 0, Longitude: 0 };\n        this.setCurrentPosition();\n\n        this.mapApiLoader.load().then(() => {\n            let autocomplete = new google.maps.places.Autocomplete(this.search.nativeElement, {\n                types: [\"address\"]\n            });\n            autocomplete.addListener(\"place_changed\", () => {\n                this.ngZone.run(() => {\n                    // get the place result\n                    let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n\n                    // verify result\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n\n                    this.location = {\n                        Address: place.formatted_address,\n                        Latitude: place.geometry.location.lat(),\n                        Longitude: place.geometry.location.lng()\n                    };\n\n                    this.value = place.formatted_address;\n                });\n            });\n        });\n    }\n\n    private setCurrentPosition() {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n            this.location.Latitude = position.coords.latitude;\n            this.location.Longitude = position.coords.longitude;\n            });\n        }\n    }\n\n    // Set touched on blur\n    onBlur() {\n        this.onTouchedCallback();\n    }\n\n    // From ControlValueAccessor interface\n    writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n\n    // From ControlValueAccessor interface\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-login\n            \n\n            \n                styleUrls\n                login.component.less\n            \n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Login\n                            \n                            \n                        \n                    \n                \n                \n                    \nLogin(userInfo: literal type, valid: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfo\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        valid\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'mnm-login',\n    templateUrl: 'login.component.html',\n    styleUrls: ['login.component.less']\n})\n\nexport class LoginComponent {\n    public loginForm: FormGroup;\n\n    constructor(public router: Router, private authService: AuthService, private fb: FormBuilder) {\n        this.loginForm = this.fb.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required]]\n        });\n    }\n\n    Login(userInfo: { email: string, password: string }, valid: boolean): void {\n        console.log(userInfo, valid);\n        if (valid) {\n            this.authService.login(userInfo).subscribe(res => {\n                console.log(res);\n                this.router.navigate(['/']);\n            }, err => {\n                console.log(err);\n            });\n        } else {\n            return;\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    Email:\n                    \n                        \n                        Email is required\n                    \n                \n                \n                    Password:\n                    \n                        \n                        Password is required\n                    \n                \n                \n                    \n                        Login\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        Email:                                                                    Email is required                                                                        Password:                                                                    Password is required                                                                                                Login                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [{'name': 'Dropdown', 'selector': '[dropdown]'},{'name': 'DropdownMenu', 'selector': '[dropdownMenu]'},{'name': 'DropdownToggle', 'selector': '[dropdownToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberFormComponent.html":{"url":"components/MemberFormComponent.html","title":"component - MemberFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MemberFormComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/user/member/member.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                member-form\n            \n\n\n\n\n            \n                templateUrl\n                member.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                memberDropdown\n                            \n                            \n                                memberNotFound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMember\n                            \n                            \n                                    Public\n                                memberSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                member\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                added\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/user/member/member.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        member\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        users\n                    \n                    \n                            \n                            Type:    ApiUser[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        added\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addMember\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addMember(user: ApiUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:32\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    ApiUser\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            memberSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        memberSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:21\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memberDropdown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        memberDropdown:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memberNotFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        memberNotFound:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { ApiUser } from '../../models/user';\n\n@Component({\n    selector: 'member-form',\n    templateUrl: 'member.component.html'\n})\n\nexport class MemberFormComponent {\n    @ViewChild('memberDropdown') memberDropdown: ElementRef;\n    @Input('member') memberForm: FormGroup;\n    @Input('users') users: ApiUser[];\n    @Output() added: EventEmitter = new EventEmitter();\n\n    memberNotFound: boolean = false;\n\n    constructor() {}\n\n    public memberSearch(): void {\n        let el = this.memberDropdown.nativeElement;\n        if (el.children.length === 0) {\n            this.memberNotFound = true;\n        } else if (el.children.length === 1 && el.children[0].id === \"not-found\") {\n            this.memberNotFound = true;\n        } else {\n            this.memberNotFound = false;\n        }\n    }\n\n    public addMember(user: ApiUser): void {\n        this.memberForm.patchValue(user);\n        this.added.emit(user);\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n            Member Not Found\n        \n        \n            {{user.Name}}\n            {{user.Email}}\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Member Not Found                            {{user.Name}}            {{user.Email}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [{'name': 'Dropdown', 'selector': '[dropdown]'},{'name': 'DropdownMenu', 'selector': '[dropdownMenu]'},{'name': 'DropdownToggle', 'selector': '[dropdownToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemberFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Month.html":{"url":"interfaces/Month.html","title":"interface - Month","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Month\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/month.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        weekdays\n                                \n                                \n                                        weeks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/month.model.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weekdays\n                                    \n                                \n                                \n                                    \n                                        weekdays:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/month.model.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weeks\n                                    \n                                \n                                \n                                    \n                                        weeks:     Week[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Week[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/month.model.ts:5\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Week } from \"./week.model\";\n\nexport interface Month {\n    name: string;\n    weeks: Week[];\n    weekdays: string[];\n}\n\nexport const Months: string[] = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'November',\n    'December'\n];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgbDateNativeAdapter.html":{"url":"injectables/NgbDateNativeAdapter.html","title":"injectable - NgbDateNativeAdapter","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgbDateNativeAdapter\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datepicker-adapter.component.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromModel\n                            \n                            \n                                toModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromModel\n                            \n                            \n                        \n                    \n                \n                \n                    \nfromModel(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/datepicker-adapter.component.ts:7\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     NgbDateStruct\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toModel\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoModel(date: NgbDateStruct)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/datepicker-adapter.component.ts:11\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    NgbDateStruct\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbDateAdapter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter {\n\n  fromModel(date: Date): NgbDateStruct {\n    return (date && date.getFullYear) ? {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()} : null;\n  }\n\n  toModel(date: NgbDateStruct): Date {\n    return date ? new Date(date.year, date.month - 1, date.day) : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/shared/not-found/not-found.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                not-found\n            \n\n            \n                styleUrls\n                not-found.component.less\n            \n\n\n\n            \n                templateUrl\n                not-found.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'not-found',\n    templateUrl: 'not-found.component.html',\n    styleUrls: ['not-found.component.less']\n})\n\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n            Page was not found\n            Back to Dashboard\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Page was not found            Back to Dashboard            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [{'name': 'Dropdown', 'selector': '[dropdown]'},{'name': 'DropdownMenu', 'selector': '[dropdownMenu]'},{'name': 'DropdownToggle', 'selector': '[dropdownToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadModel.html":{"url":"interfaces/PayloadModel.html","title":"interface - PayloadModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Events\n                                \n                                \n                                        Groups\n                                \n                                \n                                        Todo\n                                \n                                \n                                        User\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Events\n                                    \n                                \n                                \n                                    \n                                        Events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Groups\n                                    \n                                \n                                \n                                    \n                                        Groups:     ApiGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiGroup[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Todo\n                                    \n                                \n                                \n                                    \n                                        Todo:     ApiTodo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiTodo[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        User\n                                    \n                                \n                                \n                                    \n                                        User:     ApiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiUser\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:7\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from './user';\nimport { ApiEvent } from './event';\nimport { ApiGroup } from './group';\nimport { ApiTodo } from './todo';\n\nexport interface PayloadModel {\n    User: ApiUser;\n    Groups: ApiGroup[];\n    Events: ApiEvent[];\n    Todo: ApiTodo[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Recurring.html":{"url":"interfaces/Recurring.html","title":"interface - Recurring","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Recurring\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Days\n                                \n                                \n                                        RepeatWeekly\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Days\n                                    \n                                \n                                \n                                    \n                                        Days:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/event.ts:85\n                                        \n                                    \n\n                            \n                                \n                                    Binary number that maps to days of the week that it should be recurring\nex) 0101101, maps to every monday, wednesday, thursday, saturday\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RepeatWeekly\n                                    \n                                \n                                \n                                    \n                                        RepeatWeekly:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/event.ts:86\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from \"./user\";\nimport { ApiGroup } from \"./group\";\n\nexport enum NotificationGranularity {\n    Minutes,\n    Hours,\n    Days,\n    Weeks\n}\n\nexport interface ApiCreateEvent {\n    /**\n     * Title ex) Doctors Appointment\n     */\n    Title: string;\n    /**\n     * Id of the member that made the event\n     */\n    OwnerId: number;\n    /**\n     * Time of day that the event should start\n     */\n    StartTime: string;\n    /**\n     * Time of day that the event should end\n     */\n    EndTime: string;\n    /**\n     * Date of the event (start date)\n     */\n    StartDate: string;\n    /**\n     * End date\n     */\n    EndDate?: string;\n    /** \n     * Either basic location or address\n     */\n    Location?: string;\n    /**\n     * Notes or description of the event\n     */\n    Notes?: string;\n    /**\n     * List of member's who are invited to the event\n     */\n    Members: ApiUser[];\n    /**\n     * How many (minutes/hours/days/weeks) before the event that the user should be notifed\n     */\n    NotificationValue?: number;\n    /**\n     * Notification granularity (minutes/hours/days/weeks)\n     */\n    NotificationGranularity?: NotificationGranularity;\n    /**\n     * group id that this event should belong to, if in a group\n     */\n    GroupId?: number;\n    /**\n     * Color of the event in the form of a hash code (#00000)\n     */\n    Color?: string;\n\n    /**\n     * If it should be hidden on the calendar\n     */\n    Hidden?: boolean;\n\n    Recurring?: Recurring;\n}\n\nexport interface ApiEvent extends ApiCreateEvent {\n    /**\n     * Id of the event\n     */\n    Id: number;\n}\n\nexport interface Recurring {\n    /**\n     * Binary number that maps to days of the week that it should be recurring\n     * ex) 0101101, maps to every monday, wednesday, thursday, saturday\n     */\n    Days: number;\n    RepeatWeekly: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchFilterPipe.html":{"url":"injectables/SearchFilterPipe.html","title":"injectable - SearchFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SearchFilterPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/combo-box/search.pipe.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                filter\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filter(items: Array, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:26\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                List of items to filter\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a string term to compare with every property of the list\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: any, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                object from array\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                term's search\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Injectable } from \"@angular/core\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\n@Injectable()\nexport class SearchFilterPipe implements PipeTransform {\n\n  /**\n   * @param items object from array\n   * @param term term's search\n   */\n  transform(items: any, term: string): any {\n    if (!term || !items) return items;\n\n    return SearchFilterPipe.filter(items, term);\n  }\n\n  /**\n   * \n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   * \n   */\n  static filter(items: Array, term: string): Array {\n\n    const toCompare = term.toLowerCase();\n\n    return items.filter((item: any) => {\n      for (let property in item) {\n        if (item[property] === null) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchFilterPipe-1.html":{"url":"injectables/SearchFilterPipe-1.html","title":"injectable - SearchFilterPipe-1","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SearchFilterPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/combo-box/search.pipe.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                filter\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filter(items: Array, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:26\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                List of items to filter\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a string term to compare with every property of the list\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: any, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                object from array\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                term's search\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Injectable } from \"@angular/core\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\n@Injectable()\nexport class SearchFilterPipe implements PipeTransform {\n\n  /**\n   * @param items object from array\n   * @param term term's search\n   */\n  transform(items: any, term: string): any {\n    if (!term || !items) return items;\n\n    return SearchFilterPipe.filter(items, term);\n  }\n\n  /**\n   * \n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   * \n   */\n  static filter(items: Array, term: string): Array {\n\n    const toCompare = term.toLowerCase();\n\n    return items.filter((item: any) => {\n      for (let property in item) {\n        if (item[property] === null) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/session.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserId\n                    \n                \n\n                \n                    \n                        getcurrentUserId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class SessionService {\n    get currentUserId(): number {\n        return +(localStorage.getItem('user_id'));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.less\n            \n\n\n\n            \n                templateUrl\n                sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                groups\n                            \n                            \n                                    Public\n                                isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterGroup\n                            \n                            \n                                    Public\n                                newGroup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                togglePanel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/sidebar/sidebar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterGroup(group: ApiGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/sidebar/sidebar.component.ts:26\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    ApiGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        newGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/sidebar/sidebar.component.ts:22\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/sidebar/sidebar.component.ts:18\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            togglePanel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        togglePanel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/sidebar/sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groups:     ApiGroup[]\n\n                    \n                \n                    \n                        \n                            Type :     ApiGroup[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/sidebar/sidebar.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/sidebar/sidebar.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CoreCacheService } from '../../app/services/core-cache.service';\nimport { ApiGroup } from '../../app/models/group';\n\n@Component({\n    selector: 'mnm-sidebar',\n    templateUrl: 'sidebar.component.html',\n    styleUrls: ['sidebar.component.less']\n})\n\nexport class SidebarComponent {\n    public groups: ApiGroup[];\n    public isOpen: boolean = true;\n    constructor(private router: Router,\n                private coreCache: CoreCacheService) {}\n\n    ngOnInit(): void {\n        this.coreCache.GetGroups().then(groups => this.groups = groups);\n    }\n\n    public newGroup(): void {\n        this.router.navigate(['group/create']);\n    }\n\n    public filterGroup(group: ApiGroup): void {\n        group.ShowEvents = !group.ShowEvents;\n        this.coreCache.FilterEventsByGroup(group);\n    }\n\n    public togglePanel(): boolean {\n        this.isOpen = !this.isOpen;\n        return this.isOpen;\n    }\n}\n\n    \n\n    \n        \n    \n        Sidebar\n        New Group\n        \n            My Groups\n            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    {{group.Name}}\n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sidebar        New Group                    My Groups                                                                                                                                    {{group.Name}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [{'name': 'Dropdown', 'selector': '[dropdown]'},{'name': 'DropdownMenu', 'selector': '[dropdownMenu]'},{'name': 'DropdownToggle', 'selector': '[dropdownToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoListComponent.html":{"url":"components/TodoListComponent.html","title":"component - TodoListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TodoListComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/todo-list/todo-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                todo-list\n            \n\n            \n                styleUrls\n                todo-list.component.less\n            \n\n\n\n            \n                templateUrl\n                todo-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                newTodo\n                            \n                            \n                                    Public\n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                removeTodo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoService: TodoListService, dashboardService: DashboardService)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/todo-list/todo-list.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    todoService\n                                                  \n                                                        \n                                                                    TodoListService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    dashboardService\n                                                  \n                                                        \n                                                                    DashboardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTodo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:27\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:33\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        date:     moment.Moment\n\n                    \n                \n                    \n                        \n                            Type :     moment.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newTodo:     ApiTodo\n\n                    \n                \n                    \n                        \n                            Type :     ApiTodo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            todos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        todos:     ApiTodo[]\n\n                    \n                \n                    \n                        \n                            Type :     ApiTodo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ApiTodo, Todo } from '../../app/models/todo';\nimport { TodoListService } from './todo-list.service';\nimport { DashboardService } from '../dashboard.service';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'todo-list',\n    templateUrl: 'todo-list.component.html',\n    styleUrls: ['todo-list.component.less']\n})\n\nexport class TodoListComponent {\n    public newTodo: ApiTodo;\n    public date: moment.Moment;\n\n    public todos: ApiTodo[] = [];\n\n    constructor(private todoService: TodoListService,\n                private dashboardService: DashboardService) {\n                    this.dashboardService.current.subscribe(date => {\n                        this.date = date;\n                        this.newTodo = Todo(date.toDate());\n                    });\n                }\n\n    addTodo(): void {\n        this.todos.push(this.newTodo);\n        this.todoService.addTodo(this.newTodo);\n        this.newTodo = Todo(this.date.toDate());\n    }\n\n    removeTodo(todo: ApiTodo): void {\n        let index = this.todos.indexOf(todo);\n        if (index > -1) {\n            this.todos.splice(index, 1);\n            this.todoService.removeTodo(todo);\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n     0\">\n        \n            \n                \n                    \n                    \n                    \n                    {{todo.Title}}\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     0\">                                                                                                                    {{todo.Title}}                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [{'name': 'Dropdown', 'selector': '[dropdown]'},{'name': 'DropdownMenu', 'selector': '[dropdownMenu]'},{'name': 'DropdownToggle', 'selector': '[dropdownToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'TodoListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoListService.html":{"url":"injectables/TodoListService.html","title":"injectable - TodoListService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TodoListService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/todo-list/todo-list.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                getTodo\n                            \n                            \n                                getTodos\n                            \n                            \n                                removeTodo\n                            \n                            \n                                updateTodo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/todo-list/todo-list.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:11\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTodo(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:29\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTodos\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTodos()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:35\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:17\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:23\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiTodo } from '../../app/models/todo';\nimport { API_ROOT } from '../../constants.module';\n\n@Injectable()\n\nexport class TodoListService {\n    constructor(private http: Http) {}\n\n    addTodo(todo: ApiTodo): Promise {\n        return this.http.post(API_ROOT + '/todo', todo)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    removeTodo(todo: ApiTodo): Promise {\n        return this.http.delete(API_ROOT + '/todo/' + todo.Id)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    updateTodo(todo: ApiTodo): Promise {\n        return this.http.put(API_ROOT + '/todo/' + todo.Id, todo)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    getTodo(id: number): Promise {\n        return this.http.get(API_ROOT + '/todo/' + id)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    getTodos(): Promise {\n        return this.http.get(API_ROOT + '/todo')\n            .map(res => res.json())\n            .toPromise();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Create\n                            \n                            \n                                    Public\n                                Get\n                            \n                            \n                                    Public\n                                GetAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Create(user: ApiCreateUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    ApiCreateUser\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Get(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.service.ts:17\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            GetAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.service.ts:11\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiUser, ApiCreateUser } from '../models/user';\nimport { API_ROOT } from '../../constants.module';\n\n@Injectable()\n\nexport class UserService {\n    constructor(private http: Http) {}\n\n    public GetAll(): Promise {\n        return this.http.get(API_ROOT + '/user')\n                .map(res => res.json())\n                .toPromise();\n    }\n\n    public Get(id: number): Promise {\n        return this.http.get(API_ROOT + '/user')\n                .map(res => res.json())\n                .toPromise();\n    }\n\n    public Create(user: ApiCreateUser): Promise {\n        return this.http.post(API_ROOT + '/user', user)\n                .map(res => res.json())\n                .toPromise();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Week.html":{"url":"interfaces/Week.html","title":"interface - Week","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Week\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/week.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        days\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/week.model.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        days\n                                    \n                                \n                                \n                                    \n                                        days:     Day[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Day[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/week.model.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Day } from './day.model';\n\nexport interface Week {\n    days: Day[];\n    current: boolean;\n}\n\nexport const WeekDays: string[] = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.2\n        \n            @angular/animations : ^5.0.0\n        \n            @angular/common : ^5.0.0\n        \n            @angular/compiler : ^5.0.0\n        \n            @angular/compiler-cli : ^5.0.0\n        \n            @angular/core : ^5.0.0\n        \n            @angular/forms : ^5.0.0\n        \n            @angular/http : ^5.0.0\n        \n            @angular/platform-browser : ^5.0.0\n        \n            @angular/platform-browser-dynamic : ^5.0.0\n        \n            @angular/router : ^5.0.0\n        \n            @ng-bootstrap/ng-bootstrap : 1.0.0\n        \n            angular-bootstrap-datetimepicker : ^2.1.1\n        \n            angular-material-time-picker : ^1.0.7\n        \n            bootstrap : 4.0.0\n        \n            core-js : ^2.4.1\n        \n            font-awesome : ^4.7.0\n        \n            google : ^2.1.0\n        \n            googleapis : ^27.0.0\n        \n            moment : ^2.20.1\n        \n            ngx-bootstrap : ^2.0.3\n        \n            rxjs : ^5.5.0\n        \n            zone.js : ^0.8.4\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Granularity   (src/.../day.component.ts)\n                        \n                        \n                            NotificationGranularity   (src/.../event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dashboard/day/day.component.ts\n    \n        \n            \n                \n                    \n                        \n                        Granularity\n                    \n                \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                 Workout\n                            \n                        \n                        \n                            \n                                 Budget\n                            \n                        \n            \n        \n\n    src/app/models/event.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationGranularity\n                    \n                \n                        \n                            \n                                 Minutes\n                            \n                        \n                        \n                            \n                                 Hours\n                            \n                        \n                        \n                            \n                                 Days\n                            \n                        \n                        \n                            \n                                 Weeks\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            httpFactory   (src/.../interceptor.ts)\n                        \n                        \n                            Todo   (src/.../todo.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nhttpFactory(xhrBackend: undefined, requestOptions: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        xhrBackend\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        requestOptions\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/models/todo.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Todo\n                            \n                            \n                        \n                    \n                \n                \n                    \nTodo(date: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMeet and Manage\nThis is the place to try ESDoc. Please write a code and click Try it out!\n\nIndex (this) is used as a index page(Markdown).\nSource Code is used as a source code(JavaScript)\nTest Code is used as a test code(JavaScript).\nManual(Usage) is used as a manual of usage(Markdown).\nConfig is used as a configuration(JSON).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nEditEventComponent\n\nEditEventComponent\n\nAppModule -->\n\nEditEventComponent->AppModule\n\n\n\n\n\nComboBoxComponent\n\nComboBoxComponent\n\nAppModule -->\n\nComboBoxComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nLocationInput\n\nLocationInput\n\nAppModule -->\n\nLocationInput->AppModule\n\n\n\n\n\nCreateGroupComponent\n\nCreateGroupComponent\n\nAppModule -->\n\nCreateGroupComponent->AppModule\n\n\n\n\n\nMemberFormComponent\n\nMemberFormComponent\n\nAppModule -->\n\nMemberFormComponent->AppModule\n\n\n\n\n\nGroupSelectForm\n\nGroupSelectForm\n\nAppModule -->\n\nGroupSelectForm->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nAppModule -->\n\nDropdownModule->AppModule\n\n\n\n\n\nDropdown \n\nDropdown \n\nDropdown  -->\n\nDropdownModule->Dropdown \n\n\n\n\n\nDropdownToggle \n\nDropdownToggle \n\nDropdownToggle  -->\n\nDropdownModule->DropdownToggle \n\n\n\n\n\nDropdownMenu \n\nDropdownMenu \n\nDropdownMenu  -->\n\nDropdownModule->DropdownMenu \n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nCoreCacheService\n\nCoreCacheService\n\nAppModule -->\n\nCoreCacheService->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nEventService\n\nEventService\n\nAppModule -->\n\nEventService->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nAppModule -->\n\nGroupService->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nDashboardModule -->\n\nSidebarComponent->DashboardModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nDashboardModule -->\n\nHeaderComponent->DashboardModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nDashboardModule -->\n\nMonthComponent->DashboardModule\n\n\n\n\n\nDayComponent\n\nDayComponent\n\nDashboardModule -->\n\nDayComponent->DashboardModule\n\n\n\n\n\nWeekComponent\n\nWeekComponent\n\nDashboardModule -->\n\nWeekComponent->DashboardModule\n\n\n\n\n\nEventPopoverComponent\n\nEventPopoverComponent\n\nDashboardModule -->\n\nEventPopoverComponent->DashboardModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nDashboardModule -->\n\nTodoListComponent->DashboardModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\nTodoListService\n\nTodoListService\n\nDashboardModule -->\n\nTodoListService->DashboardModule\n\n\n\n\n\nDropdown\n\nDropdown\n\nDropdownModule -->\n\nDropdown->DropdownModule\n\n\n\n\n\nDropdownToggle\n\nDropdownToggle\n\nDropdownModule -->\n\nDropdownToggle->DropdownModule\n\n\n\n\n\nDropdownMenu\n\nDropdownMenu\n\nDropdownModule -->\n\nDropdownMenu->DropdownModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            3 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        17 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        16 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
