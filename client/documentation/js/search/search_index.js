var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiCreateGroup.html",[0,0.337,1,2.264]],["body/interfaces/ApiCreateGroup.html",[0,0.552,1,3.705,2,0.196,3,0.196,4,0.196,5,3.18,6,0.264,7,0.834,8,1.039,9,2.995,10,2.261,11,1.059,12,1.732,13,0.496,14,0.026,15,0.442,16,3.76,17,1.939,18,2.429,19,3.76,20,2.042,21,3.705,22,3.76,23,0.395,24,1.35,25,2.192,26,1.623,27,0.216,28,1.789,29,1.931,30,2.042,31,1.181,32,1.263,33,2.511,34,3.18,35,3.18,36,1.181,37,0.018,38,0.018]],["title/interfaces/ApiCreateUser.html",[0,0.337,39,2.264]],["body/interfaces/ApiCreateUser.html",[0,0.596,2,0.231,3,0.231,4,0.231,6,0.311,7,0.926,11,1.106,12,1.808,13,0.492,14,0.026,15,0.439,18,1.823,24,1.59,27,0.24,29,2.273,30,2.267,32,1.487,37,0.02,38,0.02,39,4.002,40,3.744,41,4.39,42,4.427,43,4.427]],["title/interfaces/ApiEvent.html",[0,0.337,25,1.498]],["body/interfaces/ApiEvent.html",[0,0.533,2,0.156,3,0.156,4,0.156,6,0.21,7,0.713,9,1.421,10,1.521,12,1.698,13,0.267,14,0.026,15,0.238,17,1.447,18,1.745,20,1.23,21,1.996,23,0.338,24,1.521,25,1.873,26,1.771,27,0.233,28,1.421,29,2.176,30,2.541,32,2.108,36,0.939,37,0.016,38,0.016,44,2.223,45,4.162,46,2.988,47,2.527,48,3.662,49,2.223,50,1.996,51,2.499,52,1.331,53,3.152,54,3.583,55,2.527,56,2.527,57,2.527,58,2.527,59,2.83,60,2.83,61,2.527,62,3.152,63,2.527,64,2.341,65,2.527,66,2.527,67,2.527,68,1.521,69,2.223,70,3.583,71,2.527,72,2.527,73,2.527,74,3.583,75,2.527,76,3.583,77,2.527,78,2.527,79,2.527,80,3.583,81,1.815,82,2.527,83,2.527,84,2.527,85,3.583,86,2.527,87,3.984,88,2.527,89,3.152,90,2.527,91,2.223,92,2.223,93,2.223,94,2.223,95,2.527]],["title/interfaces/ApiGroup.html",[0,0.337,28,1.612]],["body/interfaces/ApiGroup.html",[0,0.549,1,3.686,2,0.194,3,0.194,4,0.194,5,3.146,6,0.261,7,0.828,8,1.032,9,2.342,10,1.768,11,0.828,12,1.355,13,0.494,14,0.026,15,0.44,17,1.934,18,2.027,20,1.532,21,3.686,23,0.392,24,1.336,25,2.596,26,1.81,27,0.214,28,2.342,29,2.528,30,2.585,31,1.547,32,1.853,33,3.288,34,4.163,35,4.967,36,1.734,37,0.018,38,0.018,96,3.72,97,3.72,98,3.72]],["title/interfaces/ApiTodo.html",[0,0.337,99,1.887]],["body/interfaces/ApiTodo.html",[0,0.481,2,0.189,3,0.189,4,0.189,6,0.254,7,0.814,8,1.218,9,3.026,12,1.714,13,0.542,14,0.026,15,0.483,27,0.211,30,2.566,32,1.829,33,3.232,36,1.711,37,0.018,38,0.018,51,2.139,53,4.732,64,3.145,99,3.033,100,3.064,101,6.361,102,3.624,103,2.031,104,3.232,105,4.838,106,3.624,107,3.624,108,3.624,109,3.624,110,2.696,111,3.064,112,0.933,113,1.861]],["title/interfaces/ApiUser.html",[0,0.337,18,1.396]],["body/interfaces/ApiUser.html",[0,0.602,2,0.236,3,0.236,4,0.236,6,0.318,7,0.939,11,0.939,12,1.536,13,0.405,14,0.026,15,0.361,18,2.299,24,2.005,27,0.243,29,2.867,30,2.721,32,2.032,37,0.021,38,0.021,39,4.043,40,3.829,41,3.729,114,4.528]],["title/components/AppComponent.html",[115,0.761,116,1.303]],["body/components/AppComponent.html",[2,0.172,3,0.172,4,0.172,8,0.69,10,1.182,11,0.872,13,0.294,14,0.025,15,0.262,17,0.968,23,0.413,26,0.905,27,0.143,31,1.034,37,0.017,38,0.017,52,1.034,68,1.182,103,1.034,115,1.316,116,2.147,117,1.455,118,1.565,119,1.565,120,3.291,121,1.565,122,4.532,123,5.586,124,2.826,125,2.327,126,4.532,127,2.003,128,4.532,129,0.905,130,3.291,131,3.109,132,3.463,133,3.11,134,3.291,135,0.905,136,0.554,137,2.448,138,2.448,139,1.998,140,0.597,141,1.69,142,1.69,143,1.265,144,2.156,145,2.156,146,2.156,147,2.657,148,1.565,149,1.565,150,1.355,151,1.565,152,1.565,153,1.355,154,1.565,155,1.265,156,2.869,157,1.565,158,1.265,159,1.565,160,1.355,161,1.565,162,1.565,163,1.265,164,1.565,165,1.265,166,1.565,167,1.355,168,1.565,169,1.265,170,1.565,171,1.265,172,1.565,173,1.265,174,1.565,175,1.355,176,1.565,177,1.355,178,1.565,179,1.265,180,1.565,181,1.355,182,1.565,183,1.265,184,1.565,185,1.355,186,1.565]],["title/modules/AppModule.html",[187,1.741,188,2.264]],["body/modules/AppModule.html",[2,0.109,3,0.109,4,0.109,14,0.026,23,0.539,27,0.142,37,0.012,38,0.012,116,2.319,131,2.647,133,2.87,136,0.353,137,1.559,138,1.559,139,1.273,140,0.38,143,0.805,150,2.122,153,2.122,160,2.122,165,1.981,169,1.981,171,1.981,173,1.981,179,1.981,187,1.671,188,4.571,189,1.273,190,2.968,191,3.13,192,3.253,193,1.772,194,1.772,195,1.772,196,1.772,197,1.772,198,3.13,199,3.442,200,4.358,201,3.442,202,3.13,203,3.442,204,2.174,205,1.559,206,1.559,207,2.096,208,2.752,209,1.559,210,1.4,211,2.752,212,1.772,213,2.752,214,1.4,215,1.4,216,2.752,217,2.752,218,1.076,219,3.255,220,2.096,221,2.096,222,2.752,223,1.812,224,2.421,225,2.421,226,1.076,227,2.096,228,2.096,229,2.096,230,2.096,231,2.096,232,1.772,233,2.421,234,2.096,235,2.096,236,2.421,237,2.096,238,2.096,239,2.096,240,2.096,241,2.096,242,2.096,243,1.772,244,1.076,245,3.255,246,2.096,247,2.096,248,2.096,249,2.421,250,2.096,251,2.096,252,3.255,253,2.096,254,2.096,255,1.976,256,2.096,257,2.096,258,1.772,259,2.096,260,2.096,261,1.559,262,2.096,263,2.096,264,1.772,265,2.096,266,2.096,267,3.255,268,2.096,269,2.096,270,2.096,271,2.752,272,1.772,273,2.096,274,1.772,275,2.096,276,2.096,277,2.096,278,2.096,279,1.772,280,2.096,281,2.096,282,2.096,283,2.096,284,2.096,285,1.772,286,2.096,287,2.096,288,1.772,289,1.772]],["title/injectables/AuthGuard.html",[199,2.264,290,0.661]],["body/injectables/AuthGuard.html",[2,0.202,3,0.202,4,0.202,6,0.272,7,0.851,8,0.812,11,0.652,13,0.503,14,0.026,15,0.475,23,0.449,27,0.169,36,1.589,37,0.019,38,0.019,112,1.449,113,1.99,129,1.066,131,3.26,135,1.066,136,0.652,140,0.703,199,3.378,244,1.99,290,1.099,291,6.191,292,3.875,293,2.379,294,6.191,295,4.529,296,1.698,297,6.349,298,3.875,299,3.875,300,3.875,301,5.057,302,3.875,303,2.588,304,2.882,305,3.875,306,3.277,307,1.99]],["title/injectables/AuthService.html",[131,1.741,290,0.661]],["body/injectables/AuthService.html",[2,0.145,3,0.145,4,0.145,6,0.195,7,0.677,8,0.991,11,0.795,12,1.107,13,0.492,14,0.026,15,0.457,23,0.471,27,0.121,33,1.857,36,1.264,37,0.015,38,0.015,41,1.857,59,3.158,112,1.558,129,0.765,131,2.066,132,3.158,133,2.885,135,1.301,136,0.468,139,1.688,140,0.504,142,2.823,223,3.291,226,1.428,244,1.428,290,0.923,293,2.438,295,4.238,296,1.351,304,2.068,306,2.351,308,2.78,309,5.182,310,3.998,311,5.182,312,4.023,313,2.068,314,2.78,315,2.78,316,3.402,317,3.402,318,2.78,319,2.351,320,4.728,321,2.78,322,2.661,323,4.023,324,2.78,325,2.78,326,2.78,327,1.857,328,1.688,329,2.068,330,2.068,331,2.351,332,2.351,333,2.78,334,4.023,335,3.402,336,1.857,337,2.78,338,4.023,339,1.857,340,2.78,341,3.998,342,2.78,343,2.78,344,2.78,345,2.78,346,2.78,347,2.78,348,2.78,349,2.78,350,2.78,351,2.78,352,2.351,353,2.78,354,4.023,355,2.78,356,2.78,357,2.78,358,2.78,359,2.351,360,2.78,361,2.78,362,2.78,363,1.548,364,2.351,365,2.351,366,2.78,367,2.78,368,1.688]],["title/components/DashboardComponent.html",[115,0.761,155,1.303]],["body/components/DashboardComponent.html",[2,0.176,3,0.176,4,0.176,8,0.708,10,1.213,11,0.884,13,0.302,14,0.025,15,0.269,17,0.993,23,0.419,26,0.93,27,0.147,31,1.061,37,0.017,38,0.017,52,1.061,68,1.213,103,1.061,115,1.328,116,1.298,117,1.493,118,1.607,119,1.607,121,1.607,124,2.833,125,2.37,127,2.04,129,0.93,135,0.93,136,0.568,140,0.613,141,1.735,143,1.298,144,2.195,145,2.195,146,2.195,147,2.686,148,1.607,149,1.607,150,1.391,151,1.607,152,1.607,153,1.391,154,1.607,155,2.17,156,2.935,157,1.607,158,1.298,159,1.607,160,1.391,161,1.607,162,1.607,163,1.298,164,1.607,165,1.298,166,1.607,167,1.391,168,1.607,169,1.298,170,1.607,171,1.298,172,1.607,173,1.298,174,1.607,175,1.391,176,1.607,177,1.391,178,1.607,179,1.298,180,1.607,181,1.391,182,1.607,183,1.298,184,1.607,185,1.391,186,1.607,244,1.735,295,4.077,313,2.513,369,3.378,370,3.433,371,4.615,372,4.615,373,3.378,374,2.569]],["title/modules/DashboardModule.html",[187,1.741,198,2.058]],["body/modules/DashboardModule.html",[2,0.137,3,0.137,4,0.137,14,0.026,23,0.535,26,0.72,27,0.219,37,0.014,38,0.014,103,1.21,136,0.441,140,0.475,143,1.006,155,2.517,158,2.157,163,2.157,167,2.311,175,2.311,177,2.311,181,2.311,183,2.157,185,2.311,187,1.978,189,1.59,190,3.398,191,3.259,192,3.364,198,4.155,204,2.572,205,1.948,206,1.948,208,3.257,209,1.948,210,1.749,211,3.257,212,2.214,214,1.749,215,1.749,216,3.257,217,3.257,218,1.345,222,3.257,223,2.144,224,2.865,225,2.865,226,1.345,232,2.214,233,1.948,236,2.865,243,2.214,244,1.345,274,2.214,279,2.214,288,2.214,289,2.214,375,2.214,376,2.214,377,2.214,378,2.214,379,3.125,380,3.409,381,2.619,382,2.619,383,2.619,384,2.619,385,2.619,386,2.214,387,2.619,388,2.619,389,2.619,390,2.619,391,2.619,392,2.619,393,1.948,394,2.619,395,2.865,396,2.619,397,2.214,398,2.619]],["title/injectables/DashboardService.html",[290,0.661,379,1.887]],["body/injectables/DashboardService.html",[2,0.212,3,0.212,4,0.212,6,0.286,7,0.878,8,0.852,11,0.684,13,0.467,14,0.026,15,0.459,23,0.459,27,0.177,37,0.019,38,0.019,64,2.482,112,1.343,129,1.585,135,1.119,136,0.684,140,0.738,290,1.124,293,2.471,296,1.752,329,3.025,363,3.384,374,2.905,379,2.905,399,4.067,400,5.218,401,5.218,402,5.218,403,4.198,404,4.067,405,6.431,406,2.716,407,2.469,408,2.482,409,4.067,410,4.067]],["title/interfaces/DateObject.html",[0,0.337,411,2.264]],["body/interfaces/DateObject.html",[0,0.501,2,0.201,3,0.201,4,0.201,6,0.271,7,0.848,8,1.42,12,1.744,13,0.578,14,0.025,15,0.515,23,0.307,27,0.168,36,2.129,37,0.019,38,0.019,104,3.977,363,3.315,364,5.035,374,3.529,403,3.75,411,3.366,412,3.854,413,5.955,414,5.955,415,5.955,416,3.854,417,3.854,418,3.854,419,3.854,420,3.854,421,3.854,422,3.854]],["title/interfaces/Day.html",[0,0.337,51,1.498]],["body/interfaces/Day.html",[0,0.563,2,0.242,3,0.242,4,0.242,6,0.325,7,0.953,13,0.506,14,0.026,15,0.451,23,0.451,25,2.815,26,1.752,27,0.202,37,0.021,38,0.021,51,2.938,411,4.254,423,4.633,424,4.633,425,4.633,426,4.633,427,3.446]],["title/interfaces/EventElement.html",[0,0.337,428,2.866]],["body/interfaces/EventElement.html",[0,0.222,2,0.116,3,0.116,4,0.116,6,0.156,7,0.574,12,0.613,13,0.371,14,0.026,15,0.33,17,0.655,23,0.452,25,1.832,26,1.684,27,0.097,31,0.7,32,1.559,36,0.7,37,0.013,38,0.013,50,1.487,51,2.569,59,1.487,60,3.102,62,2.536,64,1.971,89,3.454,99,1.239,103,0.7,104,3.344,112,0.877,113,1.143,115,0.931,124,0.917,125,1.143,127,0.984,132,1.487,133,1.898,136,0.375,139,1.352,140,0.404,141,1.143,142,2.384,156,0.984,158,0.856,293,2.234,307,1.751,322,2.128,328,1.352,363,2.307,374,2.585,379,2.307,393,1.656,403,2.277,411,2.277,427,1.656,428,3.504,429,2.226,430,5.006,431,4.644,432,2.226,433,2.226,434,2.226,435,2.226,436,2.226,437,2.226,438,1.656,439,2.226,440,2.226,441,1.883,442,1.883,443,3.41,444,2.226,445,2.226,446,2.226,447,2.226,448,2.82,449,2.226,450,2.226,451,2.226,452,1.883,453,3.41,454,2.226,455,2.226,456,2.226,457,2.226,458,2.226,459,2.226,460,2.226,461,2.226,462,4.465,463,4.144,464,2.226,465,2.226,466,1.832,467,2.226,468,2.226,469,2.226,470,4.144,471,4.144,472,3.41,473,2.226,474,3.41,475,3.41,476,2.226,477,2.226,478,2.226,479,2.226,480,2.226,481,2.226,482,2.226,483,2.226,484,2.226,485,2.226,486,2.226,487,3.41,488,2.226,489,2.536,490,3.41,491,4.144,492,2.883,493,2.226,494,2.226,495,2.226,496,4.144,497,3.41,498,2.226,499,1.898,500,2.226,501,2.226,502,3.41,503,2.226,504,2.226,505,2.226,506,2.226,507,2.226,508,2.226,509,1.656,510,2.226,511,2.226,512,2.226]],["title/components/EventPopoverComponent.html",[115,0.761,163,1.303]],["body/components/EventPopoverComponent.html",[2,0.172,3,0.172,4,0.172,6,0.231,10,1.182,11,0.763,13,0.294,14,0.025,15,0.361,17,0.968,23,0.361,25,2.292,26,1.786,27,0.143,31,1.034,37,0.017,38,0.017,52,1.034,68,1.182,103,1.034,115,1.316,116,1.265,117,1.455,118,1.565,119,1.565,121,1.565,124,2.826,125,2.327,127,2.003,129,1.426,136,0.554,140,0.597,143,1.265,144,2.156,145,2.156,146,2.156,147,2.657,148,1.565,149,1.565,150,1.355,151,1.565,152,1.565,153,1.355,154,1.565,155,1.265,156,2.922,157,1.565,158,1.265,159,1.565,160,1.355,161,1.565,162,1.565,163,2.147,164,1.565,165,1.265,166,1.565,167,1.355,168,1.565,169,1.265,170,1.565,171,1.265,172,1.565,173,1.265,174,1.565,175,1.355,176,1.565,177,1.355,178,1.565,179,1.265,180,1.565,181,1.355,182,1.565,183,1.265,184,1.565,185,1.355,186,1.565,386,4.384,427,2.448,513,5.184,514,3.291,515,4.532,516,4.532,517,4.532,518,3.463,519,4.532,520,3.291,521,4.532]],["title/components/GroupSelectForm.html",[115,0.761,165,1.303]],["body/components/GroupSelectForm.html",[2,0.108,3,0.108,4,0.108,6,0.145,7,0.541,8,0.433,10,0.742,11,0.665,13,0.458,14,0.026,15,0.441,17,1.963,20,1.325,23,0.315,24,1.155,26,1.228,27,0.09,28,2.544,31,0.649,36,1.52,37,0.012,38,0.012,52,0.649,68,0.742,81,2.71,103,0.649,104,2.149,112,0.828,113,2.029,115,1.086,116,0.794,117,0.913,118,0.982,119,0.982,121,0.982,124,2.661,127,1.422,129,1.087,135,0.568,136,0.347,140,0.375,143,0.794,144,1.53,145,2.122,146,1.53,147,2.122,148,0.982,149,0.982,150,0.85,151,0.982,152,0.982,153,0.85,154,0.982,155,0.794,156,2.569,157,0.982,158,0.794,159,0.982,160,0.85,161,0.982,162,0.982,163,0.794,164,0.982,165,1.715,166,0.982,167,0.85,168,0.982,169,0.794,170,0.982,171,0.794,172,0.982,173,0.794,174,0.982,175,0.85,176,0.982,177,0.85,178,0.982,179,0.794,180,0.982,181,0.85,182,0.982,183,0.794,184,0.982,185,0.85,186,0.982,218,1.06,271,5.568,272,4.806,293,1.969,296,1.08,307,1.652,322,2.291,406,1.379,407,2.4,408,1.88,448,1.254,466,0.913,499,1.15,518,2.64,522,5.684,523,2.065,524,3.217,525,4.462,526,4.462,527,3.217,528,4.462,529,3.319,530,3.342,531,3.217,532,3.217,533,2.94,534,2.065,535,3.217,536,2.065,537,3.217,538,3.319,539,2.065,540,3.217,541,2.065,542,2.72,543,3.217,544,2.065,545,3.217,546,2.98,547,3.319,548,1.746,549,2.393,550,2.065,551,3.217,552,3.217,553,3.217,554,3.217,555,1.746,556,2.065,557,3.217,558,2.065,559,1.746,560,2.065,561,2.72,562,3.952,563,1.746,564,2.94,565,2.065,566,3.217]],["title/injectables/GroupService.html",[203,2.264,290,0.661]],["body/injectables/GroupService.html",[1,3.789,2,0.157,3,0.157,4,0.157,6,0.212,8,1.036,11,0.832,13,0.442,14,0.026,15,0.428,17,1.914,23,0.452,27,0.131,28,2.028,30,2.036,31,1.689,32,1.805,37,0.016,38,0.016,112,1.558,129,0.829,132,3.303,133,2.993,135,1.361,136,0.507,138,2.242,139,1.83,140,0.547,141,1.548,142,1.548,203,2.847,223,3.279,226,1.548,290,0.965,293,2.417,296,1.431,327,2.013,328,1.83,330,3.999,336,2.013,339,3.303,408,2.028,466,1.884,555,2.549,567,3.014,568,4.546,569,2.242,570,3.014,571,4.263,572,3.014,573,3.171,574,4.381,575,4.381,576,3.604,577,3.014,578,3.591,579,5.376,580,3.014,581,3.171,582,3.679,583,3.679,584,4.263,585,3.014]],["title/interfaces/Location.html",[0,0.337,68,1.217]],["body/interfaces/Location.html",[0,0.517,2,0.126,3,0.126,4,0.126,6,0.17,7,0.611,12,1.199,13,0.433,14,0.027,15,0.347,23,0.386,27,0.19,32,1.831,36,1.141,37,0.018,38,0.013,68,1.864,69,4.207,112,0.935,115,0.816,117,1.069,124,0.996,129,0.666,136,0.407,140,0.439,142,2.904,169,1.395,192,2.425,204,1.616,218,1.242,261,1.799,264,4.097,285,3.07,293,0.93,303,1.616,307,1.242,322,1.865,368,1.469,407,2.647,408,1.727,448,2.205,452,2.045,492,3.07,518,2.912,529,2.701,538,3.243,546,1.616,547,2.701,549,1.799,586,4.845,587,2.419,588,5.655,589,5.655,590,2.419,591,2.419,592,2.419,593,4.359,594,3.631,595,5.192,596,3.631,597,2.419,598,3.631,599,1.469,600,3.631,601,2.419,602,2.419,603,2.419,604,2.419,605,2.419,606,2.419,607,2.419,608,2.419,609,2.419,610,2.419,611,3.07,612,5.192,613,4.845,614,2.419,615,2.419,616,2.419,617,2.419,618,2.419,619,2.419,620,2.419,621,3.631,622,2.419,623,2.419,624,2.419,625,2.419,626,2.419,627,2.419,628,2.419,629,2.419,630,2.419,631,3.631,632,2.045,633,3.631,634,2.419,635,2.419,636,2.419,637,2.419,638,2.419,639,2.045,640,2.419,641,2.419,642,2.419,643,2.419,644,2.419,645,2.419,646,2.419,647,2.419,648,3.631,649,2.419,650,2.419,651,2.419,652,3.631,653,2.419,654,2.419,655,2.419,656,2.419]],["title/components/LoginComponent.html",[115,0.761,171,1.303]],["body/components/LoginComponent.html",[2,0.122,3,0.122,4,0.122,6,0.164,7,0.595,8,0.741,10,0.838,11,0.801,12,1.583,13,0.481,14,0.026,15,0.379,17,0.686,23,0.379,24,1.269,26,0.642,27,0.102,31,0.733,36,1.495,37,0.013,38,0.013,41,3.935,52,0.733,68,0.838,81,2.146,103,0.733,112,0.91,115,1.148,116,0.897,117,1.032,118,1.11,119,1.11,121,1.11,124,2.71,125,1.815,127,1.562,129,0.642,131,2.869,135,0.973,136,0.393,137,1.736,140,0.423,142,1.815,143,0.897,144,1.681,145,1.681,146,1.681,147,2.263,148,1.11,149,1.11,150,0.961,151,1.11,152,1.11,153,0.961,154,1.11,155,0.897,156,2.734,157,1.11,158,0.897,159,1.11,160,0.961,161,1.11,162,1.11,163,0.897,164,1.11,165,0.897,166,1.11,167,0.961,168,1.11,169,0.897,170,1.11,171,1.829,172,1.11,173,0.897,174,1.11,175,0.961,176,1.11,177,0.961,178,1.11,179,0.897,180,1.11,181,0.961,182,1.11,183,0.897,184,1.11,185,0.961,186,1.11,218,1.199,244,1.199,293,1.965,295,4.076,296,1.187,304,1.736,310,4.866,313,1.736,316,2.989,317,2.989,319,2.989,322,1.815,335,4.982,341,1.974,370,2.629,466,1.562,533,3.54,573,2.629,639,2.989,657,2.334,658,3.535,659,3.535,660,4.758,661,4.266,662,4.758,663,3.535,664,5.891,665,2.334,666,3.535,667,3.535,668,3.535,669,2.334,670,2.334,671,2.334,672,3.535,673,2.334,674,2.334,675,2.334,676,2.334,677,2.334,678,2.334,679,4.758]],["title/components/MemberFormComponent.html",[115,0.761,173,1.303]],["body/components/MemberFormComponent.html",[2,0.13,3,0.13,4,0.13,6,0.175,7,0.626,8,0.523,10,2.052,11,0.747,13,0.493,14,0.026,15,0.468,17,0.734,18,2.272,23,0.392,24,1.767,26,1.023,27,0.109,31,0.785,36,1.396,37,0.014,38,0.014,52,0.785,68,0.897,81,2.258,103,0.785,112,0.957,113,2.281,115,1.182,116,0.959,117,1.104,118,1.188,119,1.188,121,1.188,124,2.735,127,1.644,129,1.222,135,0.687,136,0.42,140,0.453,143,0.959,144,1.769,145,1.769,146,1.769,147,2.341,148,1.188,149,1.188,150,1.028,151,1.188,152,1.188,153,1.028,154,1.188,155,0.959,156,2.7,157,1.188,158,0.959,159,1.188,160,1.028,161,1.188,162,1.188,163,0.959,164,1.188,165,0.959,166,1.188,167,1.028,168,1.188,169,0.959,170,1.188,171,0.959,172,1.188,173,1.891,174,1.188,175,1.028,176,1.188,177,1.028,178,1.188,179,0.959,180,1.188,181,1.028,182,1.188,183,0.959,184,1.188,185,1.028,186,1.188,202,1.516,218,1.282,293,2.12,296,1.249,307,1.909,322,2.527,406,1.668,407,1.516,408,1.188,448,1.516,499,1.39,518,2.967,529,3.661,530,3.756,533,3.305,538,3.661,547,3.661,548,2.111,549,2.766,559,2.111,561,3.144,563,2.111,564,3.305,680,2.497,681,3.718,682,4.922,683,4.922,684,3.718,685,4.922,686,3.718,687,2.497,688,2.497,689,2.497,690,3.718,691,2.497,692,2.497,693,2.497,694,2.497,695,2.111,696,2.497,697,2.497,698,2.497,699,2.497,700,2.497,701,4.442,702,2.497,703,2.497,704,3.718,705,3.718]],["title/interfaces/Month.html",[0,0.337,706,2.521]],["body/interfaces/Month.html",[0,0.538,2,0.225,3,0.225,4,0.225,6,0.302,7,0.91,11,1.044,12,1.823,13,0.529,14,0.026,15,0.471,23,0.343,27,0.236,37,0.02,38,0.02,52,2.105,599,2.614,706,4.401,707,4.305,708,5.248,709,4.305,710,4.305,711,4.305,712,4.305,713,4.305,714,4.305,715,4.305,716,4.305,717,4.305,718,4.305,719,4.305,720,4.305,721,4.305,722,4.305]],["title/injectables/NgbDateNativeAdapter.html",[249,2.521,290,0.661]],["body/injectables/NgbDateNativeAdapter.html",[2,0.205,3,0.205,4,0.205,6,0.276,8,1.069,11,0.859,13,0.456,14,0.026,15,0.407,23,0.407,27,0.171,29,2.018,37,0.019,38,0.019,51,1.737,64,3.162,112,1.544,135,1.404,136,0.661,140,0.713,191,2.386,213,4.315,214,2.624,215,2.624,249,3.796,290,1.106,296,1.714,368,3.099,408,1.869,499,2.841,706,2.923,723,5.668,724,3.929,725,5.103,726,5.103,727,5.103,728,3.929,729,6.373,730,5.103,731,3.929,732,5.103,733,3.929,734,3.929,735,3.929,736,3.929,737,3.929,738,3.929]],["title/components/NotFoundComponent.html",[115,0.761,179,1.303]],["body/components/NotFoundComponent.html",[2,0.184,3,0.184,4,0.184,10,1.265,11,0.799,14,0.025,17,1.036,23,0.281,26,0.969,27,0.153,31,1.107,37,0.018,38,0.018,52,1.107,68,1.265,103,1.107,115,1.348,116,1.354,117,1.557,118,1.676,119,1.676,121,1.676,124,2.845,125,2.438,127,2.099,136,0.593,140,0.639,143,1.354,144,2.258,145,2.258,146,2.258,147,2.733,148,1.676,149,1.676,150,1.451,151,1.676,152,1.676,153,1.451,154,1.676,155,1.354,156,2.907,157,1.676,158,1.354,159,1.676,160,1.451,161,1.676,162,1.676,163,1.354,164,1.676,165,1.354,166,1.676,167,1.451,168,1.676,169,1.354,170,1.676,171,1.354,172,1.676,173,1.354,174,1.676,175,1.451,176,1.676,177,1.451,178,1.676,179,2.208,180,1.676,181,1.451,182,1.676,183,1.354,184,1.676,185,1.451,186,1.676,258,2.979,359,4.015,370,3.532,564,4.275,739,3.523,740,3.523,741,4.748,742,4.748,743,4.748]],["title/interfaces/PayloadModel.html",[0,0.337,744,2.866]],["body/interfaces/PayloadModel.html",[0,0.488,2,0.193,3,0.193,4,0.193,6,0.26,7,0.825,13,0.524,14,0.026,15,0.467,17,1.88,18,2.414,20,2.581,23,0.467,24,2.432,25,2.591,26,1.759,27,0.161,28,2.788,37,0.018,38,0.018,99,3.263,103,2.009,363,3.615,365,4.956,744,4.149,745,3.7,746,3.7,747,3.7,748,3.7,749,3.7]],["title/interfaces/Recurring.html",[0,0.337,87,2.521]],["body/interfaces/Recurring.html",[0,0.524,2,0.15,3,0.15,4,0.15,6,0.202,7,0.694,9,1.369,10,1.481,12,1.681,13,0.369,14,0.026,15,0.329,17,1.417,18,1.698,20,1.185,21,1.922,23,0.329,24,1.481,25,1.272,26,1.737,27,0.229,28,1.369,29,1.477,30,2.168,32,2.168,36,0.904,37,0.015,38,0.015,44,2.14,45,3.487,47,2.433,48,3.586,49,2.14,50,1.922,51,2.75,52,1.515,53,3.068,54,4.076,55,2.433,56,2.433,57,2.433,58,2.433,59,2.755,60,2.755,61,2.433,62,3.068,63,2.433,64,2.293,65,2.433,66,2.433,67,2.433,68,1.481,69,2.14,70,3.487,71,2.433,72,2.433,73,2.433,74,3.487,75,2.433,76,3.487,77,2.433,78,2.433,79,2.433,80,3.487,81,1.747,82,2.433,83,2.433,84,2.433,85,3.487,86,2.433,87,4.314,88,3.487,89,3.916,90,3.487,91,3.068,92,3.068,93,3.068,94,3.068,95,4.452,750,2.877,751,2.877]],["title/injectables/SearchFilterPipe.html",[255,2.058,290,0.661]],["body/injectables/SearchFilterPipe.html",[2,0.173,3,0.173,4,0.173,6,0.233,7,0.877,8,0.956,9,2.17,11,0.877,12,1.743,13,0.408,14,0.026,15,0.363,20,2.309,23,0.265,27,0.145,37,0.017,38,0.017,112,1.601,113,2.342,129,0.914,135,1.255,136,0.559,140,0.603,255,2.77,290,1.017,296,1.532,303,2.219,307,1.706,368,2.017,466,2.479,489,4.925,509,4.627,546,3.047,599,2.017,752,4.405,753,2.809,754,4.405,755,4.97,756,3.857,757,4.405,758,3.857,759,2.809,760,4.781,761,3.857,762,3.857,763,2.809,764,3.857,765,3.857,766,3.857,767,2.809,768,2.809,769,2.809,770,2.809,771,2.809,772,2.809,773,2.809,774,2.809]],["title/injectables/SearchFilterPipe-1.html",[255,1.719,290,0.552,499,1.576]],["body/injectables/SearchFilterPipe-1.html",[2,0.173,3,0.173,4,0.173,6,0.233,7,0.877,8,0.956,9,2.17,11,0.877,12,1.743,13,0.408,14,0.026,15,0.363,20,2.309,23,0.265,27,0.145,37,0.017,38,0.017,112,1.601,113,2.342,129,0.914,135,1.255,136,0.559,140,0.603,255,2.77,290,1.017,296,1.532,303,2.219,307,1.706,368,2.017,466,2.479,489,4.925,509,4.627,546,3.047,599,2.017,752,4.405,753,2.809,754,4.405,755,4.97,756,3.857,757,4.405,758,3.857,759,2.809,760,4.781,761,3.857,762,3.857,763,2.809,764,3.857,765,3.857,766,3.857,767,2.809,768,2.809,769,2.809,770,2.809,771,2.809,772,2.809,773,2.809,774,2.809]],["title/injectables/SessionService.html",[201,2.264,290,0.661]],["body/injectables/SessionService.html",[2,0.256,3,0.256,4,0.256,6,0.345,14,0.025,15,0.391,23,0.391,27,0.214,32,1.649,37,0.022,38,0.022,112,1.264,136,0.826,140,0.891,201,3.916,290,1.223,611,4.152,775,4.91,776,5.864,777,4.91,778,4.91,779,4.91]],["title/components/TodoListComponent.html",[115,0.761,183,1.303]],["body/components/TodoListComponent.html",[2,0.117,3,0.117,4,0.117,6,0.293,7,0.578,8,0.72,9,1.069,10,0.807,11,0.785,13,0.45,14,0.026,15,0.422,17,0.661,20,2.183,23,0.401,24,1.805,26,0.618,27,0.098,31,0.706,37,0.013,38,0.013,52,0.706,64,2.391,68,0.807,99,3.311,103,2.076,112,0.884,115,1.129,116,0.864,117,0.994,118,1.069,119,1.069,121,1.069,124,2.695,125,1.764,127,1.518,129,0.618,135,0.945,136,0.378,140,0.408,141,1.154,142,1.154,143,0.864,144,1.634,145,1.634,146,1.634,147,2.22,148,1.069,149,1.069,150,0.926,151,1.069,152,1.069,153,0.926,154,1.069,155,0.864,156,2.629,157,1.069,158,0.864,159,1.069,160,0.926,161,1.069,162,1.069,163,0.864,164,1.069,165,0.864,166,1.069,167,0.926,168,1.069,169,0.864,170,1.069,171,0.864,172,1.069,173,0.864,174,1.069,175,0.926,176,1.069,177,0.926,178,1.069,179,0.864,180,1.069,181,0.926,182,1.069,183,1.793,184,1.069,185,0.926,186,1.069,293,2.24,296,1.153,322,2.396,352,2.904,374,1.912,379,3.07,380,2.834,393,1.672,395,4.102,397,1.901,403,2.784,406,1.501,407,1.365,438,1.672,441,1.901,442,1.901,448,2.086,462,3.946,466,0.994,499,1.912,542,2.904,760,3.943,780,4.663,781,2.248,782,3.435,783,3.435,784,4.667,785,3.946,786,2.904,787,2.248,788,3.435,789,3.435,790,2.248,791,5.028,792,2.904,793,2.248,794,2.248,795,2.248,796,2.248,797,2.248,798,2.248,799,2.248,800,2.248,801,2.248,802,3.435,803,2.248,804,2.248,805,2.248,806,2.248,807,2.248,808,2.248,809,2.248,810,3.435]],["title/injectables/TodoListService.html",[290,0.661,380,2.058]],["body/injectables/TodoListService.html",[2,0.138,3,0.138,4,0.138,6,0.185,8,1.128,11,0.906,13,0.482,14,0.026,15,0.448,20,1.086,23,0.403,27,0.115,30,1.889,31,1.217,32,1.541,37,0.014,38,0.014,99,3.493,103,2.131,112,1.593,129,0.726,135,1.481,136,0.444,140,0.479,141,1.355,223,3.133,226,1.355,290,0.895,296,1.3,327,1.762,328,1.602,336,1.762,339,3.596,380,2.352,395,4.327,408,1.842,438,1.963,466,2.235,569,1.963,574,4.438,575,4.604,578,3.376,581,2.881,582,4.005,583,4.005,780,4.918,785,3.275,786,3.275,792,3.275,811,2.638,812,5.628,813,3.873,814,2.638,815,3.873,816,2.638,817,3.873,818,2.638,819,2.638,820,2.638,821,3.873,822,3.873,823,2.638,824,3.873,825,2.638,826,2.638,827,2.638,828,3.873,829,2.638]],["title/injectables/UserService.html",[202,2.058,290,0.661]],["body/injectables/UserService.html",[2,0.169,3,0.169,4,0.169,6,0.228,8,1.078,11,0.866,13,0.46,14,0.026,15,0.442,18,1.336,23,0.442,24,2.368,27,0.141,30,1.848,31,1.745,32,1.865,37,0.017,38,0.017,39,3.893,112,1.552,129,0.893,135,1.416,136,0.546,140,0.589,141,1.666,202,2.726,223,3.357,226,1.666,290,1.004,293,2.457,296,1.507,327,2.167,328,1.97,336,2.167,339,3.437,408,2.135,466,1.984,568,4.695,569,2.414,573,3.339,574,4.13,575,4.485,576,3.795,578,3.709,581,3.339,582,3.828,583,3.828,695,2.744,830,3.245,831,3.245,832,4.489,833,3.245,834,3.245,835,3.245]],["title/interfaces/Week.html",[0,0.337,52,1.065]],["body/interfaces/Week.html",[0,0.553,2,0.235,3,0.235,4,0.235,6,0.316,7,0.936,12,1.238,13,0.497,14,0.026,15,0.443,23,0.358,27,0.242,36,1.896,37,0.021,38,0.021,51,2.986,52,1.747,91,3.346,92,3.346,93,3.346,94,3.346,363,3.51,599,2.732,708,3.804,836,4.499,837,4.499,838,4.499,839,4.499,840,4.499,841,4.499,842,4.499]],["title/dependencies.html",[189,2.475,843,2.831]],["body/dependencies.html",[14,0.026,37,0.02,38,0.02,136,0.713,189,2.574,191,3.567,209,3.986,210,3.578,214,2.831,215,2.831,218,2.177,226,2.177,233,3.154,244,2.177,261,3.154,329,3.154,330,3.154,331,3.585,332,3.585,374,2.36,844,5.358,845,4.239,846,4.239,847,6.791,848,4.239,849,5.358,850,4.239,851,4.239,852,4.239,853,4.239,854,4.239,855,4.239,856,4.239,857,4.239,858,4.239,859,4.239,860,4.239,861,4.239,862,4.239,863,4.239,864,4.239]],["title/miscellaneous/enumerations.html",[865,1.891,866,3.447]],["body/miscellaneous/enumerations.html",[6,0.368,14,0.023,37,0.023,38,0.023,44,3.899,48,4.533,49,3.899,50,3.501,51,2.317,52,1.647,865,3.501,866,4.432,867,5.241]],["title/miscellaneous/functions.html",[110,3.032,865,1.891]],["body/miscellaneous/functions.html",[6,0.346,8,1.231,11,0.989,14,0.024,37,0.022,38,0.022,64,2.344,100,4.166,103,1.846,110,3.665,111,4.166,135,1.617,224,3.665,225,4.371,236,4.371,632,5.31,865,3.291,868,4.927,869,4.927,870,4.927,871,4.927]],["title/index.html",[6,0.199,60,1.891,578,1.891]],["body/index.html",[14,0.023,37,0.023,38,0.023,872,5.424,873,5.424]],["title/modules.html",[187,2.375]],["body/modules.html",[14,0.023,37,0.023,38,0.023,187,2.691,188,3.501,198,3.183,210,4.07,874,6.094,875,6.094,876,6.094]],["title/overview.html",[877,3.911]],["body/overview.html",[0,0.295,14,0.026,27,0.129,37,0.016,38,0.016,115,0.667,116,2.316,131,2.519,133,2.731,143,1.141,150,2.02,153,2.02,155,2.408,158,1.885,160,2.02,163,1.885,165,1.885,167,2.02,169,1.885,171,1.885,173,1.885,175,2.02,177,2.02,179,1.885,181,2.02,183,1.885,185,2.02,187,2.166,188,4.677,189,1.803,190,2.209,191,1.803,192,1.983,193,2.511,194,2.511,195,2.511,196,2.511,197,2.511,198,4.194,199,3.276,200,4.148,201,3.276,202,2.979,203,3.276,204,2.817,205,2.209,206,2.209,290,0.579,375,2.511,376,2.511,377,2.511,378,2.511,379,2.731,380,2.979,877,2.511,878,2.969,879,2.969,880,2.969,881,2.969]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":448,"title":{},"body":{"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"components/TodoListComponent.html":{}}}],["0.8.4",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["00000",{"_index":84,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["0101101",{"_index":90,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["1",{"_index":499,"title":{"injectables/SearchFilterPipe-1.html":{}},"body":{"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/TodoListComponent.html":{}}}],["1.0.0",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":502,"title":{},"body":{"interfaces/EventElement.html":{}}}],["13",{"_index":880,"title":{},"body":{"overview.html":{}}}],["15",{"_index":881,"title":{},"body":{"overview.html":{}}}],["18",{"_index":879,"title":{},"body":{"overview.html":{}}}],["2",{"_index":878,"title":{},"body":{"overview.html":{}}}],["2.0.3",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["24:00:00",{"_index":500,"title":{},"body":{"interfaces/EventElement.html":{}}}],["27.0.0",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["5.5.0",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":508,"title":{},"body":{"interfaces/EventElement.html":{}}}],["_",{"_index":610,"title":{},"body":{"interfaces/Location.html":{}}}],["access",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PayloadModel.html":{}}}],["accessor",{"_index":611,"title":{},"body":{"interfaces/Location.html":{},"injectables/SessionService.html":{}}}],["activ",{"_index":413,"title":{},"body":{"interfaces/DateObject.html":{}}}],["actual_compon",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["ad",{"_index":530,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["adapter.compon",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["adapter.component.t",{"_index":724,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["adapter.component.ts:11",{"_index":731,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["adapter.component.ts:7",{"_index":728,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["add",{"_index":542,"title":{},"body":{"components/GroupSelectForm.html":{},"components/TodoListComponent.html":{}}}],["addgroup",{"_index":527,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["addgroup(group",{"_index":540,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["addmemb",{"_index":684,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["addmember(us",{"_index":690,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["address",{"_index":69,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Location.html":{},"interfaces/Recurring.html":{}}}],["addtodo",{"_index":785,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["addtodo(todo",{"_index":815,"title":{},"body":{"injectables/TodoListService.html":{}}}],["agm/cor",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Location.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["aizasydujitlzddw3spdwzbzdw5ynts_i",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":791,"title":{},"body":{"components/TodoListComponent.html":{}}}],["amount",{"_index":503,"title":{},"body":{"interfaces/EventElement.html":{}}}],["angular",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/anim",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DashboardModule.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["api_root",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["apicreateev",{"_index":45,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["apicreategroup",{"_index":1,"title":{"interfaces/ApiCreateGroup.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"injectables/GroupService.html":{}}}],["apicreateus",{"_index":39,"title":{"interfaces/ApiCreateUser.html":{}},"body":{"interfaces/ApiCreateUser.html":{},"interfaces/ApiUser.html":{},"injectables/UserService.html":{}}}],["apiev",{"_index":25,"title":{"interfaces/ApiEvent.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{}}}],["apigroup",{"_index":28,"title":{"interfaces/ApiGroup.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{}}}],["apikey",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["apitodo",{"_index":99,"title":{"interfaces/ApiTodo.html":{}},"body":{"interfaces/ApiTodo.html":{},"interfaces/EventElement.html":{},"interfaces/PayloadModel.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["apius",{"_index":18,"title":{"interfaces/ApiUser.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"components/MemberFormComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/UserService.html":{}}}],["app",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app'},{'nam",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["app.compon",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.less",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["app/models/ev",{"_index":427,"title":{},"body":{"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{}}}],["app/models/todo",{"_index":438,"title":{},"body":{"interfaces/EventElement.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["app/services/cor",{"_index":435,"title":{},"body":{"interfaces/EventElement.html":{}}}],["app/services/interceptor",{"_index":382,"title":{},"body":{"modules/DashboardModule.html":{}}}],["app_rout",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":116,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["appmodul",{"_index":188,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appoint",{"_index":56,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["april",{"_index":716,"title":{},"body":{"interfaces/Month.html":{}}}],["array",{"_index":509,"title":{},"body":{"interfaces/EventElement.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["attempt",{"_index":573,"title":{},"body":{"injectables/GroupService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["august",{"_index":719,"title":{},"body":{"interfaces/Month.html":{}}}],["auth",{"_index":294,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["auth.servic",{"_index":302,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguard",{"_index":199,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"overview.html":{}}}],["authresult",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.accesstoken",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.us",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.user.id",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservic",{"_index":131,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["autocomplet",{"_index":624,"title":{},"body":{"interfaces/Location.html":{}}}],["autocomplete.addlistener(\"place_chang",{"_index":626,"title":{},"body":{"interfaces/Location.html":{}}}],["autocomplete.getplac",{"_index":629,"title":{},"body":{"interfaces/Location.html":{}}}],["awesom",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["back",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"components/NotFoundComponent.html":{}}}],["basic",{"_index":67,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["befor",{"_index":75,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["belong",{"_index":21,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/Recurring.html":{}}}],["beta.2",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":504,"title":{},"body":{"interfaces/EventElement.html":{}}}],["binari",{"_index":88,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["blur",{"_index":646,"title":{},"body":{"interfaces/Location.html":{}}}],["boolean",{"_index":36,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["bootstrap",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/NgbDateNativeAdapter.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/datepick",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/ng",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/NgbDateNativeAdapter.html":{},"dependencies.html":{}}}],["box'},{'nam",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["box.compon",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["box/combo",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["box/search.pip",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["box/search.pipe.t",{"_index":753,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["box/search.pipe.ts:14",{"_index":763,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["box/search.pipe.ts:26",{"_index":759,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["brows",{"_index":876,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["bsdatepickermodul",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdatepickermodule.forroot",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["cach",{"_index":579,"title":{},"body":{"injectables/GroupService.html":{}}}],["cache.servic",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{}}}],["calcul",{"_index":487,"title":{},"body":{"interfaces/EventElement.html":{}}}],["calendar",{"_index":86,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["call",{"_index":615,"title":{},"body":{"interfaces/Location.html":{}}}],["callback",{"_index":617,"title":{},"body":{"interfaces/Location.html":{}}}],["canactiv",{"_index":297,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["certain",{"_index":105,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["chang",{"_index":605,"title":{},"body":{"interfaces/Location.html":{}}}],["changed",{"_index":400,"title":{},"body":{"injectables/DashboardService.html":{}}}],["changedate(d",{"_index":402,"title":{},"body":{"injectables/DashboardService.html":{}}}],["check",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["choos",{"_index":535,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["class",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodul",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dashboardmodul",{"_index":375,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":376,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_export",{"_index":377,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_provid",{"_index":378,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["code",{"_index":83,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["collapsemodul",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["collapsemodule.forroot",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["color",{"_index":80,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["combo",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["comboboxcompon",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["compar",{"_index":761,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["complet",{"_index":799,"title":{},"body":{"components/TodoListComponent.html":{}}}],["compon",{"_index":115,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["component_templ",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["console.log(err",{"_index":678,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(r",{"_index":676,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(userinfo",{"_index":674,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":599,"title":{},"body":{"interfaces/Location.html":{},"interfaces/Month.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"interfaces/Week.html":{}}}],["constants.modul",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":298,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(authservic",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(http",{"_index":569,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor(priv",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor(publ",{"_index":304,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["constructor(rout",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(todoservic",{"_index":787,"title":{},"body":{"components/TodoListComponent.html":{}}}],["contain",{"_index":443,"title":{},"body":{"interfaces/EventElement.html":{}}}],["continu",{"_index":773,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["controlvalueaccessor",{"_index":595,"title":{},"body":{"interfaces/Location.html":{}}}],["core",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"dependencies.html":{}}}],["corecach",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{}}}],["corecacheservic",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"overview.html":{}}}],["creat",{"_index":31,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["create(group",{"_index":571,"title":{},"body":{"injectables/GroupService.html":{}}}],["create(us",{"_index":832,"title":{},"body":{"injectables/UserService.html":{}}}],["creategroupcompon",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["credenti",{"_index":666,"title":{},"body":{"components/LoginComponent.html":{}}}],["criteria",{"_index":554,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["crud",{"_index":825,"title":{},"body":{"injectables/TodoListService.html":{}}}],["cur",{"_index":459,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr",{"_index":467,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr.format('dddd",{"_index":476,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr.format(date_format",{"_index":474,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr.utc",{"_index":479,"title":{},"body":{"interfaces/EventElement.html":{}}}],["current",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"interfaces/PayloadModel.html":{},"interfaces/Week.html":{}}}],["currentuserid",{"_index":776,"title":{},"body":{"injectables/SessionService.html":{}}}],["custom_input_control_value_accessor",{"_index":600,"title":{},"body":{"interfaces/Location.html":{}}}],["d",{"_index":478,"title":{},"body":{"interfaces/EventElement.html":{}}}],["daili",{"_index":441,"title":{},"body":{"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["dashboard",{"_index":370,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{}}}],["dashboard'},{'nam",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["dashboard.compon",{"_index":383,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.component.html",{"_index":372,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.less",{"_index":371,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.rout",{"_index":390,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.servic",{"_index":393,"title":{},"body":{"modules/DashboardModule.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["dashboard/dashboard.modul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard_rout",{"_index":389,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboardcompon",{"_index":155,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":198,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardservic",{"_index":379,"title":{"injectables/DashboardService.html":{}},"body":{"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["date",{"_index":64,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/ApiTodo.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{},"miscellaneous/functions.html":{}}}],["date(date.year",{"_index":736,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.day",{"_index":738,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.getd",{"_index":735,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.getfullyear",{"_index":732,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.getmonth",{"_index":734,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.model",{"_index":426,"title":{},"body":{"interfaces/Day.html":{}}}],["date.month",{"_index":737,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date_format",{"_index":437,"title":{},"body":{"interfaces/EventElement.html":{}}}],["dateobject",{"_index":411,"title":{"interfaces/DateObject.html":{}},"body":{"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{}}}],["datetimepick",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["datevalu",{"_index":475,"title":{},"body":{"interfaces/EventElement.html":{}}}],["day",{"_index":51,"title":{"interfaces/Day.html":{}},"body":{"interfaces/ApiEvent.html":{},"interfaces/ApiTodo.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{},"miscellaneous/enumerations.html":{}}}],["day'},{'nam",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["day.component.html",{"_index":439,"title":{},"body":{"interfaces/EventElement.html":{}}}],["day.component.less",{"_index":440,"title":{},"body":{"interfaces/EventElement.html":{}}}],["day.model",{"_index":839,"title":{},"body":{"interfaces/Week.html":{}}}],["day/day.compon",{"_index":394,"title":{},"body":{"modules/DashboardModule.html":{}}}],["daycompon",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["decemb",{"_index":722,"title":{},"body":{"interfaces/Month.html":{}}}],["declar",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["decor",{"_index":548,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["default",{"_index":406,"title":{},"body":{"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"components/TodoListComponent.html":{}}}],["defin",{"_index":15,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["delet",{"_index":821,"title":{},"body":{"injectables/TodoListService.html":{}}}],["dep",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["depend",{"_index":189,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{}}}],["diff",{"_index":447,"title":{},"body":{"interfaces/EventElement.html":{}}}],["direct",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["disabl",{"_index":604,"title":{},"body":{"interfaces/Location.html":{}}}],["display",{"_index":104,"title":{},"body":{"interfaces/ApiTodo.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{}}}],["display1",{"_index":414,"title":{},"body":{"interfaces/DateObject.html":{}}}],["dldatetimepickerdatemodul",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["doctor",{"_index":55,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["dom",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["done",{"_index":101,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["dropdown",{"_index":551,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["durat",{"_index":488,"title":{},"body":{"interfaces/EventElement.html":{}}}],["dynam",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["editeventcompon",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["el",{"_index":559,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["el.children.length",{"_index":561,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["el.children[0].id",{"_index":563,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["element",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["elementref",{"_index":547,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["email",{"_index":41,"title":{},"body":{"interfaces/ApiCreateUser.html":{},"interfaces/ApiUser.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["emitt",{"_index":537,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["empti",{"_index":532,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["end",{"_index":62,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["enddat",{"_index":66,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["endtim",{"_index":63,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["enum",{"_index":47,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["enumer",{"_index":866,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["err.json().messag",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["event",{"_index":26,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{}}}],["event'},{'nam",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["event.compon",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["event.titl",{"_index":521,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["event/edit",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["event/event.servic",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["eventel",{"_index":428,"title":{"interfaces/EventElement.html":{}},"body":{"interfaces/EventElement.html":{}}}],["eventemitt",{"_index":538,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["eventpopovercompon",{"_index":163,"title":{"components/EventPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["eventservic",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ex",{"_index":54,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["expiri",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"overview.html":{}}}],["extend",{"_index":29,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/Recurring.html":{}}}],["fals",{"_index":113,"title":{},"body":{"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["fb",{"_index":661,"title":{},"body":{"components/LoginComponent.html":{}}}],["februari",{"_index":714,"title":{},"body":{"interfaces/Month.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["filter",{"_index":755,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["filter(item",{"_index":758,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["find",{"_index":545,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["fn",{"_index":652,"title":{},"body":{"interfaces/Location.html":{}}}],["font",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":81,"title":{},"body":{"interfaces/ApiEvent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Recurring.html":{}}}],["form'},{'nam",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["form.compon",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["form.component.html",{"_index":524,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.t",{"_index":523,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:14",{"_index":550,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:18",{"_index":534,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:22",{"_index":536,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:26",{"_index":539,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:31",{"_index":531,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:38",{"_index":544,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:53",{"_index":541,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form/group",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"components/GroupSelectForm.html":{}}}],["format",{"_index":465,"title":{},"body":{"interfaces/EventElement.html":{}}}],["formbuild",{"_index":662,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":533,"title":{},"body":{"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{}}}],["formsmodul",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["forwardref",{"_index":594,"title":{},"body":{"interfaces/Location.html":{}}}],["found",{"_index":564,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{}}}],["found'},{'nam",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["found.compon",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["found.component.html",{"_index":742,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.less",{"_index":741,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.t",{"_index":740,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/match",{"_index":553,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["found/not",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"components/NotFoundComponent.html":{}}}],["friday",{"_index":842,"title":{},"body":{"interfaces/Week.html":{}}}],["frommodel",{"_index":725,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["frommodel(d",{"_index":727,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["function",{"_index":110,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/ApiTodo.html":{},"miscellaneous/functions.html":{}}}],["futur",{"_index":415,"title":{},"body":{"interfaces/DateObject.html":{}}}],["geoloc",{"_index":638,"title":{},"body":{"interfaces/Location.html":{}}}],["get",{"_index":578,"title":{"index.html":{}},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["get(id",{"_index":576,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["getal",{"_index":568,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":777,"title":{},"body":{"injectables/SessionService.html":{}}}],["getduration(v",{"_index":493,"title":{},"body":{"interfaces/EventElement.html":{}}}],["getstart(v",{"_index":505,"title":{},"body":{"interfaces/EventElement.html":{}}}],["gettodo",{"_index":812,"title":{},"body":{"injectables/TodoListService.html":{}}}],["gettodo(id",{"_index":817,"title":{},"body":{"injectables/TodoListService.html":{}}}],["given",{"_index":462,"title":{},"body":{"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["go",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["googl",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["google.maps.places.autocomplete(this.search.nativeel",{"_index":625,"title":{},"body":{"interfaces/Location.html":{}}}],["google.maps.places.placeresult",{"_index":628,"title":{},"body":{"interfaces/Location.html":{}}}],["googleapi",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["googlemap",{"_index":597,"title":{},"body":{"interfaces/Location.html":{}}}],["granular",{"_index":78,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["group",{"_index":17,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{}}}],["group'",{"_index":543,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["group'},{'nam",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["group.compon",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["group.nam",{"_index":566,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["group/creat",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["group/group",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["group/group.servic",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["groupdropdown",{"_index":525,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupform",{"_index":558,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupid",{"_index":79,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["groupnotfound",{"_index":526,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupsearch",{"_index":528,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupselectform",{"_index":165,"title":{"components/GroupSelectForm.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["groupservic",{"_index":203,"title":{"injectables/GroupService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GroupService.html":{},"overview.html":{}}}],["guard",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["guard.t",{"_index":292,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.ts:6",{"_index":299,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.ts:7",{"_index":301,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.ts:8",{"_index":300,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hash",{"_index":82,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["header'},{'nam",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["header/header.compon",{"_index":388,"title":{},"body":{"modules/DashboardModule.html":{}}}],["headercompon",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["height",{"_index":430,"title":{},"body":{"interfaces/EventElement.html":{}}}],["hemc",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["hidden",{"_index":85,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["home",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["hour",{"_index":50,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["html",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["http",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DashboardModule.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["httpfactori",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"miscellaneous/functions.html":{}}}],["httpfactory(xhrbackend",{"_index":871,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpmodul",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["id",{"_index":30,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/GroupService.html":{},"interfaces/Recurring.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["implement",{"_index":303,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/Location.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["import",{"_index":23,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["includ",{"_index":614,"title":{},"body":{"interfaces/Location.html":{}}}],["incorrect",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["inform",{"_index":444,"title":{},"body":{"interfaces/EventElement.html":{}}}],["init",{"_index":449,"title":{},"body":{"interfaces/EventElement.html":{}}}],["inject",{"_index":290,"title":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/GroupService.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/GroupService.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["innervalu",{"_index":606,"title":{},"body":{"interfaces/Location.html":{}}}],["input",{"_index":518,"title":{},"body":{"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["input'},{'nam",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["input('ev",{"_index":520,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["input('group",{"_index":557,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["input('memb",{"_index":697,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["input('us",{"_index":699,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["input.compon",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["input.component.t",{"_index":587,"title":{},"body":{"interfaces/Location.html":{}}}],["input.component.ts:21",{"_index":590,"title":{},"body":{"interfaces/Location.html":{}}}],["input.component.ts:22",{"_index":591,"title":{},"body":{"interfaces/Location.html":{}}}],["input.component.ts:23",{"_index":592,"title":{},"body":{"interfaces/Location.html":{}}}],["input/loc",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Location.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"interfaces/Location.html":{},"interfaces/Month.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"interfaces/Location.html":{},"interfaces/Month.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{},"overview.html":{}}}],["invit",{"_index":72,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["isauthent",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["isdis",{"_index":656,"title":{},"body":{"interfaces/Location.html":{}}}],["item",{"_index":760,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{}}}],["item[properti",{"_index":772,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["item[property].tostring().tolowercase().includes(tocompar",{"_index":774,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["items.filter((item",{"_index":771,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["januari",{"_index":713,"title":{},"body":{"interfaces/Month.html":{}}}],["js",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["juli",{"_index":718,"title":{},"body":{"interfaces/Month.html":{}}}],["june",{"_index":717,"title":{},"body":{"interfaces/Month.html":{}}}],["latitud",{"_index":588,"title":{},"body":{"interfaces/Location.html":{}}}],["legend",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["librari",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["list",{"_index":20,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/GroupSelectForm.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["list'},{'nam",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["list.compon",{"_index":396,"title":{},"body":{"modules/DashboardModule.html":{}}}],["list.component.html",{"_index":783,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.less",{"_index":782,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.t",{"_index":781,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:17",{"_index":795,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:18",{"_index":794,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:20",{"_index":788,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:33",{"_index":790,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:43",{"_index":793,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.servic",{"_index":397,"title":{},"body":{"modules/DashboardModule.html":{},"components/TodoListComponent.html":{}}}],["list.service.t",{"_index":811,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:11",{"_index":814,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:18",{"_index":816,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:28",{"_index":820,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:38",{"_index":823,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:48",{"_index":818,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:57",{"_index":819,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list/todo",{"_index":395,"title":{},"body":{"modules/DashboardModule.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["liter",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["load",{"_index":446,"title":{},"body":{"interfaces/EventElement.html":{}}}],["localstorag",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('access_token",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('user_id",{"_index":779,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.removeitem('access_token",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('user_id",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('access_token",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('user_id",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":68,"title":{"interfaces/Location.html":{}},"body":{"interfaces/ApiEvent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{}}}],["locationinput",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["log",{"_index":667,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["login(userinfo",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login.component.html",{"_index":659,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.less",{"_index":658,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["logincompon",{"_index":171,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["loginform",{"_index":660,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["longitud",{"_index":589,"title":{},"body":{"interfaces/Location.html":{}}}],["made",{"_index":57,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["manag",{"_index":873,"title":{},"body":{"index.html":{}}}],["mani",{"_index":73,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["map",{"_index":89,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["map(r",{"_index":582,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["mapapiload",{"_index":607,"title":{},"body":{"interfaces/Location.html":{}}}],["mapsapiload",{"_index":598,"title":{},"body":{"interfaces/Location.html":{}}}],["march",{"_index":715,"title":{},"body":{"interfaces/Month.html":{}}}],["match",{"_index":38,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["meet",{"_index":872,"title":{},"body":{"index.html":{}}}],["member",{"_index":10,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{}}}],["member'",{"_index":71,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["member.component.html",{"_index":681,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["memberdropdown",{"_index":682,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["memberform",{"_index":698,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["memberformcompon",{"_index":173,"title":{"components/MemberFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["membernotfound",{"_index":683,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["membersearch",{"_index":685,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["messag",{"_index":552,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["metadata",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["method",{"_index":296,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["minicalendar'},{'nam",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["minicalendarcompon",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["minut",{"_index":49,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["minutes/hours/days/week",{"_index":74,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["miscellan",{"_index":865,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mmmm",{"_index":477,"title":{},"body":{"interfaces/EventElement.html":{}}}],["mnm",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["modalmodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["model",{"_index":436,"title":{},"body":{"interfaces/EventElement.html":{}}}],["models/group",{"_index":555,"title":{},"body":{"components/GroupSelectForm.html":{},"injectables/GroupService.html":{}}}],["models/us",{"_index":695,"title":{},"body":{"components/MemberFormComponent.html":{},"injectables/UserService.html":{}}}],["modul",{"_index":187,"title":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["moduleid",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["moment",{"_index":374,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{},"dependencies.html":{}}}],["moment().format(date_format",{"_index":473,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment(v.endd",{"_index":494,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment(v.startd",{"_index":496,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment.duration(end.clone().diff(start)).ashour",{"_index":501,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment.duration(end.diff(start)).asday",{"_index":498,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment.mo",{"_index":403,"title":{},"body":{"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["monday",{"_index":91,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["month",{"_index":706,"title":{"interfaces/Month.html":{}},"body":{"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{}}}],["month'},{'nam",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["month/month.compon",{"_index":384,"title":{},"body":{"modules/DashboardModule.html":{}}}],["monthcompon",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["multi",{"_index":602,"title":{},"body":{"interfaces/Location.html":{}}}],["name",{"_index":11,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["navig",{"_index":639,"title":{},"body":{"interfaces/Location.html":{},"components/LoginComponent.html":{}}}],["navigator.geolocation.getcurrentposition((posit",{"_index":640,"title":{},"body":{"interfaces/Location.html":{}}}],["new",{"_index":408,"title":{},"body":{"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["newgroup",{"_index":584,"title":{},"body":{"injectables/GroupService.html":{}}}],["newtodo",{"_index":784,"title":{},"body":{"components/TodoListComponent.html":{}}}],["ng",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/NgbDateNativeAdapter.html":{},"dependencies.html":{}}}],["ng_value_accessor",{"_index":596,"title":{},"body":{"interfaces/Location.html":{}}}],["ngbdateadapt",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"injectables/NgbDateNativeAdapter.html":{}}}],["ngbdatenativeadapt",{"_index":249,"title":{"injectables/NgbDateNativeAdapter.html":{}},"body":{"modules/AppModule.html":{},"injectables/NgbDateNativeAdapter.html":{}}}],["ngbdatestruct",{"_index":729,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["ngbmodul",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["ngbmodule.forroot",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["ngmodul",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["ngoninit",{"_index":452,"title":{},"body":{"interfaces/EventElement.html":{},"interfaces/Location.html":{}}}],["ngx",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":593,"title":{},"body":{"interfaces/Location.html":{}}}],["note",{"_index":70,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["notfoundcompon",{"_index":179,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["notif",{"_index":76,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["notificationgranular",{"_index":48,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["notificationvalu",{"_index":77,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["novemb",{"_index":721,"title":{},"body":{"interfaces/Month.html":{}}}],["null",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Location.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["number",{"_index":32,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"interfaces/Recurring.html":{},"injectables/SessionService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["object",{"_index":757,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["observ",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable.throw(err",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["onblur",{"_index":647,"title":{},"body":{"interfaces/Location.html":{}}}],["onchang",{"_index":616,"title":{},"body":{"interfaces/Location.html":{}}}],["onchangecallback",{"_index":609,"title":{},"body":{"interfaces/Location.html":{}}}],["ontouchedcallback",{"_index":608,"title":{},"body":{"interfaces/Location.html":{}}}],["option",{"_index":8,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":491,"title":{},"body":{"interfaces/EventElement.html":{}}}],["our",{"_index":510,"title":{},"body":{"interfaces/EventElement.html":{}}}],["out",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["output",{"_index":529,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["overview",{"_index":877,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownerid",{"_index":58,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["packag",{"_index":843,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":743,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["param",{"_index":466,"title":{},"body":{"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["paramet",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["pars",{"_index":461,"title":{},"body":{"interfaces/EventElement.html":{}}}],["parseday(curr",{"_index":468,"title":{},"body":{"interfaces/EventElement.html":{}}}],["password",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["past",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DateObject.html":{}}}],["payloadmodel",{"_index":744,"title":{"interfaces/PayloadModel.html":{}},"body":{"interfaces/PayloadModel.html":{}}}],["pipe",{"_index":765,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["pipetransform",{"_index":766,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["pixel",{"_index":490,"title":{},"body":{"interfaces/EventElement.html":{}}}],["place",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Location.html":{}}}],["place.formatted_address",{"_index":633,"title":{},"body":{"interfaces/Location.html":{}}}],["place.geometri",{"_index":631,"title":{},"body":{"interfaces/Location.html":{}}}],["place.geometry.location.lat",{"_index":634,"title":{},"body":{"interfaces/Location.html":{}}}],["place.geometry.location.lng",{"_index":635,"title":{},"body":{"interfaces/Location.html":{}}}],["popov",{"_index":515,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover'},{'nam",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["popover.compon",{"_index":387,"title":{},"body":{"modules/DashboardModule.html":{}}}],["popover.component.html",{"_index":517,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover.component.less",{"_index":516,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover.component.t",{"_index":514,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover.component.ts:11",{"_index":519,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover/ev",{"_index":386,"title":{},"body":{"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{}}}],["popovermodul",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["popovermodule.forroot",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["position.coords.latitud",{"_index":642,"title":{},"body":{"interfaces/Location.html":{}}}],["position.coords.longitud",{"_index":644,"title":{},"body":{"interfaces/Location.html":{}}}],["privat",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/TodoListComponent.html":{}}}],["promis",{"_index":575,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":464,"title":{},"body":{"interfaces/EventElement.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"interfaces/Week.html":{}}}],["provid",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"interfaces/Location.html":{},"overview.html":{}}}],["public",{"_index":293,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/TodoListComponent.html":{},"injectables/UserService.html":{}}}],["pure",{"_index":767,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["put",{"_index":463,"title":{},"body":{"interfaces/EventElement.html":{}}}],["re",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["reactiveformsmodul",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["record",{"_index":796,"title":{},"body":{"components/TodoListComponent.html":{}}}],["recur",{"_index":87,"title":{"interfaces/Recurring.html":{}},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["registeronchange(fn",{"_index":650,"title":{},"body":{"interfaces/Location.html":{}}}],["registerontouched(fn",{"_index":653,"title":{},"body":{"interfaces/Location.html":{}}}],["remov",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"components/TodoListComponent.html":{}}}],["removetodo",{"_index":786,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["removetodo(todo",{"_index":792,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["repeatweekli",{"_index":95,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["replaysubject",{"_index":405,"title":{},"body":{"injectables/DashboardService.html":{}}}],["requestopt",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"miscellaneous/functions.html":{}}}],["requir",{"_index":679,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.json",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["reset",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["result",{"_index":37,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":112,"title":{},"body":{"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["rout",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["router",{"_index":295,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["routermodule.forchild(dashboard_rout",{"_index":398,"title":{},"body":{"modules/DashboardModule.html":{}}}],["routermodule.forroot(app_rout",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["rxj",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"dependencies.html":{}}}],["saturday",{"_index":94,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["search",{"_index":546,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["searchfilterpip",{"_index":255,"title":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}},"body":{"modules/AppModule.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["searchfilterpipe.filter(item",{"_index":768,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["select",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"components/GroupSelectForm.html":{}}}],["select'},{'nam",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["selector",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["septemb",{"_index":720,"title":{},"body":{"interfaces/Month.html":{}}}],["server",{"_index":574,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["servic",{"_index":826,"title":{},"body":{"injectables/TodoListService.html":{}}}],["services/auth",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["services/auth.servic",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["services/cor",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GroupService.html":{}}}],["services/interceptor",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["services/session.servic",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["sessionservic",{"_index":201,"title":{"injectables/SessionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/SessionService.html":{},"overview.html":{}}}],["set",{"_index":613,"title":{},"body":{"interfaces/Location.html":{}}}],["setcurrentposit",{"_index":637,"title":{},"body":{"interfaces/Location.html":{}}}],["setdisabledstate?(isdis",{"_index":654,"title":{},"body":{"interfaces/Location.html":{}}}],["sethour",{"_index":511,"title":{},"body":{"interfaces/EventElement.html":{}}}],["setsess",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["setsession(authresult",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/combo",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/datepick",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/loc",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/not",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["show",{"_index":34,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{}}}],["showev",{"_index":35,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{}}}],["sidebar'},{'nam",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["sidebar/minicalendar/minicalendar.compon",{"_index":392,"title":{},"body":{"modules/DashboardModule.html":{}}}],["sidebar/sidebar.compon",{"_index":391,"title":{},"body":{"modules/DashboardModule.html":{}}}],["sidebarcompon",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["src/.../event.t",{"_index":867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../interceptor.t",{"_index":868,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../todo.t",{"_index":869,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.t",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/group/group",{"_index":522,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["src/app/group/group.service.t",{"_index":567,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:17",{"_index":577,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:26",{"_index":580,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:36",{"_index":572,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:9",{"_index":570,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/login/login.component.t",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:16",{"_index":663,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:18",{"_index":669,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:31",{"_index":665,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/models/event.t",{"_index":44,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/event.ts:77",{"_index":46,"title":{},"body":{"interfaces/ApiEvent.html":{}}}],["src/app/models/event.ts:85",{"_index":750,"title":{},"body":{"interfaces/Recurring.html":{}}}],["src/app/models/event.ts:86",{"_index":751,"title":{},"body":{"interfaces/Recurring.html":{}}}],["src/app/models/group.t",{"_index":5,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:12",{"_index":16,"title":{},"body":{"interfaces/ApiCreateGroup.html":{}}}],["src/app/models/group.ts:16",{"_index":19,"title":{},"body":{"interfaces/ApiCreateGroup.html":{}}}],["src/app/models/group.ts:23",{"_index":97,"title":{},"body":{"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:27",{"_index":96,"title":{},"body":{"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:31",{"_index":98,"title":{},"body":{"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:8",{"_index":22,"title":{},"body":{"interfaces/ApiCreateGroup.html":{}}}],["src/app/models/payload.t",{"_index":745,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:10",{"_index":749,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:14",{"_index":747,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:18",{"_index":746,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:22",{"_index":748,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/todo.t",{"_index":100,"title":{},"body":{"interfaces/ApiTodo.html":{},"miscellaneous/functions.html":{}}}],["src/app/models/todo.ts:13",{"_index":106,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:17",{"_index":102,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:21",{"_index":107,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:5",{"_index":108,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:9",{"_index":109,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/user.t",{"_index":40,"title":{},"body":{"interfaces/ApiCreateUser.html":{},"interfaces/ApiUser.html":{}}}],["src/app/models/user.ts:10",{"_index":43,"title":{},"body":{"interfaces/ApiCreateUser.html":{}}}],["src/app/models/user.ts:17",{"_index":114,"title":{},"body":{"interfaces/ApiUser.html":{}}}],["src/app/models/user.ts:6",{"_index":42,"title":{},"body":{"interfaces/ApiCreateUser.html":{}}}],["src/app/services/auth",{"_index":291,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/services/auth.service.t",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:11",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:13",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:19",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:30",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:37",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:45",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/interceptor.t",{"_index":870,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/services/session.service.t",{"_index":775,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:6",{"_index":778,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/shared/combo",{"_index":752,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["src/app/shared/datepick",{"_index":723,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["src/app/shared/loc",{"_index":586,"title":{},"body":{"interfaces/Location.html":{}}}],["src/app/shared/not",{"_index":739,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["src/app/user/member/member.component.t",{"_index":680,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:12",{"_index":693,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:13",{"_index":687,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:14",{"_index":688,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:15",{"_index":689,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:17",{"_index":686,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:21",{"_index":692,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:32",{"_index":691,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/user.service.t",{"_index":830,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:14",{"_index":835,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:24",{"_index":834,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:34",{"_index":833,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:8",{"_index":831,"title":{},"body":{"injectables/UserService.html":{}}}],["src/dashboard/dashboard.component.t",{"_index":369,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/dashboard/dashboard.component.ts:11",{"_index":373,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/dashboard/dashboard.module.t",{"_index":381,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/dashboard/dashboard.service.t",{"_index":399,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:13",{"_index":404,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:7",{"_index":401,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/day/day.component.t",{"_index":429,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/day/day.component.ts:125",{"_index":434,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/day/day.component.ts:126",{"_index":433,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/day/day.component.ts:127",{"_index":432,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/ev",{"_index":513,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["src/dashboard/models/date.model.t",{"_index":412,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:10",{"_index":416,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:4",{"_index":421,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:5",{"_index":417,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:6",{"_index":418,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:7",{"_index":419,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:8",{"_index":420,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:9",{"_index":422,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/day.model.t",{"_index":423,"title":{},"body":{"interfaces/Day.html":{}}}],["src/dashboard/models/day.model.ts:5",{"_index":424,"title":{},"body":{"interfaces/Day.html":{}}}],["src/dashboard/models/day.model.ts:6",{"_index":425,"title":{},"body":{"interfaces/Day.html":{}}}],["src/dashboard/models/month.model.t",{"_index":707,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/month.model.ts:4",{"_index":709,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/month.model.ts:5",{"_index":711,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/month.model.ts:6",{"_index":710,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/week.model.t",{"_index":836,"title":{},"body":{"interfaces/Week.html":{}}}],["src/dashboard/models/week.model.ts:4",{"_index":838,"title":{},"body":{"interfaces/Week.html":{}}}],["src/dashboard/models/week.model.ts:5",{"_index":837,"title":{},"body":{"interfaces/Week.html":{}}}],["src/dashboard/todo",{"_index":780,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["start",{"_index":60,"title":{"index.html":{}},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["start.hour",{"_index":506,"title":{},"body":{"interfaces/EventElement.html":{}}}],["start.minut",{"_index":507,"title":{},"body":{"interfaces/EventElement.html":{}}}],["startdat",{"_index":65,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["starttim",{"_index":61,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["static",{"_index":754,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/AuthService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"interfaces/Month.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"interfaces/Week.html":{}}}],["styleurl",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["subscrib",{"_index":451,"title":{},"body":{"interfaces/EventElement.html":{}}}],["success",{"_index":668,"title":{},"body":{"components/LoginComponent.html":{}}}],["sunday",{"_index":840,"title":{},"body":{"interfaces/Week.html":{}}}],["support",{"_index":874,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":875,"title":{},"body":{"modules.html":{}}}],["task",{"_index":797,"title":{},"body":{"components/TodoListComponent.html":{}}}],["templat",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["templateurl",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["term",{"_index":489,"title":{},"body":{"interfaces/EventElement.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["term'",{"_index":764,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["term.tolowercas",{"_index":770,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["they'd",{"_index":798,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.added.emit(us",{"_index":703,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.auth.isauthent",{"_index":305,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.authservice.login(userinfo).subscribe(r",{"_index":675,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.change.emit(this.loc",{"_index":620,"title":{},"body":{"interfaces/Location.html":{}}}],["this.changedate(mo",{"_index":409,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.corecache.addgroup(newgroup",{"_index":585,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.corecache.currentus",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.corecache.getdatemap().then(map",{"_index":455,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.corecache.onauth",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.curr",{"_index":458,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.current.next(d",{"_index":410,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.dashboardservice.current.subscribe(cur",{"_index":457,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.dashboardservice.current.subscribe(d",{"_index":800,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.dat",{"_index":801,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.day",{"_index":480,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.day.events.foreach(ev",{"_index":483,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.diff",{"_index":470,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.dis",{"_index":655,"title":{},"body":{"interfaces/Location.html":{}}}],["this.eventel",{"_index":469,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.eventelements.push",{"_index":484,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.fb.group",{"_index":671,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getduration(ev",{"_index":486,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.getstart(ev",{"_index":485,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.groupdropdown.nativeel",{"_index":560,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["this.groupform.patchvalue(group",{"_index":565,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["this.groupnotfound",{"_index":562,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["this.height",{"_index":471,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.hours.push(12",{"_index":512,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.http.delete(api_root",{"_index":827,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.get(api_root",{"_index":581,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["this.http.post(api_root",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["this.http.put(api_root",{"_index":829,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.innervalu",{"_index":612,"title":{},"body":{"interfaces/Location.html":{}}}],["this.isauthent",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.load",{"_index":453,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.loc",{"_index":621,"title":{},"body":{"interfaces/Location.html":{}}}],["this.location.latitud",{"_index":641,"title":{},"body":{"interfaces/Location.html":{}}}],["this.location.longitud",{"_index":643,"title":{},"body":{"interfaces/Location.html":{}}}],["this.loginform",{"_index":670,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.map",{"_index":456,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.map.get(d",{"_index":482,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.map.has(d",{"_index":481,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.mapapiloader.load().then",{"_index":623,"title":{},"body":{"interfaces/Location.html":{}}}],["this.memberdropdown.nativeel",{"_index":700,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.memberform.patchvalue(us",{"_index":702,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.membernotfound",{"_index":701,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.newtodo",{"_index":802,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.ngzone.run",{"_index":627,"title":{},"body":{"interfaces/Location.html":{}}}],["this.onchangecallback",{"_index":651,"title":{},"body":{"interfaces/Location.html":{}}}],["this.onchangecallback(v",{"_index":619,"title":{},"body":{"interfaces/Location.html":{}}}],["this.ontouchedcallback",{"_index":648,"title":{},"body":{"interfaces/Location.html":{}}}],["this.parseday(this.current.clon",{"_index":460,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.router.navig",{"_index":677,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":306,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.setcurrentposit",{"_index":622,"title":{},"body":{"interfaces/Location.html":{}}}],["this.sethour",{"_index":454,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.setsession(r",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.todos.indexof(todo",{"_index":807,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todos.push(this.newtodo",{"_index":804,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todos.splice(index",{"_index":808,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todoservice.addtodo(this.newtodo",{"_index":805,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todoservice.removetodo(todo",{"_index":809,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.valu",{"_index":636,"title":{},"body":{"interfaces/Location.html":{}}}],["thursday",{"_index":93,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["time",{"_index":59,"title":{},"body":{"interfaces/ApiEvent.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["timepickermodul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["timepickermodule.forroot",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["titl",{"_index":53,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/ApiTodo.html":{},"interfaces/Recurring.html":{}}}],["tocompar",{"_index":769,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["today",{"_index":472,"title":{},"body":{"interfaces/EventElement.html":{}}}],["todo",{"_index":103,"title":{},"body":{"interfaces/ApiTodo.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"miscellaneous/functions.html":{}}}],["todo(d",{"_index":111,"title":{},"body":{"interfaces/ApiTodo.html":{},"miscellaneous/functions.html":{}}}],["todo(date.tod",{"_index":803,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo(this.date.tod",{"_index":806,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo.id",{"_index":828,"title":{},"body":{"injectables/TodoListService.html":{}}}],["todo.titl",{"_index":810,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todolistcompon",{"_index":183,"title":{"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["todolistservic",{"_index":380,"title":{"injectables/TodoListService.html":{}},"body":{"modules/DashboardModule.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"overview.html":{}}}],["todoservic",{"_index":789,"title":{},"body":{"components/TodoListComponent.html":{}}}],["token",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["token'",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["tomodel",{"_index":726,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["tomodel(d",{"_index":730,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["top",{"_index":431,"title":{},"body":{"interfaces/EventElement.html":{}}}],["topromis",{"_index":583,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["touch",{"_index":645,"title":{},"body":{"interfaces/Location.html":{}}}],["transform",{"_index":756,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["transform(item",{"_index":762,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["tree",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["true",{"_index":307,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["tuesday",{"_index":841,"title":{},"body":{"interfaces/Week.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["undefin",{"_index":632,"title":{},"body":{"interfaces/Location.html":{},"miscellaneous/functions.html":{}}}],["updat",{"_index":824,"title":{},"body":{"injectables/TodoListService.html":{}}}],["updatetodo",{"_index":813,"title":{},"body":{"injectables/TodoListService.html":{}}}],["updatetodo(todo",{"_index":822,"title":{},"body":{"injectables/TodoListService.html":{}}}],["useclass",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["useexist",{"_index":601,"title":{},"body":{"interfaces/Location.html":{}}}],["usefactori",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["user",{"_index":24,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":705,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["user.nam",{"_index":704,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["user.servic",{"_index":694,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["user/member/member.compon",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.servic",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["userinfo",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["userinfo).map(r",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernam",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["userservic",{"_index":202,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/MemberFormComponent.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["v",{"_index":492,"title":{},"body":{"interfaces/EventElement.html":{},"interfaces/Location.html":{}}}],["v.endtim",{"_index":495,"title":{},"body":{"interfaces/EventElement.html":{}}}],["v.starttim",{"_index":497,"title":{},"body":{"interfaces/EventElement.html":{}}}],["valid",{"_index":664,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":673,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.requir",{"_index":672,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":407,"title":{},"body":{"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"components/TodoListComponent.html":{}}}],["value(v",{"_index":618,"title":{},"body":{"interfaces/Location.html":{}}}],["var",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["verifi",{"_index":630,"title":{},"body":{"interfaces/Location.html":{}}}],["view",{"_index":442,"title":{},"body":{"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["viewchild",{"_index":549,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["viewchild('groupdropdown",{"_index":556,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["viewchild('memberdropdown",{"_index":696,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["viewchild('search",{"_index":603,"title":{},"body":{"interfaces/Location.html":{}}}],["void",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/TodoListComponent.html":{}}}],["want",{"_index":450,"title":{},"body":{"interfaces/EventElement.html":{}}}],["wednesday",{"_index":92,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["week",{"_index":52,"title":{"interfaces/Week.html":{}},"body":{"interfaces/ApiEvent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{},"interfaces/Week.html":{},"miscellaneous/enumerations.html":{}}}],["week.model",{"_index":712,"title":{},"body":{"interfaces/Month.html":{}}}],["week/week.compon",{"_index":385,"title":{},"body":{"modules/DashboardModule.html":{}}}],["weekcompon",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["weekday",{"_index":708,"title":{},"body":{"interfaces/Month.html":{},"interfaces/Week.html":{}}}],["whether",{"_index":33,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"injectables/AuthService.html":{}}}],["workout",{"_index":445,"title":{},"body":{"interfaces/EventElement.html":{}}}],["writevalue(valu",{"_index":649,"title":{},"body":{"interfaces/Location.html":{}}}],["xhrbackend",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"miscellaneous/functions.html":{}}}],["year",{"_index":733,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["zone.j",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"interfaces/Location.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiCreateGroup.html":{"url":"interfaces/ApiCreateGroup.html","title":"interface - ApiCreateGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiCreateGroup\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/group.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Description\n                                \n                                \n                                        Members\n                                \n                                \n                                        Name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                    \n                                \n                                \n                                    \n                                        Description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    Description of the group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Members\n                                    \n                                \n                                \n                                    \n                                        Members:     ApiUser[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiUser[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    List of members that belong to the group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:8\n                                        \n                                    \n\n                            \n                                \n                                    Name of the group\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from './user';\nimport { ApiEvent } from './event';\n\nexport interface ApiCreateGroup {\n    /**\n     * Name of the group\n     */\n    Name: string;\n    /**\n     * Description of the group\n     */\n    Description?: string;\n    /**\n     * List of members that belong to the group\n     */\n    Members: ApiUser[];\n}\n\nexport interface ApiGroup extends ApiCreateGroup {\n    /**\n     * Id of the created group\n     */\n    Id: number;\n    /**\n     * Events the belong to the group\n     */\n    Events: ApiEvent[];\n    /**\n     * Whether or not we should show this groups events\n     */\n    ShowEvents?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiCreateUser.html":{"url":"interfaces/ApiCreateUser.html","title":"interface - ApiCreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiCreateUser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Email\n                                \n                                \n                                        Name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                    \n                                \n                                \n                                    \n                                        Email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:6\n                                        \n                                    \n\n                            \n                                \n                                    Email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:10\n                                        \n                                    \n\n                            \n                                \n                                    Name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiCreateUser {\n    /**\n     * Email\n     */\n    Email: string;\n    /**\n     * Name\n     */\n    Name: string;\n}\n\nexport interface ApiUser extends ApiCreateUser {\n    /**\n     * Id of the user\n     */\n    Id: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiEvent.html":{"url":"interfaces/ApiEvent.html","title":"interface - ApiEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiCreateEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/event.ts:77\n                                        \n                                    \n\n                            \n                                \n                                    Id of the event\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from \"./user\";\nimport { ApiGroup } from \"./group\";\n\nexport enum NotificationGranularity {\n    Minutes,\n    Hours,\n    Days,\n    Weeks\n}\n\nexport interface ApiCreateEvent {\n    /**\n     * Title ex) Doctors Appointment\n     */\n    Title: string;\n    /**\n     * Id of the member that made the event\n     */\n    OwnerId: number;\n    /**\n     * Time of day that the event should start\n     */\n    StartTime: string;\n    /**\n     * Time of day that the event should end\n     */\n    EndTime: string;\n    /**\n     * Date of the event (start date)\n     */\n    StartDate: string;\n    /**\n     * End date\n     */\n    EndDate?: string;\n    /** \n     * Either basic location or address\n     */\n    Location?: string;\n    /**\n     * Notes or description of the event\n     */\n    Notes?: string;\n    /**\n     * List of member's who are invited to the event\n     */\n    Members: ApiUser[];\n    /**\n     * How many (minutes/hours/days/weeks) before the event that the user should be notifed\n     */\n    NotificationValue?: number;\n    /**\n     * Notification granularity (minutes/hours/days/weeks)\n     */\n    NotificationGranularity?: NotificationGranularity;\n    /**\n     * group id that this event should belong to, if in a group\n     */\n    GroupId?: number;\n    /**\n     * Color of the event in the form of a hash code (#00000)\n     */\n    Color?: string;\n\n    /**\n     * If it should be hidden on the calendar\n     */\n    Hidden?: boolean;\n\n    Recurring?: Recurring;\n}\n\nexport interface ApiEvent extends ApiCreateEvent {\n    /**\n     * Id of the event\n     */\n    Id: number;\n}\n\nexport interface Recurring {\n    /**\n     * Binary number that maps to days of the week that it should be recurring\n     * ex) 0101101, maps to every monday, wednesday, thursday, saturday\n     */\n    Days: number;\n    RepeatWeekly: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiGroup.html":{"url":"interfaces/ApiGroup.html","title":"interface - ApiGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiGroup\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/group.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiCreateGroup\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Events\n                                \n                                \n                                        Id\n                                \n                                \n                                            Optional\n                                        ShowEvents\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Events\n                                    \n                                \n                                \n                                    \n                                        Events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:27\n                                        \n                                    \n\n                            \n                                \n                                    Events the belong to the group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:23\n                                        \n                                    \n\n                            \n                                \n                                    Id of the created group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ShowEvents\n                                    \n                                \n                                \n                                    \n                                        ShowEvents:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:31\n                                        \n                                    \n\n                            \n                                \n                                    Whether or not we should show this groups events\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from './user';\nimport { ApiEvent } from './event';\n\nexport interface ApiCreateGroup {\n    /**\n     * Name of the group\n     */\n    Name: string;\n    /**\n     * Description of the group\n     */\n    Description?: string;\n    /**\n     * List of members that belong to the group\n     */\n    Members: ApiUser[];\n}\n\nexport interface ApiGroup extends ApiCreateGroup {\n    /**\n     * Id of the created group\n     */\n    Id: number;\n    /**\n     * Events the belong to the group\n     */\n    Events: ApiEvent[];\n    /**\n     * Whether or not we should show this groups events\n     */\n    ShowEvents?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiTodo.html":{"url":"interfaces/ApiTodo.html","title":"interface - ApiTodo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiTodo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/todo.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Date\n                                \n                                \n                                            Optional\n                                        Description\n                                \n                                \n                                        Done\n                                \n                                \n                                            Optional\n                                        Id\n                                \n                                \n                                        Title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Date\n                                    \n                                \n                                \n                                    \n                                        Date:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Todos are only displayed on a certain day\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                    \n                                \n                                \n                                    \n                                        Description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    Description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Done\n                                    \n                                \n                                \n                                    \n                                        Done:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    Whether or not this todo is done\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:5\n                                        \n                                    \n\n                            \n                                \n                                    Id of todo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Title\n                                    \n                                \n                                \n                                    \n                                        Title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    Title of todo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiTodo {\n    /**\n     * Id of todo\n     */\n    Id?: number;\n    /**\n     * Title of todo\n     */\n    Title: string;\n    /**\n     * Description\n     */\n    Description?: string;\n    /**\n     * Todos are only displayed on a certain day\n     */\n    Date: Date;\n    /**\n     * Whether or not this todo is done\n     */\n    Done: boolean;\n}\n\nexport function Todo(date: Date): ApiTodo {\n    return {\n        Title: \"\",\n        Description: \"\",\n        Done: false,\n        Date: date\n    };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiUser.html":{"url":"interfaces/ApiUser.html","title":"interface - ApiUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiUser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiCreateUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Id of the user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiCreateUser {\n    /**\n     * Email\n     */\n    Email: string;\n    /**\n     * Name\n     */\n    Name: string;\n}\n\nexport interface ApiUser extends ApiCreateUser {\n    /**\n     * Id of the user\n     */\n    Id: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                app\n            \n\n\n\n\n            \n                selector\n                my-app\n            \n\n            \n                styleUrls\n                app.component.less\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { CoreCacheService } from './services/core-cache.service';\n\n@Component({\n  moduleId: 'app',\n  selector: 'my-app',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.less']\n})\nexport class AppComponent {\n  constructor(private authService: AuthService, private coreCache: CoreCacheService) {}\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nEditEventComponent\n\nEditEventComponent\n\nAppModule -->\n\nEditEventComponent->AppModule\n\n\n\n\n\nComboBoxComponent\n\nComboBoxComponent\n\nAppModule -->\n\nComboBoxComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nLocationInput\n\nLocationInput\n\nAppModule -->\n\nLocationInput->AppModule\n\n\n\n\n\nCreateGroupComponent\n\nCreateGroupComponent\n\nAppModule -->\n\nCreateGroupComponent->AppModule\n\n\n\n\n\nMemberFormComponent\n\nMemberFormComponent\n\nAppModule -->\n\nMemberFormComponent->AppModule\n\n\n\n\n\nGroupSelectForm\n\nGroupSelectForm\n\nAppModule -->\n\nGroupSelectForm->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nCoreCacheService\n\nCoreCacheService\n\nAppModule -->\n\nCoreCacheService->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nEventService\n\nEventService\n\nAppModule -->\n\nEventService->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nAppModule -->\n\nGroupService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                EditEventComponent\n                            \n                            \n                                ComboBoxComponent\n                            \n                            \n                                NotFoundComponent\n                            \n                            \n                                LocationInput\n                            \n                            \n                                CreateGroupComponent\n                            \n                            \n                                MemberFormComponent\n                            \n                            \n                                GroupSelectForm\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CoreCacheService\n                            \n                            \n                                     AuthGuard\n                            \n                            \n                                     AuthService\n                            \n                            \n                                     EventService\n                            \n                            \n                                     SessionService\n                            \n                            \n                                     UserService\n                            \n                            \n                                     GroupService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DashboardModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule, NgbDateAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DlDateTimePickerDateModule } from 'angular-bootstrap-datetimepicker';\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\nimport { APP_ROUTES } from './app.routing';\nimport { TimepickerModule, ModalModule, PopoverModule, CollapseModule } from 'ngx-bootstrap';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { httpFactory } from './services/interceptor';\n\nimport { AppComponent } from './app.component';\nimport { CoreCacheService } from './services/core-cache.service';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './services/auth-guard';\nimport { AuthService } from './services/auth.service';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { RouterModule } from '@angular/router';\nimport { EditEventComponent } from './event/edit-event/edit-event.component';\nimport { EventService } from './event/event.service';\nimport { SessionService } from './services/session.service';\nimport { NgbDateNativeAdapter } from './shared/datepicker-adapter.component';\nimport { ComboBoxComponent } from './shared/combo-box/combo-box.component';\nimport { SearchFilterPipe } from './shared/combo-box/search.pipe';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\nimport { AgmCoreModule } from '@agm/core';\nimport { UserService } from './user/user.service';\nimport { LocationInput } from './shared/location-input/location-input.component';\nimport { GroupService } from './group/group.service';\nimport { CreateGroupComponent } from './group/create-group/create-group.component';\nimport { MemberFormComponent } from './user/member/member.component';\nimport { GroupSelectForm } from './group/group-select-form/group-select-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    EditEventComponent,\n    ComboBoxComponent,\n    SearchFilterPipe,\n    NotFoundComponent,\n    LocationInput,\n    CreateGroupComponent,\n    MemberFormComponent,\n    GroupSelectForm\n  ],\n  imports: [\n    NgbModule.forRoot(),\n    TimepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PopoverModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    CollapseModule.forRoot(),\n    AgmCoreModule.forRoot({\n      apiKey: \"AIzaSyDUJitlzdDW3SpdwzBzDW5YnTS_I-HeMCs\",\n      libraries: [\"places\"]\n    }),\n    RouterModule.forRoot(APP_ROUTES),\n    DashboardModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DlDateTimePickerDateModule,\n    HttpModule\n  ],\n  providers: [\n    CoreCacheService,\n    AuthGuard,\n    AuthService,\n    EventService,\n    SessionService,\n    UserService,\n    GroupService,\n    {\n      provide: NgbDateAdapter,\n      useClass: NgbDateNativeAdapter\n    },\n    {\n      provide: Http,\n      useFactory: httpFactory,\n      deps: [XHRBackend, RequestOptions]\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-guard.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth-guard.ts:8\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth-guard.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth-guard.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Private\n                                setSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, http: Http, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isAuthenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:45\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(userInfo: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:19\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfo\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:37\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setSession\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSession(authResult: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:30\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authResult\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http } from '@angular/http';\nimport { API_ROOT } from '../../constants.module';\nimport { Observable } from 'rxjs';\nimport { CoreCacheService } from './core-cache.service';\nimport { google } from 'googleapis';\n\n@Injectable()\nexport class AuthService {\n\n  constructor(public router: Router, private http: Http, private coreCache: CoreCacheService) {\n    if (this.isAuthenticated()) {\n      this.coreCache.OnAuth();\n    }\n  }\n\n  public login(userInfo: { email: string, password: string }): Observable {\n    return this.http.post(API_ROOT + '/login', userInfo).map(res => {\n      res = res.json();\n      this.setSession(res);\n      return res;\n    }, err => {\n        err = err ? err.json().message : 'Username or password incorrect';\n        return Observable.throw(err);\n    });\n  }\n\n  private setSession(authResult): void {\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('user_id', authResult.user.id);\n    this.coreCache.currentUser = authResult.user;\n    this.coreCache.OnAuth();\n  }\n\n  public logout(): void {\n    // Remove tokens and expiry time from localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user_id');\n    // Go back to the home route\n    this.router.navigate(['login']);\n  }\n\n  public isAuthenticated(): boolean {\n    // Check whether the current time is past the\n    // access token's expiry time\n    return localStorage.getItem('access_token') != null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-dashboard\n            \n\n            \n                styleUrls\n                dashboard.component.less\n            \n\n\n\n            \n                templateUrl\n                dashboard.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/dashboard.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'mnm-dashboard',\n    templateUrl: 'dashboard.component.html',\n    styleUrls: ['dashboard.component.less']\n})\n\nexport class DashboardComponent {\n    constructor(private router: Router) {}\n}\n\n    \n\n    \n        \n\n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nDashboardModule -->\n\nSidebarComponent->DashboardModule\n\n\n\n\n\nMiniCalendarComponent\n\nMiniCalendarComponent\n\nDashboardModule -->\n\nMiniCalendarComponent->DashboardModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nDashboardModule -->\n\nHeaderComponent->DashboardModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nDashboardModule -->\n\nMonthComponent->DashboardModule\n\n\n\n\n\nDayComponent\n\nDayComponent\n\nDashboardModule -->\n\nDayComponent->DashboardModule\n\n\n\n\n\nWeekComponent\n\nWeekComponent\n\nDashboardModule -->\n\nWeekComponent->DashboardModule\n\n\n\n\n\nEventPopoverComponent\n\nEventPopoverComponent\n\nDashboardModule -->\n\nEventPopoverComponent->DashboardModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nDashboardModule -->\n\nTodoListComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\nTodoListService\n\nTodoListService\n\nDashboardModule -->\n\nTodoListService->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                MiniCalendarComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                MonthComponent\n                            \n                            \n                                DayComponent\n                            \n                            \n                                WeekComponent\n                            \n                            \n                                EventPopoverComponent\n                            \n                            \n                                TodoListComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DashboardService\n                            \n                            \n                                     TodoListService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DashboardComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                DashboardComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\nimport { httpFactory } from '../app/services/interceptor';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { MonthComponent } from './month/month.component';\nimport { WeekComponent } from './week/week.component';\nimport { EventPopoverComponent } from './event-popover/event-popover.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RouterModule } from '@angular/router';\nimport { DASHBOARD_ROUTES } from './dashboard.routing';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MiniCalendarComponent } from './sidebar/minicalendar/minicalendar.component';\nimport { DashboardService } from './dashboard.service';\nimport { DayComponent } from './day/day.component';\nimport { CollapseModule } from 'ngx-bootstrap';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { TodoListService } from './todo-list/todo-list.service';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    SidebarComponent,\n    MiniCalendarComponent,\n    HeaderComponent,\n    MonthComponent,\n    DayComponent,\n    WeekComponent,\n    EventPopoverComponent,\n    TodoListComponent\n  ],\n  imports: [\n    RouterModule.forChild(DASHBOARD_ROUTES),\n    NgbModule.forRoot(),\n    CollapseModule.forRoot(),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule\n  ],\n  exports: [\n      DashboardComponent\n  ],\n  providers: [\n    DashboardService,\n    TodoListService,\n    {\n      provide: Http,\n      useFactory: httpFactory,\n      deps: [XHRBackend, RequestOptions]\n    }],\n  bootstrap: [DashboardComponent]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardService.html":{"url":"injectables/DashboardService.html","title":"injectable - DashboardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DashboardService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dashboard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/dashboard.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeDate(date: moment.Moment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/dashboard.service.ts:13\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    moment.Moment\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     moment.Moment\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        current:     ReplaySubject\n\n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/dashboard.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class DashboardService {\n    public current: ReplaySubject = new ReplaySubject();\n\n    constructor() {\n        this.changeDate(moment());\n    }\n\n    public changeDate(date: moment.Moment): moment.Moment {\n        this.current.next(date);\n        return date;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateObject.html":{"url":"interfaces/DateObject.html","title":"interface - DateObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateObject\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/date.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        current\n                                \n                                \n                                            Optional\n                                        display\n                                \n                                \n                                            Optional\n                                        display1\n                                \n                                \n                                            Optional\n                                        future\n                                \n                                \n                                        moment\n                                \n                                \n                                            Optional\n                                        past\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display1\n                                    \n                                \n                                \n                                    \n                                        display1:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        future\n                                    \n                                \n                                \n                                    \n                                        future:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moment\n                                    \n                                \n                                \n                                    \n                                        moment:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        past\n                                    \n                                \n                                \n                                    \n                                        past:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:9\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment';\n\nexport interface DateObject {\n    moment: moment.Moment;\n    current?: boolean;\n    display?: string;\n    display1?: string;\n    future?: boolean;\n    past?: boolean;\n    active?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/day.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        events\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:     DateObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DateObject\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/day.model.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        events\n                                    \n                                \n                                \n                                    \n                                        events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/day.model.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { DateObject } from \"./date.model\";\nimport { ApiEvent } from \"../../app/models/event\";\n\nexport interface Day {\n    day: DateObject;\n    events: ApiEvent[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventElement.html":{"url":"interfaces/EventElement.html","title":"interface - EventElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventElement\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/day/day.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                                \n                                        height\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     ApiEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/day/day.component.ts:127\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/day/day.component.ts:126\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/day/day.component.ts:125\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { CoreCacheService } from '../../app/services/core-cache.service';\nimport { DateObject, Day } from '../models';\nimport {DATE_FORMAT} from '../../constants.module';\nimport * as moment from 'moment';\nimport { ApiEvent } from '../../app/models/event';\nimport { DashboardService } from '../dashboard.service';\nimport { ApiTodo } from '../../app/models/todo';\n\n@Component({\n    selector: 'mnm-day',\n    templateUrl: 'day.component.html',\n    styleUrls: ['day.component.less']\n})\n\n/**\n * daily view that contains information about events, todos, workouts, and groups.\n */\nexport class DayComponent {\n    public current: moment.Moment;\n    public map: Map;\n    public day: Day;\n    public hours: string[] = [];\n    public eventElements: EventElement[] = [];\n    public loading: boolean = true;\n\n    private diff = 0;\n    private height = 0;\n\n    constructor(private coreCache: CoreCacheService,\n                private dashboardService: DashboardService) {}\n\n    /**\n     * On init of this component, we want to get the date map and subscribe to the current date\n     */\n    ngOnInit(): void {\n        this.loading = true;\n        this.setHours();\n\n        this.coreCache.GetDateMap().then(map => {\n            this.map = map;\n            this.dashboardService.current.subscribe(cur => {\n                this.current = cur;\n                this.parseDay(this.current.clone());\n                this.loading = false;\n            });\n        });\n    }\n\n    /**\n     * parses all the events for a given day and puts them in the proper format to be displayed\n     * @param curr a given day moment\n     */\n    public parseDay(curr: moment.Moment): void {\n        this.eventElements = [];\n        this.diff = 0;\n        this.height = 0;\n        let today = moment().format(DATE_FORMAT);\n        let date = curr.format(DATE_FORMAT);\n\n        let dateValue: DateObject = {\n            current: curr.format(DATE_FORMAT) === today,\n            display: curr.format('dddd, MMMM D'),\n            moment: curr.utc()\n        };\n\n        this.day = {\n            day: dateValue,\n            events: this.map.has(date) ? this.map.get(date) : []\n        };\n\n        this.day.events.forEach(event => {\n            this.eventElements.push({\n                top: this.getStart(event),\n                height: this.getDuration(event),\n                event: event\n            });\n        });\n    }\n\n    /**\n     * calculates the duration of a given event and puts it in terms of pixels in order to display it.\n     * @param v the given event\n     */\n    public getDuration(v) {\n        let end = moment(v.EndDate + \" \" + v.EndTime);\n\n        let start = moment(v.StartDate + \" \" + v.StartTime);\n        if (moment.duration(end.diff(start)).asDays() >= 1) {\n            end = moment(v.StartDate + \" \" + \"24:00:00\");\n        }\n\n        return this.height = moment.duration(end.clone().diff(start)).asHours() * 100;\n    }\n\n    /**\n     * calculates the amount of time between the start of the day and the start of a given event and puts it in terms of pixels in order to display it.\n     * @param v the given event\n     */\n    public getStart(v) {\n        let start = moment(v.StartDate + \" \" + v.StartTime);\n        return this.diff = ((start.hours() + (start.minutes() / 60)) * 100) - this.diff - this.height;\n    }\n\n    /**\n     * creates an array containing the ours in a day in order to display them.\n     */\n    private setHours(): void {\n        this.hours.push(12 + 'am');\n        for (let i = 1; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventPopoverComponent.html":{"url":"components/EventPopoverComponent.html","title":"component - EventPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventPopoverComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/event-popover/event-popover.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-event-popover\n            \n\n            \n                styleUrls\n                event-popover.component.less\n            \n\n\n\n            \n                templateUrl\n                event-popover.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/event-popover/event-popover.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        event\n                    \n                    \n                            \n                            Type:    ApiEvent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/dashboard/event-popover/event-popover.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ApiEvent } from '../../app/models/event';\n\n@Component({\n    selector: 'mnm-event-popover',\n    templateUrl: 'event-popover.component.html',\n    styleUrls: ['event-popover.component.less']\n})\n\nexport class EventPopoverComponent {\n    @Input('event') event: ApiEvent;\n    constructor() {}\n}\n\n    \n\n    \n        {{event.Title}}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{event.Title}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupSelectForm.html":{"url":"components/GroupSelectForm.html","title":"component - GroupSelectForm","body":"\n                   \n\n\n\n\n\n  Components\n  GroupSelectForm\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/group/group-select-form/group-select-form.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                group-select\n            \n\n\n\n\n            \n                templateUrl\n                group-select-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groupDropdown\n                            \n                            \n                                groupNotFound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                groupSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                groups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                added\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/group/group-select-form/group-select-form.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                        empty group Form Group\n\n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groups\n                    \n                    \n                        List of groups that the user can choose from\n\n                            \n                            Type:    ApiGroup[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        added\n                    \n                    \n                        Event emitter for when a new group is selected\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addGroup(group: ApiGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:53\n                            \n                        \n\n                \n                    \n                            Adds a group's value to the group form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    ApiGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        groupSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:38\n                            \n                        \n\n                \n                    \n                            Finds a group by search\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDropdown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupDropdown:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:14\n                            \n                        \n\n                \n                    \n                        Dropdown element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupNotFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupNotFound:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:31\n                            \n                        \n\n                \n                    \n                        Boolean to display a message if no groups are found/match your search criteria\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ApiGroup } from '../../models/group';\n\n@Component({\n    selector: 'group-select',\n    templateUrl: 'group-select-form.component.html'\n})\n\nexport class GroupSelectForm {\n    /**\n     * Dropdown element\n     */\n    @ViewChild('groupDropdown') groupDropdown: ElementRef;\n    /**\n     * empty group Form Group\n     */\n    @Input('group') groupForm: FormGroup;\n    /**\n     * List of groups that the user can choose from\n     */\n    @Input('groups') groups: ApiGroup[];\n    /**\n     * Event emitter for when a new group is selected\n     */\n    @Output() added: EventEmitter = new EventEmitter();\n\n    /**\n     * Boolean to display a message if no groups are found/match your search criteria\n     */\n    groupNotFound: boolean = false;\n\n    constructor() {}\n\n    /**\n     * Finds a group by search\n     */\n    public groupSearch(): void {\n        let el = this.groupDropdown.nativeElement;\n        if (el.children.length === 0) {\n            this.groupNotFound = true;\n        } else if (el.children.length === 1 && el.children[0].id === \"not-found\") {\n            this.groupNotFound = true;\n        } else {\n            this.groupNotFound = false;\n        }\n    }\n\n    /**\n     * Adds a group's value to the group form\n     * @param {ApiGroup} group \n     */\n    public addGroup(group: ApiGroup): void {\n        this.groupForm.patchValue(group);\n    }\n}\n\n    \n\n    \n        \n        \n        \n            \n                No Groups Found\n            \n            \n                {{group.Name}}\n            \n        \n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            No Groups Found                                        {{group.Name}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupSelectForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/group/group.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Create\n                            \n                            \n                                    Public\n                                Get\n                            \n                            \n                                    Public\n                                GetAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/group/group.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Create(group: ApiCreateGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group.service.ts:36\n                            \n                        \n\n                \n                    \n                            Attempts to create a new group on the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    ApiCreateGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Get(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group.service.ts:17\n                            \n                        \n\n                \n                    \n                            Gets a group from either server or core cache\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            GetAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group.service.ts:26\n                            \n                        \n\n                \n                    \n                            Gets all groups from the server or core cache\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiGroup, ApiCreateGroup } from '../models/group';\nimport { API_ROOT } from '../../constants.module';\nimport { CoreCacheService } from '../services/core-cache.service';\n\n@Injectable()\n\nexport class GroupService {\n    constructor(private http: Http,\n                private coreCache: CoreCacheService) {}\n\n    /**\n     * Gets a group from either server or core cache\n     * @param {number} id \n     */\n    public Get(id: number): Promise {\n        return this.http.get(API_ROOT + '/group/' + id)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Gets all groups from the server or core cache\n     */\n    public GetAll(): Promise {\n        return this.http.get(API_ROOT + '/group')\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Attempts to create a new group on the server\n     * @param {ApiCreateGroup} group \n     */\n    public Create(group: ApiCreateGroup): Promise {\n        return this.http.post(API_ROOT + '/group', group)\n            .map(res => {\n                let newGroup: ApiGroup = res.json();\n                this.coreCache.AddGroup(newGroup);\n                return newGroup;\n            })\n            .toPromise();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/location-input/location-input.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Address\n                                \n                                \n                                        Latitude\n                                \n                                \n                                        Longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Address\n                                    \n                                \n                                \n                                    \n                                        Address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/shared/location-input/location-input.component.ts:21\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Latitude\n                                    \n                                \n                                \n                                    \n                                        Latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/shared/location-input/location-input.component.ts:22\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Longitude\n                                    \n                                \n                                \n                                    \n                                        Longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/shared/location-input/location-input.component.ts:23\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Component,\n    ElementRef,\n    ViewChild,\n    NgZone,\n    forwardRef,\n    Input,\n    Output,\n    EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { } from 'googlemaps';\nimport { MapsAPILoader } from '@agm/core';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => LocationInput),\n    multi: true\n};\n\nexport interface Location {\n    Address: string;\n    Latitude: number;\n    Longitude: number;\n}\n\n@Component({\n    selector: 'location-input',\n    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],\n    template: `\n        \n        `\n})\nexport class LocationInput implements ControlValueAccessor {\n    @ViewChild('search')\n    public search: ElementRef;\n\n    @Input() disabled: boolean;\n    @Output() change: EventEmitter = new EventEmitter();\n\n    private location: Location;\n    private innerValue: any;\n\n    constructor(\n        private mapApiLoader: MapsAPILoader,\n        private ngZone: NgZone\n    ) {}\n\n    private onTouchedCallback: () => () => {};\n    private onChangeCallback: (_: any) => () => {};\n\n    // get accessor\n    get value(): any {\n        return this.innerValue;\n    };\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n        if (v !== this.innerValue) {\n            this.innerValue = v;\n            this.onChangeCallback(v);\n        }\n\n        // set latitude, longitude and zoom\n        this.change.emit(this.location);\n    }\n\n    ngOnInit(): void {\n        this.location = { Address: \"\", Latitude: 0, Longitude: 0 };\n        this.setCurrentPosition();\n\n        this.mapApiLoader.load().then(() => {\n            let autocomplete = new google.maps.places.Autocomplete(this.search.nativeElement, {\n                types: [\"address\"]\n            });\n            autocomplete.addListener(\"place_changed\", () => {\n                this.ngZone.run(() => {\n                    // get the place result\n                    let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n\n                    // verify result\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n\n                    this.location = {\n                        Address: place.formatted_address,\n                        Latitude: place.geometry.location.lat(),\n                        Longitude: place.geometry.location.lng()\n                    };\n\n                    this.value = place.formatted_address;\n                });\n            });\n        });\n    }\n\n    private setCurrentPosition() {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n            this.location.Latitude = position.coords.latitude;\n            this.location.Longitude = position.coords.longitude;\n            });\n        }\n    }\n\n    // Set touched on blur\n    onBlur() {\n        this.onTouchedCallback();\n    }\n\n    // From ControlValueAccessor interface\n    writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n\n    // From ControlValueAccessor interface\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-login\n            \n\n            \n                styleUrls\n                login.component.less\n            \n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Login\n                            \n                            \n                        \n                    \n                \n                \n                    \nLogin(userInfo: literal type, valid: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                            Attempts to validate credentials and log a user in\nOn success you should be navigated to dashboard\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfo\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        valid\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                        Login form { email: string, password: string }\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'mnm-login',\n    templateUrl: 'login.component.html',\n    styleUrls: ['login.component.less']\n})\n\nexport class LoginComponent {\n    /**\n     * Login form { email: string, password: string }\n     */\n    public loginForm: FormGroup;\n\n    constructor(public router: Router, private authService: AuthService, private fb: FormBuilder) {\n        this.loginForm = this.fb.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required]]\n        });\n    }\n\n    /**\n     * Attempts to validate credentials and log a user in\n     * On success you should be navigated to dashboard\n     * @param { { email: string, password: string } } userInfo \n     * @param {boolean} valid \n     */\n    Login(userInfo: { email: string, password: string }, valid: boolean): void {\n        console.log(userInfo, valid);\n        if (valid) {\n            this.authService.login(userInfo).subscribe(res => {\n                console.log(res);\n                this.router.navigate(['/']);\n            }, err => {\n                console.log(err);\n            });\n        } else {\n            return;\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    Email:\n                    \n                        \n                        Email is required\n                    \n                \n                \n                    Password:\n                    \n                        \n                        Password is required\n                    \n                \n                \n                    \n                        Login\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        Email:                                                                    Email is required                                                                        Password:                                                                    Password is required                                                                                                Login                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberFormComponent.html":{"url":"components/MemberFormComponent.html","title":"component - MemberFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MemberFormComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/user/member/member.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                member-form\n            \n\n\n\n\n            \n                templateUrl\n                member.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                memberDropdown\n                            \n                            \n                                memberNotFound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMember\n                            \n                            \n                                    Public\n                                memberSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                member\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                added\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/user/member/member.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        member\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        users\n                    \n                    \n                            \n                            Type:    ApiUser[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        added\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addMember\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addMember(user: ApiUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:32\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    ApiUser\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            memberSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        memberSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:21\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memberDropdown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        memberDropdown:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memberNotFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        memberNotFound:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { ApiUser } from '../../models/user';\n\n@Component({\n    selector: 'member-form',\n    templateUrl: 'member.component.html'\n})\n\nexport class MemberFormComponent {\n    @ViewChild('memberDropdown') memberDropdown: ElementRef;\n    @Input('member') memberForm: FormGroup;\n    @Input('users') users: ApiUser[];\n    @Output() added: EventEmitter = new EventEmitter();\n\n    memberNotFound: boolean = false;\n\n    constructor() {}\n\n    public memberSearch(): void {\n        let el = this.memberDropdown.nativeElement;\n        if (el.children.length === 0) {\n            this.memberNotFound = true;\n        } else if (el.children.length === 1 && el.children[0].id === \"not-found\") {\n            this.memberNotFound = true;\n        } else {\n            this.memberNotFound = false;\n        }\n    }\n\n    public addMember(user: ApiUser): void {\n        this.memberForm.patchValue(user);\n        this.added.emit(user);\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n            Member Not Found\n        \n        \n            {{user.Name}}\n            {{user.Email}}\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Member Not Found                            {{user.Name}}            {{user.Email}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MemberFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Month.html":{"url":"interfaces/Month.html","title":"interface - Month","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Month\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/month.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        weekdays\n                                \n                                \n                                        weeks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/month.model.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weekdays\n                                    \n                                \n                                \n                                    \n                                        weekdays:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/month.model.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weeks\n                                    \n                                \n                                \n                                    \n                                        weeks:     Week[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Week[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/month.model.ts:5\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Week } from \"./week.model\";\n\nexport interface Month {\n    name: string;\n    weeks: Week[];\n    weekdays: string[];\n}\n\nexport const Months: string[] = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'November',\n    'December'\n];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgbDateNativeAdapter.html":{"url":"injectables/NgbDateNativeAdapter.html","title":"injectable - NgbDateNativeAdapter","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgbDateNativeAdapter\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datepicker-adapter.component.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromModel\n                            \n                            \n                                toModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromModel\n                            \n                            \n                        \n                    \n                \n                \n                    \nfromModel(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/datepicker-adapter.component.ts:7\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     NgbDateStruct\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toModel\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoModel(date: NgbDateStruct)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/datepicker-adapter.component.ts:11\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    NgbDateStruct\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbDateAdapter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter {\n\n  fromModel(date: Date): NgbDateStruct {\n    return (date && date.getFullYear) ? {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()} : null;\n  }\n\n  toModel(date: NgbDateStruct): Date {\n    return date ? new Date(date.year, date.month - 1, date.day) : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/shared/not-found/not-found.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                not-found\n            \n\n            \n                styleUrls\n                not-found.component.less\n            \n\n\n\n            \n                templateUrl\n                not-found.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'not-found',\n    templateUrl: 'not-found.component.html',\n    styleUrls: ['not-found.component.less']\n})\n\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n            Page was not found\n            Back to Dashboard\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Page was not found            Back to Dashboard            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadModel.html":{"url":"interfaces/PayloadModel.html","title":"interface - PayloadModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Events\n                                \n                                \n                                        Groups\n                                \n                                \n                                        Todo\n                                \n                                \n                                        User\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Events\n                                    \n                                \n                                \n                                    \n                                        Events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:18\n                                        \n                                    \n\n                            \n                                \n                                    List of events that current user has access to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Groups\n                                    \n                                \n                                \n                                    \n                                        Groups:     ApiGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiGroup[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:14\n                                        \n                                    \n\n                            \n                                \n                                    List of groups that current user has access to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Todo\n                                    \n                                \n                                \n                                    \n                                        Todo:     ApiTodo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiTodo[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:22\n                                        \n                                    \n\n                            \n                                \n                                    List of todos for current user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        User\n                                    \n                                \n                                \n                                    \n                                        User:     ApiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiUser\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:10\n                                        \n                                    \n\n                            \n                                \n                                    Current user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from './user';\nimport { ApiEvent } from './event';\nimport { ApiGroup } from './group';\nimport { ApiTodo } from './todo';\n\nexport interface PayloadModel {\n    /**\n     * Current user\n     */\n    User: ApiUser;\n    /**\n     * List of groups that current user has access to\n     */\n    Groups: ApiGroup[];\n    /**\n     * List of events that current user has access to\n     */\n    Events: ApiEvent[];\n    /**\n     * List of todos for current user\n     */\n    Todo: ApiTodo[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Recurring.html":{"url":"interfaces/Recurring.html","title":"interface - Recurring","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Recurring\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Days\n                                \n                                \n                                        RepeatWeekly\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Days\n                                    \n                                \n                                \n                                    \n                                        Days:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/event.ts:85\n                                        \n                                    \n\n                            \n                                \n                                    Binary number that maps to days of the week that it should be recurring\nex) 0101101, maps to every monday, wednesday, thursday, saturday\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RepeatWeekly\n                                    \n                                \n                                \n                                    \n                                        RepeatWeekly:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/event.ts:86\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from \"./user\";\nimport { ApiGroup } from \"./group\";\n\nexport enum NotificationGranularity {\n    Minutes,\n    Hours,\n    Days,\n    Weeks\n}\n\nexport interface ApiCreateEvent {\n    /**\n     * Title ex) Doctors Appointment\n     */\n    Title: string;\n    /**\n     * Id of the member that made the event\n     */\n    OwnerId: number;\n    /**\n     * Time of day that the event should start\n     */\n    StartTime: string;\n    /**\n     * Time of day that the event should end\n     */\n    EndTime: string;\n    /**\n     * Date of the event (start date)\n     */\n    StartDate: string;\n    /**\n     * End date\n     */\n    EndDate?: string;\n    /** \n     * Either basic location or address\n     */\n    Location?: string;\n    /**\n     * Notes or description of the event\n     */\n    Notes?: string;\n    /**\n     * List of member's who are invited to the event\n     */\n    Members: ApiUser[];\n    /**\n     * How many (minutes/hours/days/weeks) before the event that the user should be notifed\n     */\n    NotificationValue?: number;\n    /**\n     * Notification granularity (minutes/hours/days/weeks)\n     */\n    NotificationGranularity?: NotificationGranularity;\n    /**\n     * group id that this event should belong to, if in a group\n     */\n    GroupId?: number;\n    /**\n     * Color of the event in the form of a hash code (#00000)\n     */\n    Color?: string;\n\n    /**\n     * If it should be hidden on the calendar\n     */\n    Hidden?: boolean;\n\n    Recurring?: Recurring;\n}\n\nexport interface ApiEvent extends ApiCreateEvent {\n    /**\n     * Id of the event\n     */\n    Id: number;\n}\n\nexport interface Recurring {\n    /**\n     * Binary number that maps to days of the week that it should be recurring\n     * ex) 0101101, maps to every monday, wednesday, thursday, saturday\n     */\n    Days: number;\n    RepeatWeekly: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchFilterPipe.html":{"url":"injectables/SearchFilterPipe.html","title":"injectable - SearchFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SearchFilterPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/combo-box/search.pipe.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                filter\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filter(items: Array, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:26\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                List of items to filter\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a string term to compare with every property of the list\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: any, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                object from array\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                term's search\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Injectable } from \"@angular/core\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\n@Injectable()\nexport class SearchFilterPipe implements PipeTransform {\n\n  /**\n   * @param items object from array\n   * @param term term's search\n   */\n  transform(items: any, term: string): any {\n    if (!term || !items) return items;\n\n    return SearchFilterPipe.filter(items, term);\n  }\n\n  /**\n   * \n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   * \n   */\n  static filter(items: Array, term: string): Array {\n\n    const toCompare = term.toLowerCase();\n\n    return items.filter((item: any) => {\n      for (let property in item) {\n        if (item[property] === null) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchFilterPipe-1.html":{"url":"injectables/SearchFilterPipe-1.html","title":"injectable - SearchFilterPipe-1","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SearchFilterPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/combo-box/search.pipe.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                filter\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filter(items: Array, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:26\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                List of items to filter\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a string term to compare with every property of the list\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: any, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                object from array\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                term's search\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Injectable } from \"@angular/core\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\n@Injectable()\nexport class SearchFilterPipe implements PipeTransform {\n\n  /**\n   * @param items object from array\n   * @param term term's search\n   */\n  transform(items: any, term: string): any {\n    if (!term || !items) return items;\n\n    return SearchFilterPipe.filter(items, term);\n  }\n\n  /**\n   * \n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   * \n   */\n  static filter(items: Array, term: string): Array {\n\n    const toCompare = term.toLowerCase();\n\n    return items.filter((item: any) => {\n      for (let property in item) {\n        if (item[property] === null) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/session.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserId\n                    \n                \n\n                \n                    \n                        getcurrentUserId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class SessionService {\n    get currentUserId(): number {\n        return +(localStorage.getItem('user_id'));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoListComponent.html":{"url":"components/TodoListComponent.html","title":"component - TodoListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TodoListComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/todo-list/todo-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                todo-list\n            \n\n            \n                styleUrls\n                todo-list.component.less\n            \n\n\n\n            \n                templateUrl\n                todo-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                newTodo\n                            \n                            \n                                    Public\n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                removeTodo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoService: TodoListService, dashboardService: DashboardService)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/todo-list/todo-list.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    todoService\n                                                  \n                                                        \n                                                                    TodoListService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    dashboardService\n                                                  \n                                                        \n                                                                    DashboardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTodo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:33\n                            \n                        \n\n                \n                    \n                            allows the user to add a todo item to their list\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:43\n                            \n                        \n\n                \n                    \n                            allows the user to remove a given todo item from their list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the given todo item\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        date:     moment.Moment\n\n                    \n                \n                    \n                        \n                            Type :     moment.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newTodo:     ApiTodo\n\n                    \n                \n                    \n                        \n                            Type :     ApiTodo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            todos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        todos:     ApiTodo[]\n\n                    \n                \n                    \n                        \n                            Type :     ApiTodo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ApiTodo, Todo } from '../../app/models/todo';\nimport { TodoListService } from './todo-list.service';\nimport { DashboardService } from '../dashboard.service';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'todo-list',\n    templateUrl: 'todo-list.component.html',\n    styleUrls: ['todo-list.component.less']\n})\n\n/**\n * todo view that allows the user to record daily tasks they'd like to complete\n */\nexport class TodoListComponent {\n    public newTodo: ApiTodo;\n    public date: moment.Moment;\n\n    public todos: ApiTodo[] = [];\n\n    constructor(private todoService: TodoListService,\n                private dashboardService: DashboardService) {\n                    this.dashboardService.current.subscribe(date => {\n                        this.date = date;\n                        this.newTodo = Todo(date.toDate());\n                    });\n                }\n\n    /**\n     * allows the user to add a todo item to their list\n     */\n    addTodo(): void {\n        this.todos.push(this.newTodo);\n        this.todoService.addTodo(this.newTodo);\n        this.newTodo = Todo(this.date.toDate());\n    }\n\n    /**\n     * allows the user to remove a given todo item from their list\n     * @param todo the given todo item\n     */\n    removeTodo(todo: ApiTodo): void {\n        let index = this.todos.indexOf(todo);\n        if (index > -1) {\n            this.todos.splice(index, 1);\n            this.todoService.removeTodo(todo);\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n     0\">\n        \n            \n                \n                    \n                    \n                    \n                    {{todo.Title}}\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     0\">                                                                                                                    {{todo.Title}}                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoListService.html":{"url":"injectables/TodoListService.html","title":"injectable - TodoListService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TodoListService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/todo-list/todo-list.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                getTodo\n                            \n                            \n                                getTodos\n                            \n                            \n                                removeTodo\n                            \n                            \n                                updateTodo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/todo-list/todo-list.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:18\n                            \n                        \n\n                \n                    \n                            Create a new todo\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTodo(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:48\n                            \n                        \n\n                \n                    \n                            Gets a todo from the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTodos\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTodos()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:57\n                            \n                        \n\n                \n                    \n                            Gets all the todos from the server\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:28\n                            \n                        \n\n                \n                    \n                            Delete a todo on the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:38\n                            \n                        \n\n                \n                    \n                            Updates the todo on the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiTodo } from '../../app/models/todo';\nimport { API_ROOT } from '../../constants.module';\n\n@Injectable()\n\n/**\n * CRUD+ Service for Todo List\n */\nexport class TodoListService {\n    constructor(private http: Http) {}\n\n    /**\n     * Create a new todo\n     * @param {ApiTodo} todo \n     */\n    addTodo(todo: ApiTodo): Promise {\n        return this.http.post(API_ROOT + '/todo', todo)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Delete a todo on the server\n     * @param todo \n     */\n    removeTodo(todo: ApiTodo): Promise {\n        return this.http.delete(API_ROOT + '/todo/' + todo.Id)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Updates the todo on the server\n     * @param todo\n     */\n    updateTodo(todo: ApiTodo): Promise {\n        return this.http.put(API_ROOT + '/todo/' + todo.Id, todo)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Gets a todo from the server\n     * @param id\n     */\n    getTodo(id: number): Promise {\n        return this.http.get(API_ROOT + '/todo/' + id)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Gets all the todos from the server\n     */\n    getTodos(): Promise {\n        return this.http.get(API_ROOT + '/todo')\n            .map(res => res.json())\n            .toPromise();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Create\n                            \n                            \n                                    Public\n                                Get\n                            \n                            \n                                    Public\n                                GetAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Create(user: ApiCreateUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.service.ts:34\n                            \n                        \n\n                \n                    \n                            Attempts to create a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    ApiCreateUser\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Get(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.service.ts:24\n                            \n                        \n\n                \n                    \n                            Gets a user from the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            GetAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            Gets all users from the server\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiUser, ApiCreateUser } from '../models/user';\nimport { API_ROOT } from '../../constants.module';\n\n@Injectable()\n\nexport class UserService {\n    constructor(private http: Http) {}\n\n    /**\n     * Gets all users from the server\n     */\n    public GetAll(): Promise {\n        return this.http.get(API_ROOT + '/user')\n                .map(res => res.json())\n                .toPromise();\n    }\n\n    /**\n     * Gets a user from the server\n     * @param {number} id\n     */\n    public Get(id: number): Promise {\n        return this.http.get(API_ROOT + '/user')\n                .map(res => res.json())\n                .toPromise();\n    }\n\n    /**\n     * Attempts to create a new user\n     * @param {ApiCreateUser} user \n     */\n    public Create(user: ApiCreateUser): Promise {\n        return this.http.post(API_ROOT + '/user', user)\n                .map(res => res.json())\n                .toPromise();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Week.html":{"url":"interfaces/Week.html","title":"interface - Week","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Week\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/week.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        days\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/week.model.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        days\n                                    \n                                \n                                \n                                    \n                                        days:     Day[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Day[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/week.model.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Day } from './day.model';\n\nexport interface Week {\n    days: Day[];\n    current: boolean;\n}\n\nexport const WeekDays: string[] = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.2\n        \n            @angular/animations : ^5.0.0\n        \n            @angular/common : ^5.0.0\n        \n            @angular/compiler : ^5.0.0\n        \n            @angular/compiler-cli : ^5.0.0\n        \n            @angular/core : ^5.0.0\n        \n            @angular/forms : ^5.0.0\n        \n            @angular/http : ^5.0.0\n        \n            @angular/platform-browser : ^5.0.0\n        \n            @angular/platform-browser-dynamic : ^5.0.0\n        \n            @angular/router : ^5.0.0\n        \n            @ng-bootstrap/ng-bootstrap : 1.0.0\n        \n            bootstrap : 4.0.0\n        \n            core-js : ^2.4.1\n        \n            font-awesome : ^4.7.0\n        \n            google : ^2.1.0\n        \n            googleapis : ^27.0.0\n        \n            moment : ^2.20.1\n        \n            ngx-bootstrap : ^2.0.3\n        \n            rxjs : ^5.5.0\n        \n            zone.js : ^0.8.4\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NotificationGranularity   (src/.../event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/event.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationGranularity\n                    \n                \n                        \n                            \n                                 Minutes\n                            \n                        \n                        \n                            \n                                 Hours\n                            \n                        \n                        \n                            \n                                 Days\n                            \n                        \n                        \n                            \n                                 Weeks\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            httpFactory   (src/.../interceptor.ts)\n                        \n                        \n                            Todo   (src/.../todo.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nhttpFactory(xhrBackend: undefined, requestOptions: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        xhrBackend\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        requestOptions\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/models/todo.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Todo\n                            \n                            \n                        \n                    \n                \n                \n                    \nTodo(date: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMeet and Manage\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nEditEventComponent\n\nEditEventComponent\n\nAppModule -->\n\nEditEventComponent->AppModule\n\n\n\n\n\nComboBoxComponent\n\nComboBoxComponent\n\nAppModule -->\n\nComboBoxComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nLocationInput\n\nLocationInput\n\nAppModule -->\n\nLocationInput->AppModule\n\n\n\n\n\nCreateGroupComponent\n\nCreateGroupComponent\n\nAppModule -->\n\nCreateGroupComponent->AppModule\n\n\n\n\n\nMemberFormComponent\n\nMemberFormComponent\n\nAppModule -->\n\nMemberFormComponent->AppModule\n\n\n\n\n\nGroupSelectForm\n\nGroupSelectForm\n\nAppModule -->\n\nGroupSelectForm->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nCoreCacheService\n\nCoreCacheService\n\nAppModule -->\n\nCoreCacheService->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nEventService\n\nEventService\n\nAppModule -->\n\nEventService->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nAppModule -->\n\nGroupService->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nDashboardModule -->\n\nSidebarComponent->DashboardModule\n\n\n\n\n\nMiniCalendarComponent\n\nMiniCalendarComponent\n\nDashboardModule -->\n\nMiniCalendarComponent->DashboardModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nDashboardModule -->\n\nHeaderComponent->DashboardModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nDashboardModule -->\n\nMonthComponent->DashboardModule\n\n\n\n\n\nDayComponent\n\nDayComponent\n\nDashboardModule -->\n\nDayComponent->DashboardModule\n\n\n\n\n\nWeekComponent\n\nWeekComponent\n\nDashboardModule -->\n\nWeekComponent->DashboardModule\n\n\n\n\n\nEventPopoverComponent\n\nEventPopoverComponent\n\nDashboardModule -->\n\nEventPopoverComponent->DashboardModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nDashboardModule -->\n\nTodoListComponent->DashboardModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\nTodoListService\n\nTodoListService\n\nDashboardModule -->\n\nTodoListService->DashboardModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        18 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        15 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
