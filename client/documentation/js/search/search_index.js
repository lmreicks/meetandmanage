var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiCreateGroup.html",[0,0.337,1,2.264]],["body/interfaces/ApiCreateGroup.html",[0,0.556,1,3.73,2,0.199,3,0.199,4,0.199,5,3.222,6,0.268,7,0.842,8,1.048,9,2.269,10,2.269,11,1.063,12,1.739,13,0.499,14,0.026,15,0.445,16,3.811,17,1.944,18,2.441,19,3.811,20,2.06,21,3.73,22,3.811,23,0.399,24,1.197,25,2.211,26,1.631,27,0.218,28,2.122,29,1.957,30,2.06,31,1.048,32,1.28,33,2.122,34,3.222,35,3.222,36,1.197,37,0.019,38,0.019]],["title/interfaces/ApiCreateUser.html",[0,0.337,39,2.264]],["body/interfaces/ApiCreateUser.html",[0,0.599,2,0.233,3,0.233,4,0.233,6,0.314,7,0.931,11,1.108,12,1.812,13,0.495,14,0.026,15,0.441,18,1.839,24,1.403,27,0.241,29,2.293,30,2.279,32,1.499,37,0.021,38,0.021,39,4.017,40,3.776,41,4.399,42,4.465,43,4.465]],["title/interfaces/ApiEvent.html",[0,0.337,25,1.498]],["body/interfaces/ApiEvent.html",[0,0.531,2,0.155,3,0.155,4,0.155,6,0.208,7,0.709,9,1.065,10,1.513,12,1.694,13,0.265,14,0.026,15,0.236,17,1.239,18,1.735,20,1.221,21,1.98,23,0.236,24,1.324,25,1.862,26,1.769,27,0.232,29,2.163,30,2.536,31,0.816,32,2.104,36,0.932,37,0.016,38,0.016,44,2.205,45,4.144,46,2.965,47,2.205,48,1.41,49,3.134,50,2.814,51,2.251,52,1.54,53,2.507,54,3.646,55,2.507,56,1.98,57,2.558,58,2.507,59,1.651,60,3.134,61,3.563,62,2.507,63,2.507,64,2.507,65,2.507,66,2.814,67,2.814,68,2.507,69,2.814,70,2.507,71,2.018,72,2.507,73,2.507,74,2.507,75,1.513,76,2.205,77,3.563,78,2.507,79,2.507,80,2.507,81,3.563,82,2.507,83,3.563,84,2.507,85,2.507,86,2.507,87,3.563,88,2.507,89,2.507,90,2.507,91,3.563,92,2.507,93,3.97,94,2.507,95,3.134,96,2.507,97,2.205,98,2.205,99,2.205,100,2.205,101,2.507]],["title/interfaces/ApiGroup.html",[0,0.337,28,1.887]],["body/interfaces/ApiGroup.html",[0,0.553,1,3.711,2,0.197,3,0.197,4,0.197,5,3.189,6,0.265,7,0.836,8,1.041,9,1.784,10,1.784,11,0.836,12,1.367,13,0.497,14,0.026,15,0.443,17,1.94,18,2.046,20,1.553,21,3.711,23,0.396,24,1.185,25,2.61,26,1.815,27,0.216,28,2.766,29,2.551,30,2.595,31,1.367,32,1.866,33,2.766,34,4.201,35,4.993,36,1.746,37,0.018,38,0.018,102,3.771,103,3.771,104,3.771]],["title/interfaces/ApiTodo.html",[0,0.337,105,1.887]],["body/interfaces/ApiTodo.html",[0,0.486,2,0.192,3,0.192,4,0.192,6,0.258,7,0.822,8,1.225,9,2.292,12,1.721,13,0.544,14,0.026,15,0.485,27,0.213,30,2.576,32,1.842,33,2.719,36,1.724,37,0.018,38,0.018,51,1.877,60,4.749,71,2.729,105,3.054,106,3.108,107,6.384,108,3.676,109,2.037,110,2.719,111,4.13,112,3.676,113,3.676,114,3.676,115,3.676,116,2.734,117,3.108,118,0.946,119,1.888]],["title/interfaces/ApiUser.html",[0,0.337,18,1.396]],["body/interfaces/ApiUser.html",[0,0.604,2,0.238,3,0.238,4,0.238,6,0.32,7,0.944,11,0.944,12,1.543,13,0.408,14,0.026,15,0.364,18,2.31,24,1.762,27,0.244,29,2.88,30,2.726,32,2.039,37,0.021,38,0.021,39,4.056,40,3.858,41,3.746,120,4.563]],["title/components/AppComponent.html",[121,0.761,122,1.303]],["body/components/AppComponent.html",[2,0.175,3,0.175,4,0.175,8,0.701,10,1.202,11,0.88,13,0.299,14,0.025,15,0.267,17,0.984,23,0.417,26,0.921,27,0.146,31,0.921,37,0.017,38,0.017,52,1.051,75,1.202,109,1.051,121,1.324,122,2.162,123,1.479,124,1.592,125,1.592,126,3.346,127,1.592,128,4.585,129,5.626,130,2.831,131,2.354,132,4.585,133,2.027,134,4.585,135,0.921,136,3.346,137,3.125,138,3.493,139,3.132,140,3.346,141,0.921,142,0.563,143,2.489,144,2.489,145,2.032,146,0.607,147,1.718,148,1.718,149,1.286,150,2.181,151,2.181,152,2.181,153,2.676,154,1.592,155,1.592,156,1.378,157,1.592,158,1.592,159,1.378,160,1.592,161,1.286,162,2.879,163,1.592,164,1.286,165,1.592,166,1.378,167,1.592,168,1.592,169,1.286,170,1.592,171,1.286,172,1.592,173,1.378,174,1.592,175,1.286,176,1.592,177,1.286,178,1.592,179,1.286,180,1.592,181,1.378,182,1.592,183,1.378,184,1.592,185,1.286,186,1.592,187,1.378,188,1.592,189,1.286,190,1.592,191,1.378,192,1.592]],["title/modules/AppModule.html",[193,1.741,194,2.264]],["body/modules/AppModule.html",[2,0.112,3,0.112,4,0.112,14,0.026,23,0.541,27,0.145,37,0.012,38,0.012,122,2.333,137,2.674,139,2.899,142,0.362,143,1.599,144,1.599,145,1.306,146,0.39,149,0.826,156,2.144,159,2.144,166,2.144,171,2.001,175,2.001,177,2.001,179,2.001,185,2.001,193,1.705,194,4.581,195,1.306,196,3.016,197,3.162,198,3.291,199,1.818,200,1.818,201,1.818,202,1.818,203,1.818,204,3.162,205,3.478,206,4.404,207,3.478,208,3.162,209,3.478,210,2.217,211,1.599,212,1.436,213,2.15,214,2.807,215,1.599,216,1.436,217,2.807,218,1.818,219,2.807,220,1.436,221,1.436,222,2.807,223,2.807,224,1.104,225,3.32,226,2.15,227,2.15,228,2.807,229,1.848,230,2.469,231,2.469,232,1.104,233,2.15,234,2.15,235,2.15,236,2.15,237,2.15,238,1.818,239,2.469,240,2.15,241,2.15,242,2.469,243,2.15,244,2.15,245,2.15,246,2.15,247,1.818,248,2.15,249,1.818,250,1.104,251,3.32,252,2.15,253,2.15,254,2.15,255,2.469,256,2.15,257,2.15,258,3.32,259,2.15,260,2.15,261,2.016,262,2.15,263,2.15,264,1.818,265,2.15,266,2.15,267,1.599,268,2.15,269,2.15,270,1.818,271,2.15,272,2.15,273,3.32,274,2.15,275,2.15,276,2.15,277,2.807,278,1.818,279,2.15,280,1.818,281,2.15,282,2.15,283,2.15,284,2.15,285,1.818,286,2.15,287,2.15,288,2.15,289,2.15,290,2.15,291,1.818,292,2.15,293,2.15,294,1.818,295,1.818]],["title/injectables/AuthGuard.html",[205,2.264,296,0.661]],["body/injectables/AuthGuard.html",[2,0.198,3,0.198,4,0.198,6,0.267,7,0.84,8,0.796,11,0.639,13,0.499,14,0.026,15,0.472,23,0.444,24,1.194,27,0.165,36,1.569,37,0.019,38,0.019,111,3.214,118,1.435,119,1.952,135,1.046,137,3.243,141,1.046,142,0.639,146,0.689,205,3.335,247,3.214,250,1.952,296,1.088,297,6.152,298,3.801,299,2.364,300,6.152,301,4.517,302,1.677,303,6.315,304,3.801,305,3.801,306,3.801,307,4.994,308,3.801,309,3.214,310,4.222,311,3.214,312,3.801,313,2.827,314,2.538,315,2.827,316,3.801,317,3.214,318,1.952]],["title/injectables/AuthService.html",[137,1.741,296,0.661]],["body/injectables/AuthService.html",[2,0.132,3,0.132,4,0.132,6,0.178,7,0.632,8,0.938,11,0.754,12,1.363,13,0.473,14,0.026,15,0.442,23,0.457,24,1.742,27,0.11,33,1.409,36,1.18,37,0.014,38,0.014,41,2.509,59,2.759,66,2.991,118,1.517,135,0.697,137,1.929,138,2.991,139,2.759,141,1.232,142,0.426,145,1.537,146,0.459,148,2.718,212,2.509,229,3.196,232,1.3,250,1.3,296,0.874,299,2.389,301,4.153,302,1.261,310,2.141,313,3.686,315,1.883,317,2.141,319,2.532,320,4.955,321,4.19,322,5.293,323,3.757,324,1.883,325,2.532,326,2.532,327,4.479,328,2.494,329,4.479,330,3.176,331,3.176,332,2.532,333,3.176,334,4.479,335,2.532,336,2.544,337,3.757,338,2.532,339,3.176,340,4.479,341,3.757,342,3.757,343,2.532,344,1.691,345,1.537,346,1.883,347,1.883,348,2.141,349,2.141,350,2.141,351,1.883,352,3.757,353,2.532,354,3.757,355,1.547,356,3.787,357,1.691,358,2.532,359,3.757,360,1.691,361,2.532,362,3.787,363,2.532,364,2.532,365,2.532,366,2.532,367,2.532,368,2.532,369,2.532,370,2.532,371,2.532,372,2.532,373,2.141,374,3.757,375,2.532,376,2.532,377,2.532,378,2.532,379,2.141,380,2.532,381,2.141,382,2.141,383,2.532,384,2.532,385,1.537]],["title/components/DashboardComponent.html",[121,0.761,161,1.303]],["body/components/DashboardComponent.html",[2,0.179,3,0.179,4,0.179,8,0.719,10,1.233,11,0.892,13,0.307,14,0.025,15,0.274,17,1.009,23,0.422,26,0.945,27,0.149,31,0.945,37,0.017,38,0.017,52,1.079,75,1.233,109,1.079,121,1.336,122,1.319,123,1.518,124,1.633,125,1.633,127,1.633,130,2.838,131,2.396,133,2.062,135,0.945,141,0.945,142,0.578,146,0.623,147,1.763,149,1.319,150,2.219,151,2.219,152,2.219,153,2.705,154,1.633,155,1.633,156,1.414,157,1.633,158,1.633,159,1.414,160,1.633,161,2.185,162,2.942,163,1.633,164,1.319,165,1.633,166,1.414,167,1.633,168,1.633,169,1.319,170,1.633,171,1.319,172,1.633,173,1.414,174,1.633,175,1.319,176,1.633,177,1.319,178,1.633,179,1.319,180,1.633,181,1.414,182,1.633,183,1.414,184,1.633,185,1.319,186,1.633,187,1.414,188,1.633,189,1.319,190,1.633,191,1.414,192,1.633,250,1.763,301,4.096,324,2.554,386,3.433,387,3.47,388,4.665,389,4.665,390,3.433,391,2.597]],["title/modules/DashboardModule.html",[193,1.741,204,2.058]],["body/modules/DashboardModule.html",[2,0.14,3,0.14,4,0.14,14,0.026,23,0.536,26,0.736,27,0.222,37,0.015,38,0.015,109,1.229,142,0.45,146,0.485,149,1.028,161,2.525,164,2.174,169,2.174,173,2.329,181,2.329,183,2.329,187,2.329,189,2.174,191,2.329,193,2.009,195,1.625,196,3.441,197,3.288,198,3.399,204,4.164,210,2.614,211,1.991,212,1.787,214,3.309,215,1.991,216,1.787,217,3.309,218,2.263,220,1.787,221,1.787,222,3.309,223,3.309,224,1.374,228,3.309,229,2.179,230,2.911,231,2.911,232,1.374,238,2.263,239,1.991,242,2.911,249,2.263,250,1.374,280,2.263,285,2.263,294,2.263,295,2.263,392,2.263,393,2.263,394,2.263,395,2.263,396,3.149,397,3.435,398,2.676,399,2.676,400,2.676,401,2.676,402,2.676,403,2.263,404,2.676,405,2.676,406,2.676,407,2.676,408,2.676,409,2.676,410,1.991,411,2.676,412,2.911,413,2.676,414,2.263,415,2.676]],["title/injectables/DashboardService.html",[296,0.661,396,1.887]],["body/injectables/DashboardService.html",[2,0.215,3,0.215,4,0.215,6,0.289,7,0.884,8,0.862,11,0.692,13,0.47,14,0.026,15,0.461,23,0.461,27,0.179,37,0.019,38,0.019,48,1.956,71,2.164,118,1.352,135,1.594,141,1.131,142,0.692,146,0.746,296,1.13,299,2.479,302,1.765,328,3.398,346,3.059,391,2.926,396,2.926,416,4.112,417,5.255,418,5.255,419,5.255,420,4.212,421,4.112,422,6.45,423,2.746,424,2.499,425,4.112,426,4.112]],["title/interfaces/DateObject.html",[0,0.337,427,2.264]],["body/interfaces/DateObject.html",[0,0.451,2,0.171,3,0.171,4,0.171,6,0.231,7,0.762,8,1.385,9,1.18,12,1.738,13,0.555,14,0.026,15,0.494,23,0.262,27,0.143,33,2.521,36,2.077,37,0.017,38,0.017,51,2.326,69,3.024,71,2.602,110,3.518,328,3.37,381,4.72,391,3.518,420,3.46,427,3.024,428,3.286,429,2.749,430,2.749,431,4.528,432,4.528,433,4.528,434,4.528,435,4.528,436,5.582,437,5.582,438,5.582,439,3.286,440,4.528,441,3.286,442,3.828,443,3.286,444,3.286,445,3.286,446,4.528,447,3.728,448,3.286,449,3.286,450,4.528]],["title/interfaces/Day.html",[0,0.337,51,1.303]],["body/interfaces/Day.html",[0,0.547,2,0.23,3,0.23,4,0.23,6,0.31,7,0.924,9,1.584,13,0.491,14,0.026,15,0.438,23,0.438,25,2.767,26,1.807,27,0.192,37,0.02,38,0.02,51,2.523,56,3.669,71,2.262,351,4.086,427,4.181,429,3.335,451,4.411,452,6.261,453,4.411,454,4.411,455,4.411,456,3.281]],["title/interfaces/EventElement.html",[0,0.337,457,2.866]],["body/interfaces/EventElement.html",[0,0.227,2,0.119,3,0.119,4,0.119,6,0.16,7,0.585,12,0.628,13,0.376,14,0.027,15,0.335,17,0.671,23,0.455,25,1.86,26,1.693,27,0.099,31,0.628,32,1.579,36,0.717,37,0.013,38,0.013,50,1.524,51,2.249,66,1.524,67,3.141,69,2.32,71,1.732,95,3.499,105,1.27,109,0.717,110,2.818,118,0.894,119,1.172,121,0.945,130,0.94,131,1.172,133,1.009,138,1.524,139,1.934,142,0.384,145,1.386,146,0.414,147,1.172,148,2.415,162,1.009,164,0.877,299,2.249,318,1.784,328,2.342,336,2.16,345,1.386,355,1.732,391,2.618,396,2.342,410,1.697,420,2.32,427,2.32,442,2.938,456,1.697,457,3.557,458,2.282,459,5.061,460,4.703,461,2.282,462,2.282,463,2.282,464,2.282,465,1.929,466,2.282,467,1.697,468,2.282,469,2.282,470,1.929,471,1.697,472,2.938,473,2.282,474,2.282,475,2.282,476,2.282,477,2.856,478,2.282,479,2.282,480,2.282,481,1.929,482,3.474,483,2.282,484,2.282,485,2.282,486,2.282,487,2.282,488,2.282,489,2.282,490,2.282,491,4.509,492,4.207,493,2.282,494,2.282,495,2.282,496,2.282,497,2.282,498,4.207,499,4.207,500,2.282,501,3.474,502,3.474,503,2.282,504,2.282,505,2.282,506,2.282,507,2.282,508,2.282,509,2.282,510,2.282,511,2.282,512,2.282,513,2.282,514,3.474,515,2.282,516,2.584,517,3.474,518,4.207,519,2.938,520,2.282,521,2.282,522,2.282,523,4.207,524,3.474,525,2.282,526,1.934,527,2.282,528,2.282,529,3.474,530,2.282,531,2.282,532,2.282,533,2.282,534,2.282,535,2.282,536,1.386,537,2.282,538,2.282,539,2.282]],["title/components/EventPopoverComponent.html",[121,0.761,169,1.303]],["body/components/EventPopoverComponent.html",[2,0.175,3,0.175,4,0.175,6,0.235,10,1.202,11,0.771,13,0.299,14,0.025,15,0.365,17,0.984,23,0.365,25,2.312,26,1.792,27,0.146,31,0.921,37,0.017,38,0.017,52,1.051,75,1.202,109,1.051,121,1.324,122,1.286,123,1.479,124,1.592,125,1.592,127,1.592,130,2.831,131,2.354,133,2.027,135,1.439,142,0.563,146,0.607,149,1.286,150,2.181,151,2.181,152,2.181,153,2.676,154,1.592,155,1.592,156,1.378,157,1.592,158,1.592,159,1.378,160,1.592,161,1.286,162,2.93,163,1.592,164,1.286,165,1.592,166,1.378,167,1.592,168,1.592,169,2.162,170,1.592,171,1.286,172,1.592,173,1.378,174,1.592,175,1.286,176,1.592,177,1.286,178,1.592,179,1.286,180,1.592,181,1.378,182,1.592,183,1.378,184,1.592,185,1.286,186,1.592,187,1.378,188,1.592,189,1.286,190,1.592,191,1.378,192,1.592,403,4.422,456,2.489,540,5.23,541,3.346,542,4.585,543,4.585,544,4.585,545,3.493,546,4.585,547,3.346,548,4.585]],["title/components/GroupSelectForm.html",[121,0.761,171,1.303]],["body/components/GroupSelectForm.html",[2,0.111,3,0.111,4,0.111,6,0.149,7,0.552,8,0.444,10,0.761,11,0.676,13,0.463,14,0.026,15,0.445,17,1.969,20,1.352,23,0.32,24,1.031,26,1.245,27,0.092,28,3.006,31,0.583,36,1.538,37,0.012,38,0.012,48,1.911,52,0.666,57,2.747,75,0.761,109,0.666,110,1.827,118,0.845,119,2.063,121,1.1,122,0.814,123,0.937,124,1.008,125,1.008,127,1.008,130,2.672,133,1.451,135,1.105,141,0.583,142,0.356,146,0.384,149,0.814,150,1.561,151,2.152,152,1.561,153,2.152,154,1.008,155,1.008,156,0.873,157,1.008,158,1.008,159,0.873,160,1.008,161,0.814,162,2.587,163,1.008,164,0.814,165,1.008,166,0.873,167,1.008,168,1.008,169,0.814,170,1.008,171,1.739,172,1.008,173,0.873,174,1.008,175,0.814,176,1.008,177,0.814,178,1.008,179,0.814,180,1.008,181,0.873,182,1.008,183,0.873,184,1.008,185,0.814,186,1.008,187,0.873,188,1.008,189,0.814,190,1.008,191,0.873,192,1.008,224,1.088,277,5.587,278,4.844,299,1.989,302,1.102,318,1.685,336,2.323,355,0.873,423,1.415,424,1.911,477,1.287,526,1.18,545,2.683,549,5.728,550,2.119,551,3.282,552,4.524,553,4.524,554,3.282,555,4.524,556,3.365,557,3.397,558,3.282,559,3.282,560,2.988,561,2.119,562,3.282,563,2.119,564,3.282,565,3.365,566,2.119,567,3.282,568,2.119,569,2.775,570,3.282,571,2.119,572,3.282,573,3.022,574,3.365,575,1.792,576,2.442,577,2.119,578,3.282,579,3.282,580,3.282,581,3.282,582,1.792,583,2.119,584,3.282,585,2.119,586,1.792,587,2.119,588,2.775,589,4.017,590,1.792,591,2.988,592,2.119,593,3.282]],["title/injectables/GroupService.html",[209,2.264,296,0.661]],["body/injectables/GroupService.html",[1,3.816,2,0.16,3,0.16,4,0.16,6,0.216,8,1.047,11,0.841,13,0.447,14,0.026,15,0.432,17,1.921,23,0.455,27,0.134,28,2.405,30,2.057,31,1.492,32,1.82,37,0.016,38,0.016,59,3.299,118,1.566,135,0.845,138,3.337,139,3.018,141,1.375,142,0.517,144,2.284,145,1.865,146,0.557,147,1.577,148,1.577,209,2.885,229,3.299,232,1.577,296,0.975,299,2.427,302,1.45,344,2.051,345,1.865,347,4.033,355,1.779,357,2.051,360,3.337,424,2.055,430,3.292,582,2.597,594,3.071,595,4.584,596,2.284,597,3.071,598,4.319,599,3.071,600,3.213,601,4.408,602,3.652,603,3.071,604,5.421,605,3.071,606,3.213,607,3.717,608,3.717,609,4.319,610,3.071]],["title/interfaces/Location.html",[0,0.337,75,1.217]],["body/interfaces/Location.html",[0,0.522,2,0.129,3,0.129,4,0.129,6,0.174,7,0.622,12,1.216,13,0.438,14,0.027,15,0.352,23,0.391,27,0.192,32,1.847,36,1.161,37,0.018,38,0.014,48,2.102,75,1.883,76,4.239,118,0.951,121,0.83,123,1.094,130,1.019,135,0.681,142,0.417,146,0.449,148,2.926,175,1.42,198,2.468,210,1.653,224,1.271,267,1.842,270,4.144,291,3.124,299,0.951,314,1.653,318,1.271,336,1.897,339,4.144,385,1.503,424,1.757,477,2.243,481,2.093,519,3.124,545,2.952,556,2.748,565,3.288,573,1.653,574,2.748,576,1.842,611,4.901,612,2.476,613,5.699,614,5.699,615,2.476,616,2.476,617,2.476,618,4.42,619,3.695,620,5.244,621,3.695,622,2.476,623,3.695,624,1.503,625,3.695,626,2.476,627,2.476,628,2.476,629,2.476,630,2.476,631,2.476,632,2.476,633,2.476,634,2.476,635,2.476,636,3.124,637,5.244,638,2.476,639,2.476,640,2.476,641,2.476,642,2.476,643,2.476,644,2.476,645,3.695,646,2.476,647,2.476,648,2.476,649,2.476,650,2.476,651,2.476,652,2.476,653,2.476,654,2.476,655,3.695,656,2.093,657,3.695,658,2.476,659,2.476,660,2.476,661,2.476,662,2.476,663,2.093,664,2.476,665,2.476,666,2.476,667,2.476,668,2.476,669,2.476,670,2.476,671,2.476,672,3.695,673,2.476,674,2.476,675,2.476,676,3.695,677,2.476,678,2.476,679,2.476,680,2.476]],["title/components/LoginComponent.html",[121,0.761,177,1.303]],["body/components/LoginComponent.html",[2,0.125,3,0.125,4,0.125,6,0.168,7,0.605,8,0.754,10,0.858,11,0.81,12,1.595,13,0.485,14,0.026,15,0.384,17,0.703,23,0.384,24,1.131,26,0.658,27,0.104,31,0.658,36,1.513,37,0.013,38,0.013,41,3.961,52,0.751,57,2.185,75,0.858,109,0.751,118,0.926,121,1.16,122,0.919,123,1.057,124,1.137,125,1.137,127,1.137,130,2.719,131,1.848,133,1.591,135,0.658,137,2.892,141,0.99,142,0.402,143,1.778,146,0.434,148,1.848,149,0.919,150,1.712,151,1.712,152,1.712,153,2.291,154,1.137,155,1.137,156,0.984,157,1.137,158,1.137,159,0.984,160,1.137,161,0.919,162,2.749,163,1.137,164,0.919,165,1.137,166,0.984,167,1.137,168,1.137,169,0.919,170,1.137,171,0.919,172,1.137,173,0.984,174,1.137,175,0.919,176,1.137,177,1.851,178,1.137,179,0.919,180,1.137,181,0.984,182,1.137,183,0.984,184,1.137,185,0.919,186,1.137,187,0.984,188,1.137,189,0.919,190,1.137,191,0.984,192,1.137,224,1.227,250,1.227,299,1.985,301,4.099,302,1.208,313,2.677,315,1.778,321,4.901,324,1.778,330,3.043,331,3.043,333,3.043,336,1.848,355,1.482,356,5.015,362,2.021,387,2.677,560,3.582,600,2.677,663,3.043,681,2.39,682,3.599,683,3.599,684,4.816,685,4.328,686,4.816,687,3.599,688,5.93,689,2.39,690,3.599,691,3.599,692,2.39,693,2.39,694,2.39,695,3.599,696,2.39,697,2.39,698,2.39,699,2.39,700,2.39,701,2.39,702,4.816]],["title/components/MemberFormComponent.html",[121,0.761,179,1.303]],["body/components/MemberFormComponent.html",[2,0.133,3,0.133,4,0.133,6,0.179,7,0.636,8,0.535,10,2.067,11,0.757,13,0.497,14,0.026,15,0.471,17,0.751,18,2.291,23,0.397,24,1.564,26,1.04,27,0.111,31,0.703,36,1.415,37,0.014,38,0.014,48,1.215,52,0.802,57,2.296,75,0.917,109,0.802,118,0.973,119,2.312,121,1.193,122,0.981,123,1.129,124,1.215,125,1.215,127,1.215,130,2.743,133,1.671,135,1.239,141,0.703,142,0.43,146,0.463,149,0.981,150,1.798,151,1.798,152,1.798,153,2.367,154,1.215,155,1.215,156,1.052,157,1.215,158,1.215,159,1.052,160,1.215,161,0.981,162,2.715,163,1.215,164,0.981,165,1.215,166,1.052,167,1.215,168,1.215,169,0.981,170,1.215,171,0.981,172,1.215,173,1.052,174,1.215,175,0.981,176,1.215,177,0.981,178,1.215,179,1.912,180,1.215,181,1.052,182,1.215,183,1.052,184,1.215,185,0.981,186,1.215,187,1.052,188,1.215,189,0.981,190,1.215,191,1.052,192,1.215,208,1.551,224,1.311,299,2.138,302,1.27,318,1.941,336,2.555,423,1.706,424,1.215,477,1.551,526,1.422,545,3.007,556,3.702,557,3.807,560,3.349,565,3.702,574,3.702,575,2.159,576,2.813,586,2.159,588,3.197,590,2.159,591,3.349,703,2.554,704,3.781,705,4.976,706,4.976,707,3.781,708,4.976,709,3.781,710,2.554,711,2.554,712,2.554,713,3.781,714,2.554,715,2.554,716,2.554,717,2.554,718,2.159,719,2.554,720,2.554,721,2.554,722,2.554,723,2.554,724,4.502,725,2.554,726,2.554,727,3.781,728,3.781]],["title/interfaces/Month.html",[0,0.337,447,2.264]],["body/interfaces/Month.html",[0,0.493,2,0.196,3,0.196,4,0.196,6,0.263,7,0.833,9,1.347,11,1.096,12,1.792,13,0.496,14,0.026,15,0.442,23,0.299,27,0.216,37,0.018,38,0.018,51,2.265,52,2.143,56,3.307,110,3.411,309,3.172,351,3.683,447,4.203,471,3.683,472,4.187,536,3.579,624,2.278,729,3.752,730,4.951,731,5.321,732,3.752,733,3.752,734,3.752,735,3.752,736,3.752,737,3.752,738,3.752,739,3.752,740,3.752,741,3.752,742,3.752,743,3.752,744,3.752,745,3.752]],["title/injectables/NgbDateNativeAdapter.html",[255,2.521,296,0.661]],["body/injectables/NgbDateNativeAdapter.html",[2,0.208,3,0.208,4,0.208,6,0.279,8,1.078,11,0.865,13,0.46,14,0.026,15,0.41,23,0.41,27,0.173,29,2.042,37,0.019,38,0.019,51,1.528,71,2.744,118,1.551,141,1.415,142,0.669,146,0.721,197,2.415,219,4.349,220,2.656,221,2.656,255,3.826,296,1.112,302,1.727,385,3.123,424,1.892,447,2.656,526,2.864,746,5.701,747,3.977,748,5.143,749,5.143,750,5.143,751,3.977,752,6.393,753,5.143,754,3.977,755,5.143,756,3.977,757,3.977,758,3.977,759,3.977,760,3.977,761,3.977]],["title/components/NotFoundComponent.html",[121,0.761,185,1.303]],["body/components/NotFoundComponent.html",[2,0.187,3,0.187,4,0.187,10,1.284,11,0.807,14,0.025,17,1.052,23,0.285,26,0.984,27,0.156,31,0.984,37,0.018,38,0.018,52,1.124,75,1.284,109,1.124,121,1.355,122,1.374,123,1.581,124,1.701,125,1.701,127,1.701,130,2.849,131,2.463,133,2.12,142,0.602,146,0.649,149,1.374,150,2.281,151,2.281,152,2.281,153,2.75,154,1.701,155,1.701,156,1.473,157,1.701,158,1.701,159,1.473,160,1.701,161,1.374,162,2.915,163,1.701,164,1.374,165,1.701,166,1.473,167,1.701,168,1.701,169,1.374,170,1.701,171,1.374,172,1.701,173,1.473,174,1.701,175,1.374,176,1.701,177,1.374,178,1.701,179,1.374,180,1.701,181,1.473,182,1.701,183,1.473,184,1.701,185,2.222,186,1.701,187,1.473,188,1.701,189,1.374,190,1.701,191,1.473,192,1.701,264,3.024,379,4.056,387,3.568,591,4.301,762,3.577,763,3.577,764,4.796,765,4.796,766,4.796]],["title/interfaces/PayloadModel.html",[0,0.337,767,2.866]],["body/interfaces/PayloadModel.html",[0,0.493,2,0.196,3,0.196,4,0.196,6,0.263,7,0.833,13,0.527,14,0.026,15,0.47,17,1.887,18,2.427,20,2.591,23,0.47,24,2.133,25,2.605,26,1.765,27,0.163,28,3.281,37,0.018,38,0.018,105,3.281,109,2.016,328,3.626,382,4.983,767,4.187,768,3.752,769,3.752,770,3.752,771,3.752,772,3.752]],["title/interfaces/Recurring.html",[0,0.337,93,2.521]],["body/interfaces/Recurring.html",[0,0.522,2,0.149,3,0.149,4,0.149,6,0.201,7,0.691,9,1.027,10,1.474,12,1.678,13,0.367,14,0.026,15,0.327,17,1.207,18,1.691,20,1.178,21,1.91,23,0.228,24,1.29,25,1.264,26,1.735,27,0.229,29,1.468,30,2.162,31,0.787,32,2.165,36,0.899,37,0.015,38,0.015,44,2.127,45,3.472,47,2.127,48,1.36,49,3.054,50,2.743,51,2.422,52,1.65,53,2.418,54,3.574,55,2.418,56,1.91,57,2.493,58,2.418,59,1.592,60,3.054,61,4.062,62,2.418,63,2.418,64,2.418,65,2.418,66,2.743,67,2.743,68,2.418,69,2.743,70,2.418,71,1.978,72,2.418,73,2.418,74,2.418,75,1.474,76,2.127,77,3.472,78,2.418,79,2.418,80,2.418,81,3.472,82,2.418,83,3.472,84,2.418,85,2.418,86,2.418,87,3.472,88,2.418,89,2.418,90,2.418,91,3.472,92,2.418,93,4.305,94,3.472,95,3.905,96,3.472,97,3.054,98,3.054,99,3.054,100,3.054,101,4.439,773,2.86,774,2.86]],["title/injectables/SearchFilterPipe.html",[261,2.058,296,0.661]],["body/injectables/SearchFilterPipe.html",[2,0.176,3,0.176,4,0.176,6,0.237,7,0.884,8,0.967,9,1.657,11,0.884,12,1.75,13,0.413,14,0.026,15,0.368,20,2.325,23,0.269,27,0.147,37,0.017,38,0.017,118,1.608,119,2.369,135,0.929,141,1.269,142,0.568,146,0.613,261,2.802,296,1.025,302,1.549,314,2.256,318,1.734,355,2.325,385,2.051,429,3.191,516,4.938,536,3.794,573,3.082,624,2.051,775,4.443,776,2.856,777,4.443,778,4.999,779,3.901,780,3.901,781,2.856,782,4.798,783,3.901,784,3.901,785,2.856,786,3.901,787,3.901,788,3.901,789,2.856,790,2.856,791,2.856,792,2.856,793,2.856,794,2.856,795,2.856,796,2.856]],["title/injectables/SearchFilterPipe-1.html",[261,1.719,296,0.552,526,1.576]],["body/injectables/SearchFilterPipe-1.html",[2,0.176,3,0.176,4,0.176,6,0.237,7,0.884,8,0.967,9,1.657,11,0.884,12,1.75,13,0.413,14,0.026,15,0.368,20,2.325,23,0.269,27,0.147,37,0.017,38,0.017,118,1.608,119,2.369,135,0.929,141,1.269,142,0.568,146,0.613,261,2.802,296,1.025,302,1.549,314,2.256,318,1.734,355,2.325,385,2.051,429,3.191,516,4.938,536,3.794,573,3.082,624,2.051,775,4.443,776,2.856,777,4.443,778,4.999,779,3.901,780,3.901,781,2.856,782,4.798,783,3.901,784,3.901,785,2.856,786,3.901,787,3.901,788,3.901,789,2.856,790,2.856,791,2.856,792,2.856,793,2.856,794,2.856,795,2.856,796,2.856]],["title/injectables/SessionService.html",[207,2.264,296,0.661]],["body/injectables/SessionService.html",[2,0.257,3,0.257,4,0.257,6,0.347,14,0.025,15,0.393,23,0.393,27,0.215,32,1.657,37,0.022,38,0.022,118,1.27,142,0.83,146,0.895,207,3.928,296,1.226,636,4.172,797,4.934,798,5.881,799,4.934,800,4.934,801,4.934]],["title/components/TodoListComponent.html",[121,0.761,189,1.303]],["body/components/TodoListComponent.html",[2,0.12,3,0.12,4,0.12,6,0.297,7,0.589,8,0.733,9,0.827,10,0.827,11,0.795,13,0.455,14,0.026,15,0.426,17,0.677,20,2.204,23,0.405,24,1.597,26,0.634,27,0.1,31,0.634,37,0.013,38,0.013,48,1.096,52,0.724,71,2.093,75,0.827,105,3.332,109,2.082,118,0.901,121,1.142,122,0.885,123,1.018,124,1.096,125,1.096,127,1.096,130,2.705,131,1.797,133,1.547,135,0.634,141,0.963,142,0.388,146,0.418,147,1.183,148,1.183,149,0.885,150,1.664,151,1.664,152,1.664,153,2.248,154,1.096,155,1.096,156,0.948,157,1.096,158,1.096,159,0.948,160,1.096,161,0.885,162,2.646,163,1.096,164,0.885,165,1.096,166,0.948,167,1.096,168,1.096,169,0.885,170,1.096,171,0.885,172,1.096,173,0.948,174,1.096,175,0.885,176,1.096,177,0.885,178,1.096,179,0.885,180,1.096,181,0.948,182,1.096,183,0.948,184,1.096,185,0.885,186,1.096,187,0.948,188,1.096,189,1.816,190,1.096,191,0.948,192,1.096,299,2.255,302,1.175,311,4.298,336,2.427,355,0.948,373,2.959,391,1.948,396,3.097,397,2.87,410,1.713,412,4.137,414,1.948,420,2.826,423,1.538,467,1.713,470,1.948,471,1.713,477,2.125,491,3.996,526,1.948,569,2.959,782,3.981,802,4.703,803,2.303,804,3.499,805,3.499,806,4.726,807,3.996,808,2.959,809,2.303,810,3.499,811,3.499,812,2.303,813,2.959,814,2.303,815,2.303,816,2.303,817,2.303,818,2.303,819,2.303,820,2.303,821,2.303,822,2.303,823,3.499,824,2.303,825,2.303,826,2.303,827,2.303,828,2.303,829,2.303,830,2.303,831,3.499]],["title/injectables/TodoListService.html",[296,0.661,397,2.058]],["body/injectables/TodoListService.html",[2,0.141,3,0.141,4,0.141,6,0.189,8,1.138,11,0.914,13,0.486,14,0.026,15,0.452,20,1.11,23,0.407,27,0.117,30,1.913,31,1.082,32,1.56,37,0.015,38,0.015,59,3.342,105,3.51,109,2.135,118,1.601,135,0.742,141,1.494,142,0.454,146,0.489,147,1.384,229,3.157,232,1.384,296,0.907,302,1.321,344,1.8,345,1.637,350,2.279,355,2.103,357,1.8,360,3.628,397,2.389,412,4.356,424,1.871,430,3.101,467,2.005,596,2.005,601,4.627,606,2.927,607,4.04,608,4.04,802,4.952,807,3.327,808,3.327,813,3.327,832,2.696,833,5.671,834,3.934,835,2.696,836,3.934,837,2.696,838,3.934,839,2.696,840,2.696,841,2.696,842,3.934,843,3.934,844,2.696,845,3.934,846,2.696,847,2.696,848,3.934,849,2.696]],["title/injectables/UserService.html",[208,2.058,296,0.661]],["body/injectables/UserService.html",[2,0.172,3,0.172,4,0.172,6,0.232,8,1.088,11,0.874,13,0.464,14,0.026,15,0.446,18,1.359,23,0.446,24,2.078,27,0.144,30,1.87,31,1.539,32,1.878,37,0.017,38,0.017,39,3.917,59,3.114,118,1.56,135,0.908,141,1.429,142,0.555,146,0.599,147,1.695,208,2.758,229,3.374,232,1.695,296,1.013,299,2.466,302,1.525,344,2.205,345,2.004,355,1.87,357,2.205,360,3.468,424,2.16,430,3.396,595,4.729,596,2.455,600,3.378,601,4.508,602,3.84,606,3.378,607,3.863,608,3.863,718,2.791,850,3.301,851,3.301,852,4.542,853,3.301,854,3.301,855,3.301]],["title/interfaces/Week.html",[0,0.337,52,1.065]],["body/interfaces/Week.html",[0,0.514,2,0.209,3,0.209,4,0.209,6,0.281,7,0.868,9,1.436,12,1.42,13,0.462,14,0.026,15,0.411,23,0.319,27,0.225,33,3.363,36,1.796,37,0.019,38,0.019,51,2.631,52,2.128,97,2.975,98,2.975,99,2.975,100,2.975,110,2.226,328,3.675,429,3.134,465,4.365,536,3.134,624,2.428,731,3.381,856,3.999,857,5.162,858,3.999,859,3.999,860,3.999,861,3.999,862,3.999,863,3.999]],["title/dependencies.html",[195,2.475,864,2.831]],["body/dependencies.html",[14,0.026,37,0.02,38,0.02,142,0.72,195,2.6,197,3.583,215,4.01,216,3.601,220,2.859,221,2.859,224,2.198,232,2.198,239,3.185,250,2.198,267,3.185,346,3.185,347,3.185,348,3.62,349,3.62,391,2.384,865,5.391,866,4.281,867,4.281,868,6.802,869,4.281,870,5.391,871,4.281,872,4.281,873,4.281,874,4.281,875,4.281,876,4.281,877,4.281,878,4.281,879,4.281,880,4.281,881,4.281,882,4.281,883,4.281,884,4.281,885,4.281]],["title/miscellaneous/enumerations.html",[886,1.891,887,3.447]],["body/miscellaneous/enumerations.html",[6,0.361,14,0.022,37,0.022,38,0.022,44,3.826,47,3.826,48,2.446,49,4.483,50,4.026,51,2.316,52,1.894,54,4.483,886,3.435,887,4.349,888,5.143]],["title/miscellaneous/functions.html",[116,3.032,886,1.891]],["body/miscellaneous/functions.html",[6,0.348,8,1.235,11,0.991,14,0.024,37,0.022,38,0.022,71,2.039,106,4.186,109,1.852,116,3.683,117,4.186,141,1.621,230,3.683,231,4.384,242,4.384,656,5.321,886,3.307,889,4.951,890,4.951,891,4.951,892,4.951]],["title/index.html",[6,0.199,67,1.891,430,1.719]],["body/index.html",[14,0.023,37,0.023,38,0.023,893,5.431,894,5.431]],["title/modules.html",[193,2.375]],["body/modules.html",[14,0.023,37,0.023,38,0.023,193,2.698,194,3.51,204,3.191,216,4.076,895,6.103,896,6.103,897,6.103]],["title/overview.html",[898,3.911]],["body/overview.html",[0,0.301,14,0.026,27,0.132,37,0.016,38,0.016,121,0.68,122,2.329,137,2.545,139,2.76,149,1.163,156,2.041,159,2.041,161,2.419,164,1.905,166,2.041,169,1.905,171,1.905,173,2.041,175,1.905,177,1.905,179,1.905,181,2.041,183,2.041,185,1.905,187,2.041,189,1.905,191,2.041,193,2.195,194,4.683,195,1.838,196,2.251,197,1.838,198,2.021,199,2.559,200,2.559,201,2.559,202,2.559,203,2.559,204,4.201,205,3.311,206,4.191,207,3.311,208,3.01,209,3.311,210,2.855,211,2.251,212,2.021,296,0.591,392,2.559,393,2.559,394,2.559,395,2.559,396,2.76,397,3.01,898,2.559,899,3.026,900,3.026,901,3.026,902,3.026]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":477,"title":{},"body":{"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"components/TodoListComponent.html":{}}}],["0.8.4",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["00000",{"_index":90,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["0101101",{"_index":96,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["1",{"_index":526,"title":{"injectables/SearchFilterPipe-1.html":{}},"body":{"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/TodoListComponent.html":{}}}],["1.0.0",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":529,"title":{},"body":{"interfaces/EventElement.html":{}}}],["13",{"_index":901,"title":{},"body":{"overview.html":{}}}],["15",{"_index":902,"title":{},"body":{"overview.html":{}}}],["18",{"_index":900,"title":{},"body":{"overview.html":{}}}],["2",{"_index":899,"title":{},"body":{"overview.html":{}}}],["2.0.3",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["24:00:00",{"_index":527,"title":{},"body":{"interfaces/EventElement.html":{}}}],["27.0.0",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["5.5.0",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":535,"title":{},"body":{"interfaces/EventElement.html":{}}}],["_",{"_index":635,"title":{},"body":{"interfaces/Location.html":{}}}],["access",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PayloadModel.html":{}}}],["accessor",{"_index":636,"title":{},"body":{"interfaces/Location.html":{},"injectables/SessionService.html":{}}}],["activ",{"_index":436,"title":{},"body":{"interfaces/DateObject.html":{}}}],["actual_compon",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["ad",{"_index":557,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["adapter.compon",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["adapter.component.t",{"_index":747,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["adapter.component.ts:11",{"_index":754,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["adapter.component.ts:7",{"_index":751,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["add",{"_index":569,"title":{},"body":{"components/GroupSelectForm.html":{},"components/TodoListComponent.html":{}}}],["addgroup",{"_index":554,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["addgroup(group",{"_index":567,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["addmemb",{"_index":707,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["addmember(us",{"_index":713,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["address",{"_index":76,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Location.html":{},"interfaces/Recurring.html":{}}}],["addtodo",{"_index":807,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["addtodo(todo",{"_index":836,"title":{},"body":{"injectables/TodoListService.html":{}}}],["agm/cor",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Location.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["aizasydujitlzddw3spdwzbzdw5ynts_i",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["allow",{"_index":311,"title":{},"body":{"injectables/AuthGuard.html":{},"components/TodoListComponent.html":{}}}],["amount",{"_index":530,"title":{},"body":{"interfaces/EventElement.html":{}}}],["angular",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/anim",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DashboardModule.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["api",{"_index":55,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["api_root",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["apicreateev",{"_index":45,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["apicreategroup",{"_index":1,"title":{"interfaces/ApiCreateGroup.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"injectables/GroupService.html":{}}}],["apicreateus",{"_index":39,"title":{"interfaces/ApiCreateUser.html":{}},"body":{"interfaces/ApiCreateUser.html":{},"interfaces/ApiUser.html":{},"injectables/UserService.html":{}}}],["apiev",{"_index":25,"title":{"interfaces/ApiEvent.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{}}}],["apigroup",{"_index":28,"title":{"interfaces/ApiGroup.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/PayloadModel.html":{}}}],["apikey",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["apitodo",{"_index":105,"title":{"interfaces/ApiTodo.html":{}},"body":{"interfaces/ApiTodo.html":{},"interfaces/EventElement.html":{},"interfaces/PayloadModel.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["apius",{"_index":18,"title":{"interfaces/ApiUser.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"components/MemberFormComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/UserService.html":{}}}],["app",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["app'},{'nam",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["app.compon",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.less",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["app/models/ev",{"_index":456,"title":{},"body":{"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{}}}],["app/models/todo",{"_index":467,"title":{},"body":{"interfaces/EventElement.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["app/services/cor",{"_index":464,"title":{},"body":{"interfaces/EventElement.html":{}}}],["app/services/interceptor",{"_index":399,"title":{},"body":{"modules/DashboardModule.html":{}}}],["app_rout",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":122,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["appmodul",{"_index":194,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appoint",{"_index":63,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["april",{"_index":739,"title":{},"body":{"interfaces/Month.html":{}}}],["around",{"_index":432,"title":{},"body":{"interfaces/DateObject.html":{}}}],["array",{"_index":536,"title":{},"body":{"interfaces/EventElement.html":{},"interfaces/Month.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"interfaces/Week.html":{}}}],["attempt",{"_index":600,"title":{},"body":{"injectables/GroupService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["august",{"_index":742,"title":{},"body":{"interfaces/Month.html":{}}}],["auth",{"_index":300,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["auth.servic",{"_index":308,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authent",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":205,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"overview.html":{}}}],["authresult",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.accesstoken",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.us",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.user.id",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservic",{"_index":137,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["autocomplet",{"_index":648,"title":{},"body":{"interfaces/Location.html":{}}}],["autocomplete.addlistener(\"place_chang",{"_index":650,"title":{},"body":{"interfaces/Location.html":{}}}],["autocomplete.getplac",{"_index":653,"title":{},"body":{"interfaces/Location.html":{}}}],["awesom",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["back",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"components/NotFoundComponent.html":{}}}],["basic",{"_index":74,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["befor",{"_index":82,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["belong",{"_index":21,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/Recurring.html":{}}}],["beta.2",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":531,"title":{},"body":{"interfaces/EventElement.html":{}}}],["binari",{"_index":94,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["blur",{"_index":670,"title":{},"body":{"interfaces/Location.html":{}}}],["boolean",{"_index":36,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["bootstrap",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/NgbDateNativeAdapter.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/datepick",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["bootstrap/ng",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/NgbDateNativeAdapter.html":{},"dependencies.html":{}}}],["box'},{'nam",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["box.compon",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["box/combo",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["box/search.pip",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["box/search.pipe.t",{"_index":776,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["box/search.pipe.ts:14",{"_index":785,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["box/search.pipe.ts:26",{"_index":781,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["brows",{"_index":897,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["bsdatepickermodul",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdatepickermodule.forroot",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["cach",{"_index":604,"title":{},"body":{"injectables/GroupService.html":{}}}],["cache.servic",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{}}}],["calcul",{"_index":514,"title":{},"body":{"interfaces/EventElement.html":{}}}],["calendar",{"_index":92,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["call",{"_index":639,"title":{},"body":{"interfaces/Location.html":{}}}],["callback",{"_index":641,"title":{},"body":{"interfaces/Location.html":{}}}],["canactiv",{"_index":303,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["certain",{"_index":111,"title":{},"body":{"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{}}}],["chang",{"_index":630,"title":{},"body":{"interfaces/Location.html":{}}}],["changed",{"_index":417,"title":{},"body":{"injectables/DashboardService.html":{}}}],["changedate(d",{"_index":419,"title":{},"body":{"injectables/DashboardService.html":{}}}],["check",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["choos",{"_index":562,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["class",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodul",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dashboardmodul",{"_index":392,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":393,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_export",{"_index":394,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_provid",{"_index":395,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["code",{"_index":89,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["collapsemodul",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["collapsemodule.forroot",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["color",{"_index":87,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["combo",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["comboboxcompon",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["compar",{"_index":783,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["complet",{"_index":820,"title":{},"body":{"components/TodoListComponent.html":{}}}],["compon",{"_index":121,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["component_templ",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["console.log(err",{"_index":701,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(r",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(userinfo",{"_index":697,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":624,"title":{},"body":{"interfaces/Location.html":{},"interfaces/Month.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"interfaces/Week.html":{}}}],["constants.modul",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":304,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(authservic",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(http",{"_index":596,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor(priv",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["constructor(publ",{"_index":315,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["constructor(rout",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(todoservic",{"_index":809,"title":{},"body":{"components/TodoListComponent.html":{}}}],["contain",{"_index":472,"title":{},"body":{"interfaces/EventElement.html":{},"interfaces/Month.html":{}}}],["continu",{"_index":795,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["controlvalueaccessor",{"_index":620,"title":{},"body":{"interfaces/Location.html":{}}}],["core",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"dependencies.html":{}}}],["corecach",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{}}}],["corecacheservic",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"overview.html":{}}}],["creat",{"_index":31,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["create(group",{"_index":598,"title":{},"body":{"injectables/GroupService.html":{}}}],["create(us",{"_index":852,"title":{},"body":{"injectables/UserService.html":{}}}],["creategroupcompon",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["credenti",{"_index":690,"title":{},"body":{"components/LoginComponent.html":{}}}],["criteria",{"_index":581,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["crud",{"_index":846,"title":{},"body":{"injectables/TodoListService.html":{}}}],["cur",{"_index":488,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr",{"_index":495,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr.format('dddd",{"_index":503,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr.format(date_format",{"_index":501,"title":{},"body":{"interfaces/EventElement.html":{}}}],["curr.utc",{"_index":506,"title":{},"body":{"interfaces/EventElement.html":{}}}],["current",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"interfaces/PayloadModel.html":{},"interfaces/Week.html":{}}}],["currentuserid",{"_index":798,"title":{},"body":{"injectables/SessionService.html":{}}}],["custom_input_control_value_accessor",{"_index":625,"title":{},"body":{"interfaces/Location.html":{}}}],["d",{"_index":505,"title":{},"body":{"interfaces/EventElement.html":{}}}],["daili",{"_index":470,"title":{},"body":{"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["dashboard",{"_index":387,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{}}}],["dashboard'},{'nam",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["dashboard.compon",{"_index":400,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.component.html",{"_index":389,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.less",{"_index":388,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.rout",{"_index":407,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.servic",{"_index":410,"title":{},"body":{"modules/DashboardModule.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["dashboard/dashboard.modul",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard_rout",{"_index":406,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboardcompon",{"_index":161,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":204,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardservic",{"_index":396,"title":{"injectables/DashboardService.html":{}},"body":{"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["date",{"_index":71,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/ApiTodo.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{},"miscellaneous/functions.html":{}}}],["date(date.year",{"_index":759,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.day",{"_index":761,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.getd",{"_index":758,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.getfullyear",{"_index":755,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.getmonth",{"_index":757,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date.model",{"_index":455,"title":{},"body":{"interfaces/Day.html":{}}}],["date.month",{"_index":760,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["date_format",{"_index":466,"title":{},"body":{"interfaces/EventElement.html":{}}}],["dateobject",{"_index":427,"title":{"interfaces/DateObject.html":{}},"body":{"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{}}}],["datetimepick",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["datevalu",{"_index":502,"title":{},"body":{"interfaces/EventElement.html":{}}}],["day",{"_index":51,"title":{"interfaces/Day.html":{}},"body":{"interfaces/ApiEvent.html":{},"interfaces/ApiTodo.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{},"miscellaneous/enumerations.html":{}}}],["day'",{"_index":452,"title":{},"body":{"interfaces/Day.html":{}}}],["day'},{'nam",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["day.component.html",{"_index":468,"title":{},"body":{"interfaces/EventElement.html":{}}}],["day.component.less",{"_index":469,"title":{},"body":{"interfaces/EventElement.html":{}}}],["day.model",{"_index":860,"title":{},"body":{"interfaces/Week.html":{}}}],["day/day.compon",{"_index":411,"title":{},"body":{"modules/DashboardModule.html":{}}}],["daycompon",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["decemb",{"_index":745,"title":{},"body":{"interfaces/Month.html":{}}}],["declar",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["decor",{"_index":575,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["default",{"_index":423,"title":{},"body":{"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"components/TodoListComponent.html":{}}}],["defin",{"_index":15,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["delet",{"_index":842,"title":{},"body":{"injectables/TodoListService.html":{}}}],["dep",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["depend",{"_index":195,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":9,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/Month.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"interfaces/Week.html":{}}}],["diff",{"_index":476,"title":{},"body":{"interfaces/EventElement.html":{}}}],["direct",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["disabl",{"_index":629,"title":{},"body":{"interfaces/Location.html":{}}}],["display",{"_index":110,"title":{},"body":{"interfaces/ApiTodo.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Month.html":{},"interfaces/Week.html":{}}}],["display1",{"_index":437,"title":{},"body":{"interfaces/DateObject.html":{}}}],["dldatetimepickerdatemodul",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["doctor",{"_index":62,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["dom",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["done",{"_index":107,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["dropdown",{"_index":578,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["durat",{"_index":515,"title":{},"body":{"interfaces/EventElement.html":{}}}],["dynam",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":309,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/Month.html":{}}}],["edit",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["editeventcompon",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["el",{"_index":586,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["el.children.length",{"_index":588,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["el.children[0].id",{"_index":590,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{}}}],["element",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["elementref",{"_index":574,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["email",{"_index":41,"title":{},"body":{"interfaces/ApiCreateUser.html":{},"interfaces/ApiUser.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["emitt",{"_index":564,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["empti",{"_index":559,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["end",{"_index":69,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["enddat",{"_index":73,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["endtim",{"_index":70,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["enum",{"_index":53,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["enumer",{"_index":887,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["err.json().messag",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["event",{"_index":26,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{}}}],["event'},{'nam",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["event.compon",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["event.titl",{"_index":548,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["event/edit",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["event/event.servic",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["eventel",{"_index":457,"title":{"interfaces/EventElement.html":{}},"body":{"interfaces/EventElement.html":{}}}],["eventemitt",{"_index":565,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["eventpopovercompon",{"_index":169,"title":{"components/EventPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["eventservic",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ex",{"_index":61,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["expiri",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"overview.html":{}}}],["extend",{"_index":29,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/Recurring.html":{}}}],["fals",{"_index":119,"title":{},"body":{"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["fb",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{}}}],["februari",{"_index":737,"title":{},"body":{"interfaces/Month.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["filter",{"_index":778,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["filter(item",{"_index":780,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["find",{"_index":572,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["fn",{"_index":676,"title":{},"body":{"interfaces/Location.html":{}}}],["font",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":57,"title":{},"body":{"interfaces/ApiEvent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Recurring.html":{}}}],["form'},{'nam",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["form.compon",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["form.component.html",{"_index":551,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.t",{"_index":550,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:14",{"_index":577,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:18",{"_index":561,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:22",{"_index":563,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:26",{"_index":566,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:31",{"_index":558,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:38",{"_index":571,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form.component.ts:53",{"_index":568,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["form/group",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"components/GroupSelectForm.html":{}}}],["format",{"_index":494,"title":{},"body":{"interfaces/EventElement.html":{}}}],["formbuild",{"_index":686,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":560,"title":{},"body":{"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{}}}],["formsmodul",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["forwardref",{"_index":619,"title":{},"body":{"interfaces/Location.html":{}}}],["found",{"_index":591,"title":{},"body":{"components/GroupSelectForm.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{}}}],["found'},{'nam",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["found.compon",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["found.component.html",{"_index":765,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.less",{"_index":764,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.t",{"_index":763,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/match",{"_index":580,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["found/not",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"components/NotFoundComponent.html":{}}}],["friday",{"_index":863,"title":{},"body":{"interfaces/Week.html":{}}}],["frommodel",{"_index":748,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["frommodel(d",{"_index":750,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["front",{"_index":433,"title":{},"body":{"interfaces/DateObject.html":{}}}],["function",{"_index":116,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/ApiTodo.html":{},"miscellaneous/functions.html":{}}}],["futur",{"_index":438,"title":{},"body":{"interfaces/DateObject.html":{}}}],["geoloc",{"_index":662,"title":{},"body":{"interfaces/Location.html":{}}}],["get",{"_index":430,"title":{"index.html":{}},"body":{"interfaces/DateObject.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["get(id",{"_index":602,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["getal",{"_index":595,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":799,"title":{},"body":{"injectables/SessionService.html":{}}}],["getduration(v",{"_index":520,"title":{},"body":{"interfaces/EventElement.html":{}}}],["getstart(v",{"_index":532,"title":{},"body":{"interfaces/EventElement.html":{}}}],["gettodo",{"_index":833,"title":{},"body":{"injectables/TodoListService.html":{}}}],["gettodo(id",{"_index":838,"title":{},"body":{"injectables/TodoListService.html":{}}}],["given",{"_index":491,"title":{},"body":{"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["go",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["googl",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["google.maps.places.autocomplete(this.search.nativeel",{"_index":649,"title":{},"body":{"interfaces/Location.html":{}}}],["google.maps.places.placeresult",{"_index":652,"title":{},"body":{"interfaces/Location.html":{}}}],["googleapi",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["googlemap",{"_index":622,"title":{},"body":{"interfaces/Location.html":{}}}],["granular",{"_index":85,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["group",{"_index":17,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{}}}],["group'",{"_index":570,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["group'},{'nam",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["group.compon",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["group.nam",{"_index":593,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["group/creat",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["group/group",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["group/group.servic",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["groupdropdown",{"_index":552,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupform",{"_index":585,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupid",{"_index":86,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["groupnotfound",{"_index":553,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupsearch",{"_index":555,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["groupselectform",{"_index":171,"title":{"components/GroupSelectForm.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["groupservic",{"_index":209,"title":{"injectables/GroupService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GroupService.html":{},"overview.html":{}}}],["guard",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{}}}],["guard.t",{"_index":298,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.ts:10",{"_index":307,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.ts:11",{"_index":306,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.ts:9",{"_index":305,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hash",{"_index":88,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["header'},{'nam",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["header/header.compon",{"_index":405,"title":{},"body":{"modules/DashboardModule.html":{}}}],["headercompon",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["height",{"_index":459,"title":{},"body":{"interfaces/EventElement.html":{}}}],["hemc",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["hidden",{"_index":91,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["hold",{"_index":857,"title":{},"body":{"interfaces/Week.html":{}}}],["home",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["hour",{"_index":50,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["html",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["http",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DashboardModule.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["httpfactori",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"miscellaneous/functions.html":{}}}],["httpfactory(xhrbackend",{"_index":892,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpmodul",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["id",{"_index":30,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/GroupService.html":{},"interfaces/Recurring.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["implement",{"_index":314,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/Location.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["import",{"_index":23,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["includ",{"_index":638,"title":{},"body":{"interfaces/Location.html":{}}}],["incorrect",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["inform",{"_index":473,"title":{},"body":{"interfaces/EventElement.html":{}}}],["init",{"_index":478,"title":{},"body":{"interfaces/EventElement.html":{}}}],["inject",{"_index":296,"title":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/GroupService.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"injectables/GroupService.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["innervalu",{"_index":631,"title":{},"body":{"interfaces/Location.html":{}}}],["input",{"_index":545,"title":{},"body":{"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["input'},{'nam",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["input('ev",{"_index":547,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["input('group",{"_index":584,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["input('memb",{"_index":720,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["input('us",{"_index":722,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["input.compon",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["input.component.t",{"_index":612,"title":{},"body":{"interfaces/Location.html":{}}}],["input.component.ts:21",{"_index":615,"title":{},"body":{"interfaces/Location.html":{}}}],["input.component.ts:22",{"_index":616,"title":{},"body":{"interfaces/Location.html":{}}}],["input.component.ts:23",{"_index":617,"title":{},"body":{"interfaces/Location.html":{}}}],["input/loc",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Location.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"interfaces/Location.html":{},"interfaces/Month.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"interfaces/Location.html":{},"interfaces/Month.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{},"overview.html":{}}}],["invit",{"_index":79,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["isauthent",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["isdis",{"_index":680,"title":{},"body":{"interfaces/Location.html":{}}}],["item",{"_index":782,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{}}}],["item[properti",{"_index":794,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["item[property].tostring().tolowercase().includes(tocompar",{"_index":796,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["items.filter((item",{"_index":793,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["januari",{"_index":736,"title":{},"body":{"interfaces/Month.html":{}}}],["js",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["juli",{"_index":741,"title":{},"body":{"interfaces/Month.html":{}}}],["june",{"_index":740,"title":{},"body":{"interfaces/Month.html":{}}}],["last",{"_index":450,"title":{},"body":{"interfaces/DateObject.html":{}}}],["latitud",{"_index":613,"title":{},"body":{"interfaces/Location.html":{}}}],["legend",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["librari",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["list",{"_index":20,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/GroupSelectForm.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["list'},{'nam",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["list.compon",{"_index":413,"title":{},"body":{"modules/DashboardModule.html":{}}}],["list.component.html",{"_index":805,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.less",{"_index":804,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.t",{"_index":803,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:17",{"_index":816,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:18",{"_index":815,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:20",{"_index":810,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:33",{"_index":812,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.component.ts:43",{"_index":814,"title":{},"body":{"components/TodoListComponent.html":{}}}],["list.servic",{"_index":414,"title":{},"body":{"modules/DashboardModule.html":{},"components/TodoListComponent.html":{}}}],["list.service.t",{"_index":832,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:11",{"_index":835,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:18",{"_index":837,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:28",{"_index":841,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:38",{"_index":844,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:48",{"_index":839,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list.service.ts:57",{"_index":840,"title":{},"body":{"injectables/TodoListService.html":{}}}],["list/todo",{"_index":412,"title":{},"body":{"modules/DashboardModule.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["liter",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["load",{"_index":475,"title":{},"body":{"interfaces/EventElement.html":{}}}],["localstorag",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('access_token",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('user_id",{"_index":801,"title":{},"body":{"injectables/SessionService.html":{}}}],["localstorage.removeitem('access_token",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('user_id",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('access_token",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('user_id",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":75,"title":{"interfaces/Location.html":{}},"body":{"interfaces/ApiEvent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{}}}],["locationinput",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["log",{"_index":313,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["login(userinfo",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login.component.html",{"_index":683,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.less",{"_index":682,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["logincompon",{"_index":177,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["loginform",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["longitud",{"_index":614,"title":{},"body":{"interfaces/Location.html":{}}}],["look",{"_index":440,"title":{},"body":{"interfaces/DateObject.html":{}}}],["made",{"_index":64,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["manag",{"_index":894,"title":{},"body":{"index.html":{}}}],["mani",{"_index":80,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["map",{"_index":95,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["map(r",{"_index":607,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["mapapiload",{"_index":632,"title":{},"body":{"interfaces/Location.html":{}}}],["mapsapiload",{"_index":623,"title":{},"body":{"interfaces/Location.html":{}}}],["march",{"_index":738,"title":{},"body":{"interfaces/Month.html":{}}}],["match",{"_index":38,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["meet",{"_index":893,"title":{},"body":{"index.html":{}}}],["member",{"_index":10,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{}}}],["member'",{"_index":78,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["member.component.html",{"_index":704,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["memberdropdown",{"_index":705,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["memberform",{"_index":721,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["memberformcompon",{"_index":179,"title":{"components/MemberFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["membernotfound",{"_index":706,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["membersearch",{"_index":708,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["messag",{"_index":579,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["metadata",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["method",{"_index":302,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["minicalendar'},{'nam",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["minicalendarcompon",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["minut",{"_index":49,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["minutes/hours/days/week",{"_index":81,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["miscellan",{"_index":886,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mmmm",{"_index":504,"title":{},"body":{"interfaces/EventElement.html":{}}}],["mnm",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["modalmodul",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["model",{"_index":465,"title":{},"body":{"interfaces/EventElement.html":{},"interfaces/Week.html":{}}}],["models/group",{"_index":582,"title":{},"body":{"components/GroupSelectForm.html":{},"injectables/GroupService.html":{}}}],["models/us",{"_index":718,"title":{},"body":{"components/MemberFormComponent.html":{},"injectables/UserService.html":{}}}],["modul",{"_index":193,"title":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["moduleid",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["moment",{"_index":391,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{},"dependencies.html":{}}}],["moment().format(date_format",{"_index":500,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment(v.endd",{"_index":521,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment(v.startd",{"_index":523,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment.duration(end.clone().diff(start)).ashour",{"_index":528,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment.duration(end.diff(start)).asday",{"_index":525,"title":{},"body":{"interfaces/EventElement.html":{}}}],["moment.mo",{"_index":420,"title":{},"body":{"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"components/TodoListComponent.html":{}}}],["monday",{"_index":97,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["month",{"_index":447,"title":{"interfaces/Month.html":{}},"body":{"interfaces/DateObject.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{}}}],["month'",{"_index":730,"title":{},"body":{"interfaces/Month.html":{}}}],["month'},{'nam",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["month/month.compon",{"_index":401,"title":{},"body":{"modules/DashboardModule.html":{}}}],["monthcompon",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["mostli",{"_index":434,"title":{},"body":{"interfaces/DateObject.html":{}}}],["multi",{"_index":627,"title":{},"body":{"interfaces/Location.html":{}}}],["name",{"_index":11,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["navig",{"_index":663,"title":{},"body":{"interfaces/Location.html":{},"components/LoginComponent.html":{}}}],["navigator.geolocation.getcurrentposition((posit",{"_index":664,"title":{},"body":{"interfaces/Location.html":{}}}],["new",{"_index":424,"title":{},"body":{"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["newgroup",{"_index":609,"title":{},"body":{"injectables/GroupService.html":{}}}],["newtodo",{"_index":806,"title":{},"body":{"components/TodoListComponent.html":{}}}],["next",{"_index":446,"title":{},"body":{"interfaces/DateObject.html":{}}}],["ng",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"injectables/NgbDateNativeAdapter.html":{},"dependencies.html":{}}}],["ng_value_accessor",{"_index":621,"title":{},"body":{"interfaces/Location.html":{}}}],["ngbdateadapt",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"injectables/NgbDateNativeAdapter.html":{}}}],["ngbdatenativeadapt",{"_index":255,"title":{"injectables/NgbDateNativeAdapter.html":{}},"body":{"modules/AppModule.html":{},"injectables/NgbDateNativeAdapter.html":{}}}],["ngbdatestruct",{"_index":752,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["ngbmodul",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["ngbmodule.forroot",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["ngmodul",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["ngoninit",{"_index":481,"title":{},"body":{"interfaces/EventElement.html":{},"interfaces/Location.html":{}}}],["ngx",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":618,"title":{},"body":{"interfaces/Location.html":{}}}],["note",{"_index":77,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["notfoundcompon",{"_index":185,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["notif",{"_index":83,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["notification'",{"_index":47,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["notificationgranular",{"_index":54,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["notificationvalu",{"_index":84,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["novemb",{"_index":744,"title":{},"body":{"interfaces/Month.html":{}}}],["null",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Location.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["number",{"_index":32,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"interfaces/Recurring.html":{},"injectables/SessionService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["object",{"_index":429,"title":{},"body":{"interfaces/DateObject.html":{},"interfaces/Day.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"interfaces/Week.html":{}}}],["observ",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable.throw(err",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["onblur",{"_index":671,"title":{},"body":{"interfaces/Location.html":{}}}],["onchang",{"_index":640,"title":{},"body":{"interfaces/Location.html":{}}}],["onchangecallback",{"_index":634,"title":{},"body":{"interfaces/Location.html":{}}}],["ontouchedcallback",{"_index":633,"title":{},"body":{"interfaces/Location.html":{}}}],["option",{"_index":8,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":518,"title":{},"body":{"interfaces/EventElement.html":{}}}],["our",{"_index":537,"title":{},"body":{"interfaces/EventElement.html":{}}}],["out",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["output",{"_index":556,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["overview",{"_index":898,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownerid",{"_index":65,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["packag",{"_index":864,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":766,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["param",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["paramet",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["pars",{"_index":490,"title":{},"body":{"interfaces/EventElement.html":{}}}],["parseday(curr",{"_index":496,"title":{},"body":{"interfaces/EventElement.html":{}}}],["pass",{"_index":431,"title":{},"body":{"interfaces/DateObject.html":{}}}],["password",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["past",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DateObject.html":{}}}],["payloadmodel",{"_index":767,"title":{"interfaces/PayloadModel.html":{}},"body":{"interfaces/PayloadModel.html":{}}}],["pipe",{"_index":787,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["pipetransform",{"_index":788,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["pixel",{"_index":517,"title":{},"body":{"interfaces/EventElement.html":{}}}],["place",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Location.html":{}}}],["place.formatted_address",{"_index":657,"title":{},"body":{"interfaces/Location.html":{}}}],["place.geometri",{"_index":655,"title":{},"body":{"interfaces/Location.html":{}}}],["place.geometry.location.lat",{"_index":658,"title":{},"body":{"interfaces/Location.html":{}}}],["place.geometry.location.lng",{"_index":659,"title":{},"body":{"interfaces/Location.html":{}}}],["popov",{"_index":542,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover'},{'nam",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["popover.compon",{"_index":404,"title":{},"body":{"modules/DashboardModule.html":{}}}],["popover.component.html",{"_index":544,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover.component.less",{"_index":543,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover.component.t",{"_index":541,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover.component.ts:11",{"_index":546,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["popover/ev",{"_index":403,"title":{},"body":{"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{}}}],["popovermodul",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["popovermodule.forroot",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["position.coords.latitud",{"_index":666,"title":{},"body":{"interfaces/Location.html":{}}}],["position.coords.longitud",{"_index":668,"title":{},"body":{"interfaces/Location.html":{}}}],["privat",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/TodoListComponent.html":{}}}],["promis",{"_index":601,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":493,"title":{},"body":{"interfaces/EventElement.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"interfaces/Week.html":{}}}],["provid",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"interfaces/Location.html":{},"overview.html":{}}}],["public",{"_index":299,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/TodoListComponent.html":{},"injectables/UserService.html":{}}}],["pure",{"_index":789,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["purpos",{"_index":435,"title":{},"body":{"interfaces/DateObject.html":{}}}],["put",{"_index":492,"title":{},"body":{"interfaces/EventElement.html":{}}}],["re",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["reactiveformsmodul",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["record",{"_index":817,"title":{},"body":{"components/TodoListComponent.html":{}}}],["recur",{"_index":93,"title":{"interfaces/Recurring.html":{}},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["registeronchange(fn",{"_index":674,"title":{},"body":{"interfaces/Location.html":{}}}],["registerontouched(fn",{"_index":677,"title":{},"body":{"interfaces/Location.html":{}}}],["remov",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"components/TodoListComponent.html":{}}}],["removetodo",{"_index":808,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["removetodo(todo",{"_index":813,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["repeatweekli",{"_index":101,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["replaysubject",{"_index":422,"title":{},"body":{"injectables/DashboardService.html":{}}}],["requestopt",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"miscellaneous/functions.html":{}}}],["requir",{"_index":702,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.json",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["reset",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["result",{"_index":37,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":118,"title":{},"body":{"interfaces/ApiTodo.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"injectables/NgbDateNativeAdapter.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["rout",{"_index":310,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["router",{"_index":301,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["routermodul",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["routermodule.forchild(dashboard_rout",{"_index":415,"title":{},"body":{"modules/DashboardModule.html":{}}}],["routermodule.forroot(app_rout",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["rxj",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DashboardService.html":{},"dependencies.html":{}}}],["saturday",{"_index":100,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["save",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Day.html":{},"interfaces/Month.html":{}}}],["search",{"_index":573,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["searchfilterpip",{"_index":261,"title":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}},"body":{"modules/AppModule.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["searchfilterpipe.filter(item",{"_index":790,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["see",{"_index":312,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["select",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"components/GroupSelectForm.html":{}}}],["select'},{'nam",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["selector",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["send",{"_index":58,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["septemb",{"_index":743,"title":{},"body":{"interfaces/Month.html":{}}}],["server",{"_index":59,"title":{},"body":{"interfaces/ApiEvent.html":{},"injectables/AuthService.html":{},"injectables/GroupService.html":{},"interfaces/Recurring.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["servic",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TodoListService.html":{}}}],["services/auth",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["services/auth.servic",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["services/cor",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GroupService.html":{}}}],["services/interceptor",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["services/session.servic",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionservic",{"_index":207,"title":{"injectables/SessionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/SessionService.html":{},"overview.html":{}}}],["set",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Location.html":{}}}],["setcurrentposit",{"_index":661,"title":{},"body":{"interfaces/Location.html":{}}}],["setdisabledstate?(isdis",{"_index":678,"title":{},"body":{"interfaces/Location.html":{}}}],["sethour",{"_index":538,"title":{},"body":{"interfaces/EventElement.html":{}}}],["setsess",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["setsession(authresult",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/combo",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/datepick",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/loc",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/not",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["show",{"_index":34,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{}}}],["showev",{"_index":35,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{}}}],["sidebar'},{'nam",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["sidebar/minicalendar/minicalendar.compon",{"_index":409,"title":{},"body":{"modules/DashboardModule.html":{}}}],["sidebar/sidebar.compon",{"_index":408,"title":{},"body":{"modules/DashboardModule.html":{}}}],["sidebarcompon",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"injectables/SessionService.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["src/.../event.t",{"_index":888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../interceptor.t",{"_index":889,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../todo.t",{"_index":890,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.t",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/group/group",{"_index":549,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["src/app/group/group.service.t",{"_index":594,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:17",{"_index":603,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:26",{"_index":605,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:36",{"_index":599,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/group/group.service.ts:9",{"_index":597,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/login/login.component.t",{"_index":681,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:16",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:18",{"_index":692,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:31",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/models/event.t",{"_index":44,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/event.ts:82",{"_index":46,"title":{},"body":{"interfaces/ApiEvent.html":{}}}],["src/app/models/event.ts:90",{"_index":773,"title":{},"body":{"interfaces/Recurring.html":{}}}],["src/app/models/event.ts:91",{"_index":774,"title":{},"body":{"interfaces/Recurring.html":{}}}],["src/app/models/group.t",{"_index":5,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:12",{"_index":16,"title":{},"body":{"interfaces/ApiCreateGroup.html":{}}}],["src/app/models/group.ts:16",{"_index":19,"title":{},"body":{"interfaces/ApiCreateGroup.html":{}}}],["src/app/models/group.ts:23",{"_index":103,"title":{},"body":{"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:27",{"_index":102,"title":{},"body":{"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:31",{"_index":104,"title":{},"body":{"interfaces/ApiGroup.html":{}}}],["src/app/models/group.ts:8",{"_index":22,"title":{},"body":{"interfaces/ApiCreateGroup.html":{}}}],["src/app/models/payload.t",{"_index":768,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:10",{"_index":772,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:14",{"_index":770,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:18",{"_index":769,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/payload.ts:22",{"_index":771,"title":{},"body":{"interfaces/PayloadModel.html":{}}}],["src/app/models/todo.t",{"_index":106,"title":{},"body":{"interfaces/ApiTodo.html":{},"miscellaneous/functions.html":{}}}],["src/app/models/todo.ts:13",{"_index":112,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:17",{"_index":108,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:21",{"_index":113,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:5",{"_index":114,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/todo.ts:9",{"_index":115,"title":{},"body":{"interfaces/ApiTodo.html":{}}}],["src/app/models/user.t",{"_index":40,"title":{},"body":{"interfaces/ApiCreateUser.html":{},"interfaces/ApiUser.html":{}}}],["src/app/models/user.ts:10",{"_index":43,"title":{},"body":{"interfaces/ApiCreateUser.html":{}}}],["src/app/models/user.ts:17",{"_index":120,"title":{},"body":{"interfaces/ApiUser.html":{}}}],["src/app/models/user.ts:6",{"_index":42,"title":{},"body":{"interfaces/ApiCreateUser.html":{}}}],["src/app/services/auth",{"_index":297,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/services/auth.service.t",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:14",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:26",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:41",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:51",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:62",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/interceptor.t",{"_index":891,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/services/session.service.t",{"_index":797,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/services/session.service.ts:6",{"_index":800,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/shared/combo",{"_index":775,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["src/app/shared/datepick",{"_index":746,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["src/app/shared/loc",{"_index":611,"title":{},"body":{"interfaces/Location.html":{}}}],["src/app/shared/not",{"_index":762,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["src/app/user/member/member.component.t",{"_index":703,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:12",{"_index":716,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:13",{"_index":710,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:14",{"_index":711,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:15",{"_index":712,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:17",{"_index":709,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:21",{"_index":715,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/member/member.component.ts:32",{"_index":714,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["src/app/user/user.service.t",{"_index":850,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:14",{"_index":855,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:24",{"_index":854,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:34",{"_index":853,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/user.service.ts:8",{"_index":851,"title":{},"body":{"injectables/UserService.html":{}}}],["src/dashboard/dashboard.component.t",{"_index":386,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/dashboard/dashboard.component.ts:11",{"_index":390,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/dashboard/dashboard.module.t",{"_index":398,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/dashboard/dashboard.service.t",{"_index":416,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:13",{"_index":421,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/dashboard.service.ts:7",{"_index":418,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/dashboard/day/day.component.t",{"_index":458,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/day/day.component.ts:125",{"_index":463,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/day/day.component.ts:126",{"_index":462,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/day/day.component.ts:127",{"_index":461,"title":{},"body":{"interfaces/EventElement.html":{}}}],["src/dashboard/ev",{"_index":540,"title":{},"body":{"components/EventPopoverComponent.html":{}}}],["src/dashboard/models/date.model.t",{"_index":428,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:10",{"_index":441,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:12",{"_index":443,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:13",{"_index":444,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:15",{"_index":445,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:17",{"_index":449,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:19",{"_index":439,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/date.model.ts:8",{"_index":448,"title":{},"body":{"interfaces/DateObject.html":{}}}],["src/dashboard/models/day.model.t",{"_index":451,"title":{},"body":{"interfaces/Day.html":{}}}],["src/dashboard/models/day.model.ts:8",{"_index":453,"title":{},"body":{"interfaces/Day.html":{}}}],["src/dashboard/models/day.model.ts:9",{"_index":454,"title":{},"body":{"interfaces/Day.html":{}}}],["src/dashboard/models/month.model.t",{"_index":729,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/month.model.ts:10",{"_index":734,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/month.model.ts:12",{"_index":733,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/month.model.ts:8",{"_index":732,"title":{},"body":{"interfaces/Month.html":{}}}],["src/dashboard/models/week.model.t",{"_index":856,"title":{},"body":{"interfaces/Week.html":{}}}],["src/dashboard/models/week.model.ts:10",{"_index":858,"title":{},"body":{"interfaces/Week.html":{}}}],["src/dashboard/models/week.model.ts:8",{"_index":859,"title":{},"body":{"interfaces/Week.html":{}}}],["src/dashboard/todo",{"_index":802,"title":{},"body":{"components/TodoListComponent.html":{},"injectables/TodoListService.html":{}}}],["start",{"_index":67,"title":{"index.html":{}},"body":{"interfaces/ApiEvent.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["start.hour",{"_index":533,"title":{},"body":{"interfaces/EventElement.html":{}}}],["start.minut",{"_index":534,"title":{},"body":{"interfaces/EventElement.html":{}}}],["startdat",{"_index":72,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["starttim",{"_index":68,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{}}}],["static",{"_index":777,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"injectables/AuthService.html":{},"interfaces/DateObject.html":{},"interfaces/EventElement.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"interfaces/Month.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"interfaces/Week.html":{}}}],["styleurl",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["subscrib",{"_index":480,"title":{},"body":{"interfaces/EventElement.html":{}}}],["success",{"_index":691,"title":{},"body":{"components/LoginComponent.html":{}}}],["sunday",{"_index":861,"title":{},"body":{"interfaces/Week.html":{}}}],["support",{"_index":895,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":896,"title":{},"body":{"modules.html":{}}}],["task",{"_index":818,"title":{},"body":{"components/TodoListComponent.html":{}}}],["templat",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["templateurl",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["term",{"_index":516,"title":{},"body":{"interfaces/EventElement.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["term'",{"_index":786,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["term.tolowercas",{"_index":792,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["they'd",{"_index":819,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.added.emit(us",{"_index":726,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.auth.isauthent",{"_index":316,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.authservice.login(userinfo).subscribe(r",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.change.emit(this.loc",{"_index":644,"title":{},"body":{"interfaces/Location.html":{}}}],["this.changedate(mo",{"_index":425,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.corecache.addgroup(newgroup",{"_index":610,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.corecache.currentus",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.corecache.getdatemap().then(map",{"_index":484,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.corecache.onauth",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.curr",{"_index":487,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.current.next(d",{"_index":426,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.dashboardservice.current.subscribe(cur",{"_index":486,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.dashboardservice.current.subscribe(d",{"_index":821,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.dat",{"_index":822,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.day",{"_index":507,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.day.events.foreach(ev",{"_index":510,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.diff",{"_index":498,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.dis",{"_index":679,"title":{},"body":{"interfaces/Location.html":{}}}],["this.eventel",{"_index":497,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.eventelements.push",{"_index":511,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.fb.group",{"_index":694,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getduration(ev",{"_index":513,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.getstart(ev",{"_index":512,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.groupdropdown.nativeel",{"_index":587,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["this.groupform.patchvalue(group",{"_index":592,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["this.groupnotfound",{"_index":589,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["this.height",{"_index":499,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.hours.push(12",{"_index":539,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.http.delete(api_root",{"_index":847,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.http.get(api_root",{"_index":606,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["this.http.post(api_root",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["this.http.put(api_root",{"_index":849,"title":{},"body":{"injectables/TodoListService.html":{}}}],["this.innervalu",{"_index":637,"title":{},"body":{"interfaces/Location.html":{}}}],["this.isauthent",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.load",{"_index":482,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.loc",{"_index":645,"title":{},"body":{"interfaces/Location.html":{}}}],["this.location.latitud",{"_index":665,"title":{},"body":{"interfaces/Location.html":{}}}],["this.location.longitud",{"_index":667,"title":{},"body":{"interfaces/Location.html":{}}}],["this.loginform",{"_index":693,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.map",{"_index":485,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.map.get(d",{"_index":509,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.map.has(d",{"_index":508,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.mapapiloader.load().then",{"_index":647,"title":{},"body":{"interfaces/Location.html":{}}}],["this.memberdropdown.nativeel",{"_index":723,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.memberform.patchvalue(us",{"_index":725,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.membernotfound",{"_index":724,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["this.newtodo",{"_index":823,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.ngzone.run",{"_index":651,"title":{},"body":{"interfaces/Location.html":{}}}],["this.onchangecallback",{"_index":675,"title":{},"body":{"interfaces/Location.html":{}}}],["this.onchangecallback(v",{"_index":643,"title":{},"body":{"interfaces/Location.html":{}}}],["this.ontouchedcallback",{"_index":672,"title":{},"body":{"interfaces/Location.html":{}}}],["this.parseday(this.current.clon",{"_index":489,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.router.navig",{"_index":700,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":317,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.setcurrentposit",{"_index":646,"title":{},"body":{"interfaces/Location.html":{}}}],["this.sethour",{"_index":483,"title":{},"body":{"interfaces/EventElement.html":{}}}],["this.setsession(r",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.todos.indexof(todo",{"_index":828,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todos.push(this.newtodo",{"_index":825,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todos.splice(index",{"_index":829,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todoservice.addtodo(this.newtodo",{"_index":826,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.todoservice.removetodo(todo",{"_index":830,"title":{},"body":{"components/TodoListComponent.html":{}}}],["this.valu",{"_index":660,"title":{},"body":{"interfaces/Location.html":{}}}],["thursday",{"_index":99,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["time",{"_index":66,"title":{},"body":{"interfaces/ApiEvent.html":{},"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"interfaces/Recurring.html":{}}}],["timepickermodul",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["timepickermodule.forroot",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["titl",{"_index":60,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/ApiTodo.html":{},"interfaces/Recurring.html":{}}}],["tocompar",{"_index":791,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["today",{"_index":442,"title":{},"body":{"interfaces/DateObject.html":{},"interfaces/EventElement.html":{}}}],["todo",{"_index":109,"title":{},"body":{"interfaces/ApiTodo.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/PayloadModel.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"miscellaneous/functions.html":{}}}],["todo(d",{"_index":117,"title":{},"body":{"interfaces/ApiTodo.html":{},"miscellaneous/functions.html":{}}}],["todo(date.tod",{"_index":824,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo(this.date.tod",{"_index":827,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todo.id",{"_index":848,"title":{},"body":{"injectables/TodoListService.html":{}}}],["todo.titl",{"_index":831,"title":{},"body":{"components/TodoListComponent.html":{}}}],["todolistcompon",{"_index":189,"title":{"components/TodoListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["todolistservic",{"_index":397,"title":{"injectables/TodoListService.html":{}},"body":{"modules/DashboardModule.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"overview.html":{}}}],["todoservic",{"_index":811,"title":{},"body":{"components/TodoListComponent.html":{}}}],["token",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["token'",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["tomodel",{"_index":749,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["tomodel(d",{"_index":753,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["top",{"_index":460,"title":{},"body":{"interfaces/EventElement.html":{}}}],["topromis",{"_index":608,"title":{},"body":{"injectables/GroupService.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{}}}],["touch",{"_index":669,"title":{},"body":{"interfaces/Location.html":{}}}],["transform",{"_index":779,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["transform(item",{"_index":784,"title":{},"body":{"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["tree",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["true",{"_index":318,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{}}}],["tuesday",{"_index":862,"title":{},"body":{"interfaces/Week.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"interfaces/ApiUser.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DateObject.html":{},"interfaces/Day.html":{},"interfaces/EventElement.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"injectables/GroupService.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"injectables/NgbDateNativeAdapter.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"injectables/SearchFilterPipe.html":{},"injectables/SearchFilterPipe-1.html":{},"components/TodoListComponent.html":{},"injectables/TodoListService.html":{},"injectables/UserService.html":{},"interfaces/Week.html":{}}}],["undefin",{"_index":656,"title":{},"body":{"interfaces/Location.html":{},"miscellaneous/functions.html":{}}}],["updat",{"_index":845,"title":{},"body":{"injectables/TodoListService.html":{}}}],["updatetodo",{"_index":834,"title":{},"body":{"injectables/TodoListService.html":{}}}],["updatetodo(todo",{"_index":843,"title":{},"body":{"injectables/TodoListService.html":{}}}],["us",{"_index":56,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Day.html":{},"interfaces/Month.html":{},"interfaces/Recurring.html":{}}}],["useclass",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["useexist",{"_index":626,"title":{},"body":{"interfaces/Location.html":{}}}],["usefactori",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["user",{"_index":24,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiCreateUser.html":{},"interfaces/ApiEvent.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiUser.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/PayloadModel.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":728,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["user.nam",{"_index":727,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["user.servic",{"_index":717,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["user/member/member.compon",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.servic",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["userinfo",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["userinfo).map(r",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernam",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["userservic",{"_index":208,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/MemberFormComponent.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["v",{"_index":519,"title":{},"body":{"interfaces/EventElement.html":{},"interfaces/Location.html":{}}}],["v.endtim",{"_index":522,"title":{},"body":{"interfaces/EventElement.html":{}}}],["v.starttim",{"_index":524,"title":{},"body":{"interfaces/EventElement.html":{}}}],["valid",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.email",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.requir",{"_index":695,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":48,"title":{},"body":{"interfaces/ApiEvent.html":{},"injectables/DashboardService.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["value(v",{"_index":642,"title":{},"body":{"interfaces/Location.html":{}}}],["var",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{}}}],["variabl",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifi",{"_index":654,"title":{},"body":{"interfaces/Location.html":{}}}],["view",{"_index":471,"title":{},"body":{"interfaces/EventElement.html":{},"interfaces/Month.html":{},"components/TodoListComponent.html":{}}}],["viewchild",{"_index":576,"title":{},"body":{"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/MemberFormComponent.html":{}}}],["viewchild('groupdropdown",{"_index":583,"title":{},"body":{"components/GroupSelectForm.html":{}}}],["viewchild('memberdropdown",{"_index":719,"title":{},"body":{"components/MemberFormComponent.html":{}}}],["viewchild('search",{"_index":628,"title":{},"body":{"interfaces/Location.html":{}}}],["void",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/EventElement.html":{},"components/GroupSelectForm.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/TodoListComponent.html":{}}}],["want",{"_index":479,"title":{},"body":{"interfaces/EventElement.html":{}}}],["wednesday",{"_index":98,"title":{},"body":{"interfaces/ApiEvent.html":{},"interfaces/Recurring.html":{},"interfaces/Week.html":{}}}],["week",{"_index":52,"title":{"interfaces/Week.html":{}},"body":{"interfaces/ApiEvent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"interfaces/Month.html":{},"components/NotFoundComponent.html":{},"interfaces/Recurring.html":{},"components/TodoListComponent.html":{},"interfaces/Week.html":{},"miscellaneous/enumerations.html":{}}}],["week.model",{"_index":735,"title":{},"body":{"interfaces/Month.html":{}}}],["week/week.compon",{"_index":402,"title":{},"body":{"modules/DashboardModule.html":{}}}],["weekcompon",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EventPopoverComponent.html":{},"components/GroupSelectForm.html":{},"components/LoginComponent.html":{},"components/MemberFormComponent.html":{},"components/NotFoundComponent.html":{},"components/TodoListComponent.html":{},"overview.html":{}}}],["weekday",{"_index":731,"title":{},"body":{"interfaces/Month.html":{},"interfaces/Week.html":{}}}],["whether",{"_index":33,"title":{},"body":{"interfaces/ApiCreateGroup.html":{},"interfaces/ApiGroup.html":{},"interfaces/ApiTodo.html":{},"injectables/AuthService.html":{},"interfaces/DateObject.html":{},"interfaces/Week.html":{}}}],["workout",{"_index":474,"title":{},"body":{"interfaces/EventElement.html":{}}}],["writevalue(valu",{"_index":673,"title":{},"body":{"interfaces/Location.html":{}}}],["xhrbackend",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"miscellaneous/functions.html":{}}}],["year",{"_index":756,"title":{},"body":{"injectables/NgbDateNativeAdapter.html":{}}}],["zone.j",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"interfaces/Location.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiCreateGroup.html":{"url":"interfaces/ApiCreateGroup.html","title":"interface - ApiCreateGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiCreateGroup\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/group.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Description\n                                \n                                \n                                        Members\n                                \n                                \n                                        Name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                    \n                                \n                                \n                                    \n                                        Description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    Description of the group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Members\n                                    \n                                \n                                \n                                    \n                                        Members:     ApiUser[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiUser[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    List of members that belong to the group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:8\n                                        \n                                    \n\n                            \n                                \n                                    Name of the group\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from './user';\nimport { ApiEvent } from './event';\n\nexport interface ApiCreateGroup {\n    /**\n     * Name of the group\n     */\n    Name: string;\n    /**\n     * Description of the group\n     */\n    Description?: string;\n    /**\n     * List of members that belong to the group\n     */\n    Members: ApiUser[];\n}\n\nexport interface ApiGroup extends ApiCreateGroup {\n    /**\n     * Id of the created group\n     */\n    Id: number;\n    /**\n     * Events the belong to the group\n     */\n    Events: ApiEvent[];\n    /**\n     * Whether or not we should show this groups events\n     */\n    ShowEvents?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiCreateUser.html":{"url":"interfaces/ApiCreateUser.html","title":"interface - ApiCreateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiCreateUser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Email\n                                \n                                \n                                        Name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                    \n                                \n                                \n                                    \n                                        Email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:6\n                                        \n                                    \n\n                            \n                                \n                                    Email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:10\n                                        \n                                    \n\n                            \n                                \n                                    Name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiCreateUser {\n    /**\n     * Email\n     */\n    Email: string;\n    /**\n     * Name\n     */\n    Name: string;\n}\n\nexport interface ApiUser extends ApiCreateUser {\n    /**\n     * Id of the user\n     */\n    Id: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiEvent.html":{"url":"interfaces/ApiEvent.html","title":"interface - ApiEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiCreateEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/event.ts:82\n                                        \n                                    \n\n                            \n                                \n                                    Id of the event\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from \"./user\";\n\n/**\n * Notification's can be every *value* minutes, hours, days, or weeks\n */\nexport enum NotificationGranularity {\n    Minutes,\n    Hours,\n    Days,\n    Weeks\n}\n\n/**\n * Api Create to use as a form and send to the server\n */\nexport interface ApiCreateEvent {\n    /**\n     * Title ex) Doctors Appointment\n     */\n    Title: string;\n    /**\n     * Id of the member that made the event\n     */\n    OwnerId: number;\n    /**\n     * Time of day that the event should start\n     */\n    StartTime: string;\n    /**\n     * Time of day that the event should end\n     */\n    EndTime: string;\n    /**\n     * Date of the event (start date)\n     */\n    StartDate: string;\n    /**\n     * End date\n     */\n    EndDate?: string;\n    /** \n     * Either basic location or address\n     */\n    Location?: string;\n    /**\n     * Notes or description of the event\n     */\n    Notes?: string;\n    /**\n     * List of member's who are invited to the event\n     */\n    Members: ApiUser[];\n    /**\n     * How many (minutes/hours/days/weeks) before the event that the user should be notifed\n     */\n    NotificationValue?: number;\n    /**\n     * Notification granularity (minutes/hours/days/weeks)\n     */\n    NotificationGranularity?: NotificationGranularity;\n    /**\n     * group id that this event should belong to, if in a group\n     */\n    GroupId?: number;\n    /**\n     * Color of the event in the form of a hash code (#00000)\n     */\n    Color?: string;\n\n    /**\n     * If it should be hidden on the calendar\n     */\n    Hidden?: boolean;\n\n    Recurring?: Recurring;\n}\n\nexport interface ApiEvent extends ApiCreateEvent {\n    /**\n     * Id of the event\n     */\n    Id: number;\n}\n\nexport interface Recurring {\n    /**\n     * Binary number that maps to days of the week that it should be recurring\n     * ex) 0101101, maps to every monday, wednesday, thursday, saturday\n     */\n    Days: number;\n    RepeatWeekly: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiGroup.html":{"url":"interfaces/ApiGroup.html","title":"interface - ApiGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiGroup\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/group.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiCreateGroup\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Events\n                                \n                                \n                                        Id\n                                \n                                \n                                            Optional\n                                        ShowEvents\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Events\n                                    \n                                \n                                \n                                    \n                                        Events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:27\n                                        \n                                    \n\n                            \n                                \n                                    Events the belong to the group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:23\n                                        \n                                    \n\n                            \n                                \n                                    Id of the created group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ShowEvents\n                                    \n                                \n                                \n                                    \n                                        ShowEvents:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/group.ts:31\n                                        \n                                    \n\n                            \n                                \n                                    Whether or not we should show this groups events\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from './user';\nimport { ApiEvent } from './event';\n\nexport interface ApiCreateGroup {\n    /**\n     * Name of the group\n     */\n    Name: string;\n    /**\n     * Description of the group\n     */\n    Description?: string;\n    /**\n     * List of members that belong to the group\n     */\n    Members: ApiUser[];\n}\n\nexport interface ApiGroup extends ApiCreateGroup {\n    /**\n     * Id of the created group\n     */\n    Id: number;\n    /**\n     * Events the belong to the group\n     */\n    Events: ApiEvent[];\n    /**\n     * Whether or not we should show this groups events\n     */\n    ShowEvents?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiTodo.html":{"url":"interfaces/ApiTodo.html","title":"interface - ApiTodo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiTodo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/todo.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Date\n                                \n                                \n                                            Optional\n                                        Description\n                                \n                                \n                                        Done\n                                \n                                \n                                            Optional\n                                        Id\n                                \n                                \n                                        Title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Date\n                                    \n                                \n                                \n                                    \n                                        Date:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Todos are only displayed on a certain day\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                    \n                                \n                                \n                                    \n                                        Description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    Description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Done\n                                    \n                                \n                                \n                                    \n                                        Done:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    Whether or not this todo is done\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:5\n                                        \n                                    \n\n                            \n                                \n                                    Id of todo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Title\n                                    \n                                \n                                \n                                    \n                                        Title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/todo.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    Title of todo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiTodo {\n    /**\n     * Id of todo\n     */\n    Id?: number;\n    /**\n     * Title of todo\n     */\n    Title: string;\n    /**\n     * Description\n     */\n    Description?: string;\n    /**\n     * Todos are only displayed on a certain day\n     */\n    Date: Date;\n    /**\n     * Whether or not this todo is done\n     */\n    Done: boolean;\n}\n\nexport function Todo(date: Date): ApiTodo {\n    return {\n        Title: \"\",\n        Description: \"\",\n        Done: false,\n        Date: date\n    };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiUser.html":{"url":"interfaces/ApiUser.html","title":"interface - ApiUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiUser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiCreateUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/user.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Id of the user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiCreateUser {\n    /**\n     * Email\n     */\n    Email: string;\n    /**\n     * Name\n     */\n    Name: string;\n}\n\nexport interface ApiUser extends ApiCreateUser {\n    /**\n     * Id of the user\n     */\n    Id: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                app\n            \n\n\n\n\n            \n                selector\n                my-app\n            \n\n            \n                styleUrls\n                app.component.less\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { CoreCacheService } from './services/core-cache.service';\n\n@Component({\n  moduleId: 'app',\n  selector: 'my-app',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.less']\n})\nexport class AppComponent {\n  constructor(private authService: AuthService, private coreCache: CoreCacheService) {}\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nEditEventComponent\n\nEditEventComponent\n\nAppModule -->\n\nEditEventComponent->AppModule\n\n\n\n\n\nComboBoxComponent\n\nComboBoxComponent\n\nAppModule -->\n\nComboBoxComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nLocationInput\n\nLocationInput\n\nAppModule -->\n\nLocationInput->AppModule\n\n\n\n\n\nCreateGroupComponent\n\nCreateGroupComponent\n\nAppModule -->\n\nCreateGroupComponent->AppModule\n\n\n\n\n\nMemberFormComponent\n\nMemberFormComponent\n\nAppModule -->\n\nMemberFormComponent->AppModule\n\n\n\n\n\nGroupSelectForm\n\nGroupSelectForm\n\nAppModule -->\n\nGroupSelectForm->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nCoreCacheService\n\nCoreCacheService\n\nAppModule -->\n\nCoreCacheService->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nEventService\n\nEventService\n\nAppModule -->\n\nEventService->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nAppModule -->\n\nGroupService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                EditEventComponent\n                            \n                            \n                                ComboBoxComponent\n                            \n                            \n                                NotFoundComponent\n                            \n                            \n                                LocationInput\n                            \n                            \n                                CreateGroupComponent\n                            \n                            \n                                MemberFormComponent\n                            \n                            \n                                GroupSelectForm\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CoreCacheService\n                            \n                            \n                                     AuthGuard\n                            \n                            \n                                     AuthService\n                            \n                            \n                                     EventService\n                            \n                            \n                                     SessionService\n                            \n                            \n                                     UserService\n                            \n                            \n                                     GroupService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DashboardModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule, NgbDateAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DlDateTimePickerDateModule } from 'angular-bootstrap-datetimepicker';\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\nimport { APP_ROUTES } from './app.routing';\nimport { TimepickerModule, ModalModule, PopoverModule, CollapseModule } from 'ngx-bootstrap';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { httpFactory } from './services/interceptor';\n\nimport { AppComponent } from './app.component';\nimport { CoreCacheService } from './services/core-cache.service';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './services/auth-guard';\nimport { AuthService } from './services/auth.service';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { RouterModule } from '@angular/router';\nimport { EditEventComponent } from './event/edit-event/edit-event.component';\nimport { EventService } from './event/event.service';\nimport { SessionService } from './services/session.service';\nimport { NgbDateNativeAdapter } from './shared/datepicker-adapter.component';\nimport { ComboBoxComponent } from './shared/combo-box/combo-box.component';\nimport { SearchFilterPipe } from './shared/combo-box/search.pipe';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\nimport { AgmCoreModule } from '@agm/core';\nimport { UserService } from './user/user.service';\nimport { LocationInput } from './shared/location-input/location-input.component';\nimport { GroupService } from './group/group.service';\nimport { CreateGroupComponent } from './group/create-group/create-group.component';\nimport { MemberFormComponent } from './user/member/member.component';\nimport { GroupSelectForm } from './group/group-select-form/group-select-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    EditEventComponent,\n    ComboBoxComponent,\n    SearchFilterPipe,\n    NotFoundComponent,\n    LocationInput,\n    CreateGroupComponent,\n    MemberFormComponent,\n    GroupSelectForm\n  ],\n  imports: [\n    NgbModule.forRoot(),\n    TimepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    PopoverModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    CollapseModule.forRoot(),\n    AgmCoreModule.forRoot({\n      apiKey: \"AIzaSyDUJitlzdDW3SpdwzBzDW5YnTS_I-HeMCs\",\n      libraries: [\"places\"]\n    }),\n    RouterModule.forRoot(APP_ROUTES),\n    DashboardModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DlDateTimePickerDateModule,\n    HttpModule\n  ],\n  providers: [\n    CoreCacheService,\n    AuthGuard,\n    AuthService,\n    EventService,\n    SessionService,\n    UserService,\n    GroupService,\n    {\n      provide: NgbDateAdapter,\n      useClass: NgbDateNativeAdapter\n    },\n    {\n      provide: Http,\n      useFactory: httpFactory,\n      deps: [XHRBackend, RequestOptions]\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-guard.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth-guard.ts:11\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth-guard.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth-guard.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n@Injectable()\n/**\n * Guards each route, allowing a user to only see certain routes if they are logged in\n */\nexport class AuthGuard implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Private\n                                setSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, http: Http, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isAuthenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:62\n                            \n                        \n\n                \n                    \n                            Checks if a current user is authenticated\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(userInfo: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:26\n                            \n                        \n\n                \n                    \n                            Logs a user in on the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfo\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:51\n                            \n                        \n\n                \n                    \n                            Logs user out on the server\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setSession\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSession(authResult: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                            Sets session variable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authResult\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http } from '@angular/http';\nimport { API_ROOT } from '../../constants.module';\nimport { Observable } from 'rxjs';\nimport { CoreCacheService } from './core-cache.service';\nimport { google } from 'googleapis';\n\n@Injectable()\n/**\n * Service for authentication, login, logout, and saving session token\n */\nexport class AuthService {\n\n  constructor(public router: Router, private http: Http, private coreCache: CoreCacheService) {\n    if (this.isAuthenticated()) {\n      this.coreCache.OnAuth();\n    }\n  }\n\n  /**\n   * Logs a user in on the server\n   * @param { email: string, password: string } userInfo \n   */\n  public login(userInfo: { email: string, password: string }): Observable {\n    return this.http.post(API_ROOT + '/login', userInfo).map(res => {\n      res = res.json();\n      this.setSession(res);\n      return res;\n    }, err => {\n        err = err ? err.json().message : 'Username or password incorrect';\n        return Observable.throw(err);\n    });\n  }\n\n  /**\n   * Sets session variable\n   * @param authResult \n   */\n  private setSession(authResult): void {\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('user_id', authResult.user.id);\n    this.coreCache.currentUser = authResult.user;\n    this.coreCache.OnAuth();\n  }\n\n  /**\n   * Logs user out on the server\n   */\n  public logout(): void {\n    // Remove tokens and expiry time from localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user_id');\n    // Go back to the home route\n    this.router.navigate(['login']);\n  }\n\n  /**\n   * Checks if a current user is authenticated\n   */\n  public isAuthenticated(): boolean {\n    // Check whether the current time is past the\n    // access token's expiry time\n    return localStorage.getItem('access_token') != null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-dashboard\n            \n\n            \n                styleUrls\n                dashboard.component.less\n            \n\n\n\n            \n                templateUrl\n                dashboard.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/dashboard.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'mnm-dashboard',\n    templateUrl: 'dashboard.component.html',\n    styleUrls: ['dashboard.component.less']\n})\n\nexport class DashboardComponent {\n    constructor(private router: Router) {}\n}\n\n    \n\n    \n        \n\n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nDashboardModule -->\n\nSidebarComponent->DashboardModule\n\n\n\n\n\nMiniCalendarComponent\n\nMiniCalendarComponent\n\nDashboardModule -->\n\nMiniCalendarComponent->DashboardModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nDashboardModule -->\n\nHeaderComponent->DashboardModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nDashboardModule -->\n\nMonthComponent->DashboardModule\n\n\n\n\n\nDayComponent\n\nDayComponent\n\nDashboardModule -->\n\nDayComponent->DashboardModule\n\n\n\n\n\nWeekComponent\n\nWeekComponent\n\nDashboardModule -->\n\nWeekComponent->DashboardModule\n\n\n\n\n\nEventPopoverComponent\n\nEventPopoverComponent\n\nDashboardModule -->\n\nEventPopoverComponent->DashboardModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nDashboardModule -->\n\nTodoListComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\nTodoListService\n\nTodoListService\n\nDashboardModule -->\n\nTodoListService->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                MiniCalendarComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                MonthComponent\n                            \n                            \n                                DayComponent\n                            \n                            \n                                WeekComponent\n                            \n                            \n                                EventPopoverComponent\n                            \n                            \n                                TodoListComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DashboardService\n                            \n                            \n                                     TodoListService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DashboardComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                DashboardComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\nimport { httpFactory } from '../app/services/interceptor';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { MonthComponent } from './month/month.component';\nimport { WeekComponent } from './week/week.component';\nimport { EventPopoverComponent } from './event-popover/event-popover.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RouterModule } from '@angular/router';\nimport { DASHBOARD_ROUTES } from './dashboard.routing';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MiniCalendarComponent } from './sidebar/minicalendar/minicalendar.component';\nimport { DashboardService } from './dashboard.service';\nimport { DayComponent } from './day/day.component';\nimport { CollapseModule } from 'ngx-bootstrap';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { TodoListService } from './todo-list/todo-list.service';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    SidebarComponent,\n    MiniCalendarComponent,\n    HeaderComponent,\n    MonthComponent,\n    DayComponent,\n    WeekComponent,\n    EventPopoverComponent,\n    TodoListComponent\n  ],\n  imports: [\n    RouterModule.forChild(DASHBOARD_ROUTES),\n    NgbModule.forRoot(),\n    CollapseModule.forRoot(),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule\n  ],\n  exports: [\n      DashboardComponent\n  ],\n  providers: [\n    DashboardService,\n    TodoListService,\n    {\n      provide: Http,\n      useFactory: httpFactory,\n      deps: [XHRBackend, RequestOptions]\n    }],\n  bootstrap: [DashboardComponent]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardService.html":{"url":"injectables/DashboardService.html","title":"injectable - DashboardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DashboardService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/dashboard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/dashboard.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeDate(date: moment.Moment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/dashboard.service.ts:13\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    moment.Moment\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     moment.Moment\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        current:     ReplaySubject\n\n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/dashboard.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class DashboardService {\n    public current: ReplaySubject = new ReplaySubject();\n\n    constructor() {\n        this.changeDate(moment());\n    }\n\n    public changeDate(date: moment.Moment): moment.Moment {\n        this.current.next(date);\n        return date;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateObject.html":{"url":"interfaces/DateObject.html","title":"interface - DateObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateObject\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/date.model.ts\n        \n\n            \n                Description\n            \n            \n                Date object that gets passed around the front end, mostly for display purposes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        current\n                                \n                                \n                                            Optional\n                                        display\n                                \n                                \n                                            Optional\n                                        display1\n                                \n                                \n                                            Optional\n                                        future\n                                \n                                \n                                        moment\n                                \n                                \n                                            Optional\n                                        past\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:19\n                                        \n                                    \n\n                            \n                                \n                                    Current day we are looking at \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:10\n                                        \n                                    \n\n                            \n                                \n                                    Whether or not this date is today \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    Display string for the date \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display1\n                                    \n                                \n                                \n                                    \n                                        display1:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:13\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        future\n                                    \n                                \n                                \n                                    \n                                        future:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:15\n                                        \n                                    \n\n                            \n                                \n                                    if this day is in the next month \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moment\n                                    \n                                \n                                \n                                    \n                                        moment:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:8\n                                        \n                                    \n\n                            \n                                \n                                    moment of the date \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        past\n                                    \n                                \n                                \n                                    \n                                        past:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/date.model.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    If this day is in last month \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment';\n\n/**\n * Date object that gets passed around the front end, mostly for display purposes\n */\nexport interface DateObject {\n    /** moment of the date */\n    moment: moment.Moment;\n    /** Whether or not this date is today */\n    current?: boolean;\n    /** Display string for the date */\n    display?: string;\n    display1?: string;\n    /** if this day is in the next month */\n    future?: boolean;\n    /** If this day is in last month */\n    past?: boolean;\n    /** Current day we are looking at */\n    active?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/day.model.ts\n        \n\n            \n                Description\n            \n            \n                Used to save the day's date object and the day's events\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        events\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:     DateObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DateObject\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/day.model.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        events\n                                    \n                                \n                                \n                                    \n                                        events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/day.model.ts:9\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { DateObject } from \"./date.model\";\nimport { ApiEvent } from \"../../app/models/event\";\n\n/**\n * Used to save the day's date object and the day's events\n */\nexport interface Day {\n    day: DateObject;\n    events: ApiEvent[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventElement.html":{"url":"interfaces/EventElement.html","title":"interface - EventElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventElement\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/day/day.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                                \n                                        height\n                                \n                                \n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     ApiEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/day/day.component.ts:127\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/day/day.component.ts:126\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/day/day.component.ts:125\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { CoreCacheService } from '../../app/services/core-cache.service';\nimport { DateObject, Day } from '../models';\nimport {DATE_FORMAT} from '../../constants.module';\nimport * as moment from 'moment';\nimport { ApiEvent } from '../../app/models/event';\nimport { DashboardService } from '../dashboard.service';\nimport { ApiTodo } from '../../app/models/todo';\n\n@Component({\n    selector: 'mnm-day',\n    templateUrl: 'day.component.html',\n    styleUrls: ['day.component.less']\n})\n\n/**\n * daily view that contains information about events, todos, workouts, and groups.\n */\nexport class DayComponent {\n    public current: moment.Moment;\n    public map: Map;\n    public day: Day;\n    public hours: string[] = [];\n    public eventElements: EventElement[] = [];\n    public loading: boolean = true;\n\n    private diff = 0;\n    private height = 0;\n\n    constructor(private coreCache: CoreCacheService,\n                private dashboardService: DashboardService) {}\n\n    /**\n     * On init of this component, we want to get the date map and subscribe to the current date\n     */\n    ngOnInit(): void {\n        this.loading = true;\n        this.setHours();\n\n        this.coreCache.GetDateMap().then(map => {\n            this.map = map;\n            this.dashboardService.current.subscribe(cur => {\n                this.current = cur;\n                this.parseDay(this.current.clone());\n                this.loading = false;\n            });\n        });\n    }\n\n    /**\n     * parses all the events for a given day and puts them in the proper format to be displayed\n     * @param curr a given day moment\n     */\n    public parseDay(curr: moment.Moment): void {\n        this.eventElements = [];\n        this.diff = 0;\n        this.height = 0;\n        let today = moment().format(DATE_FORMAT);\n        let date = curr.format(DATE_FORMAT);\n\n        let dateValue: DateObject = {\n            current: curr.format(DATE_FORMAT) === today,\n            display: curr.format('dddd, MMMM D'),\n            moment: curr.utc()\n        };\n\n        this.day = {\n            day: dateValue,\n            events: this.map.has(date) ? this.map.get(date) : []\n        };\n\n        this.day.events.forEach(event => {\n            this.eventElements.push({\n                top: this.getStart(event),\n                height: this.getDuration(event),\n                event: event\n            });\n        });\n    }\n\n    /**\n     * calculates the duration of a given event and puts it in terms of pixels in order to display it.\n     * @param v the given event\n     */\n    public getDuration(v) {\n        let end = moment(v.EndDate + \" \" + v.EndTime);\n\n        let start = moment(v.StartDate + \" \" + v.StartTime);\n        if (moment.duration(end.diff(start)).asDays() >= 1) {\n            end = moment(v.StartDate + \" \" + \"24:00:00\");\n        }\n\n        return this.height = moment.duration(end.clone().diff(start)).asHours() * 100;\n    }\n\n    /**\n     * calculates the amount of time between the start of the day and the start of a given event and puts it in terms of pixels in order to display it.\n     * @param v the given event\n     */\n    public getStart(v) {\n        let start = moment(v.StartDate + \" \" + v.StartTime);\n        return this.diff = ((start.hours() + (start.minutes() / 60)) * 100) - this.diff - this.height;\n    }\n\n    /**\n     * creates an array containing the ours in a day in order to display them.\n     */\n    private setHours(): void {\n        this.hours.push(12 + 'am');\n        for (let i = 1; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventPopoverComponent.html":{"url":"components/EventPopoverComponent.html","title":"component - EventPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventPopoverComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/event-popover/event-popover.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-event-popover\n            \n\n            \n                styleUrls\n                event-popover.component.less\n            \n\n\n\n            \n                templateUrl\n                event-popover.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/event-popover/event-popover.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        event\n                    \n                    \n                            \n                            Type:    ApiEvent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/dashboard/event-popover/event-popover.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ApiEvent } from '../../app/models/event';\n\n@Component({\n    selector: 'mnm-event-popover',\n    templateUrl: 'event-popover.component.html',\n    styleUrls: ['event-popover.component.less']\n})\n\nexport class EventPopoverComponent {\n    @Input('event') event: ApiEvent;\n    constructor() {}\n}\n\n    \n\n    \n        {{event.Title}}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{event.Title}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupSelectForm.html":{"url":"components/GroupSelectForm.html","title":"component - GroupSelectForm","body":"\n                   \n\n\n\n\n\n  Components\n  GroupSelectForm\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/group/group-select-form/group-select-form.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                group-select\n            \n\n\n\n\n            \n                templateUrl\n                group-select-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groupDropdown\n                            \n                            \n                                groupNotFound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                groupSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                groups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                added\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/group/group-select-form/group-select-form.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                        empty group Form Group\n\n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groups\n                    \n                    \n                        List of groups that the user can choose from\n\n                            \n                            Type:    ApiGroup[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        added\n                    \n                    \n                        Event emitter for when a new group is selected\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addGroup(group: ApiGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:53\n                            \n                        \n\n                \n                    \n                            Adds a group's value to the group form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    ApiGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        groupSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:38\n                            \n                        \n\n                \n                    \n                            Finds a group by search\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDropdown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupDropdown:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:14\n                            \n                        \n\n                \n                    \n                        Dropdown element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupNotFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupNotFound:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/group/group-select-form/group-select-form.component.ts:31\n                            \n                        \n\n                \n                    \n                        Boolean to display a message if no groups are found/match your search criteria\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ApiGroup } from '../../models/group';\n\n@Component({\n    selector: 'group-select',\n    templateUrl: 'group-select-form.component.html'\n})\n\nexport class GroupSelectForm {\n    /**\n     * Dropdown element\n     */\n    @ViewChild('groupDropdown') groupDropdown: ElementRef;\n    /**\n     * empty group Form Group\n     */\n    @Input('group') groupForm: FormGroup;\n    /**\n     * List of groups that the user can choose from\n     */\n    @Input('groups') groups: ApiGroup[];\n    /**\n     * Event emitter for when a new group is selected\n     */\n    @Output() added: EventEmitter = new EventEmitter();\n\n    /**\n     * Boolean to display a message if no groups are found/match your search criteria\n     */\n    groupNotFound: boolean = false;\n\n    constructor() {}\n\n    /**\n     * Finds a group by search\n     */\n    public groupSearch(): void {\n        let el = this.groupDropdown.nativeElement;\n        if (el.children.length === 0) {\n            this.groupNotFound = true;\n        } else if (el.children.length === 1 && el.children[0].id === \"not-found\") {\n            this.groupNotFound = true;\n        } else {\n            this.groupNotFound = false;\n        }\n    }\n\n    /**\n     * Adds a group's value to the group form\n     * @param {ApiGroup} group \n     */\n    public addGroup(group: ApiGroup): void {\n        this.groupForm.patchValue(group);\n    }\n}\n\n    \n\n    \n        \n        \n        \n            \n                No Groups Found\n            \n            \n                {{group.Name}}\n            \n        \n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            No Groups Found                                        {{group.Name}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupSelectForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/group/group.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Create\n                            \n                            \n                                    Public\n                                Get\n                            \n                            \n                                    Public\n                                GetAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, coreCache: CoreCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/group/group.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    coreCache\n                                                  \n                                                        \n                                                                    CoreCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Create(group: ApiCreateGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group.service.ts:36\n                            \n                        \n\n                \n                    \n                            Attempts to create a new group on the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    ApiCreateGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Get(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group.service.ts:17\n                            \n                        \n\n                \n                    \n                            Gets a group from either server or core cache\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            GetAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/group/group.service.ts:26\n                            \n                        \n\n                \n                    \n                            Gets all groups from the server or core cache\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiGroup, ApiCreateGroup } from '../models/group';\nimport { API_ROOT } from '../../constants.module';\nimport { CoreCacheService } from '../services/core-cache.service';\n\n@Injectable()\n\nexport class GroupService {\n    constructor(private http: Http,\n                private coreCache: CoreCacheService) {}\n\n    /**\n     * Gets a group from either server or core cache\n     * @param {number} id \n     */\n    public Get(id: number): Promise {\n        return this.http.get(API_ROOT + '/group/' + id)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Gets all groups from the server or core cache\n     */\n    public GetAll(): Promise {\n        return this.http.get(API_ROOT + '/group')\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Attempts to create a new group on the server\n     * @param {ApiCreateGroup} group \n     */\n    public Create(group: ApiCreateGroup): Promise {\n        return this.http.post(API_ROOT + '/group', group)\n            .map(res => {\n                let newGroup: ApiGroup = res.json();\n                this.coreCache.AddGroup(newGroup);\n                return newGroup;\n            })\n            .toPromise();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/location-input/location-input.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Address\n                                \n                                \n                                        Latitude\n                                \n                                \n                                        Longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Address\n                                    \n                                \n                                \n                                    \n                                        Address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/shared/location-input/location-input.component.ts:21\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Latitude\n                                    \n                                \n                                \n                                    \n                                        Latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/shared/location-input/location-input.component.ts:22\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Longitude\n                                    \n                                \n                                \n                                    \n                                        Longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/shared/location-input/location-input.component.ts:23\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Component,\n    ElementRef,\n    ViewChild,\n    NgZone,\n    forwardRef,\n    Input,\n    Output,\n    EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { } from 'googlemaps';\nimport { MapsAPILoader } from '@agm/core';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => LocationInput),\n    multi: true\n};\n\nexport interface Location {\n    Address: string;\n    Latitude: number;\n    Longitude: number;\n}\n\n@Component({\n    selector: 'location-input',\n    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],\n    template: `\n        \n        `\n})\nexport class LocationInput implements ControlValueAccessor {\n    @ViewChild('search')\n    public search: ElementRef;\n\n    @Input() disabled: boolean;\n    @Output() change: EventEmitter = new EventEmitter();\n\n    private location: Location;\n    private innerValue: any;\n\n    constructor(\n        private mapApiLoader: MapsAPILoader,\n        private ngZone: NgZone\n    ) {}\n\n    private onTouchedCallback: () => () => {};\n    private onChangeCallback: (_: any) => () => {};\n\n    // get accessor\n    get value(): any {\n        return this.innerValue;\n    };\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n        if (v !== this.innerValue) {\n            this.innerValue = v;\n            this.onChangeCallback(v);\n        }\n\n        // set latitude, longitude and zoom\n        this.change.emit(this.location);\n    }\n\n    ngOnInit(): void {\n        this.location = { Address: \"\", Latitude: 0, Longitude: 0 };\n        this.setCurrentPosition();\n\n        this.mapApiLoader.load().then(() => {\n            let autocomplete = new google.maps.places.Autocomplete(this.search.nativeElement, {\n                types: [\"address\"]\n            });\n            autocomplete.addListener(\"place_changed\", () => {\n                this.ngZone.run(() => {\n                    // get the place result\n                    let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n\n                    // verify result\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n\n                    this.location = {\n                        Address: place.formatted_address,\n                        Latitude: place.geometry.location.lat(),\n                        Longitude: place.geometry.location.lng()\n                    };\n\n                    this.value = place.formatted_address;\n                });\n            });\n        });\n    }\n\n    private setCurrentPosition() {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n            this.location.Latitude = position.coords.latitude;\n            this.location.Longitude = position.coords.longitude;\n            });\n        }\n    }\n\n    // Set touched on blur\n    onBlur() {\n        this.onTouchedCallback();\n    }\n\n    // From ControlValueAccessor interface\n    writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n\n    // From ControlValueAccessor interface\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mnm-login\n            \n\n            \n                styleUrls\n                login.component.less\n            \n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Login\n                            \n                            \n                        \n                    \n                \n                \n                    \nLogin(userInfo: literal type, valid: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                            Attempts to validate credentials and log a user in\nOn success you should be navigated to dashboard\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfo\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        valid\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                        Login form { email: string, password: string }\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'mnm-login',\n    templateUrl: 'login.component.html',\n    styleUrls: ['login.component.less']\n})\n\nexport class LoginComponent {\n    /**\n     * Login form { email: string, password: string }\n     */\n    public loginForm: FormGroup;\n\n    constructor(public router: Router, private authService: AuthService, private fb: FormBuilder) {\n        this.loginForm = this.fb.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required]]\n        });\n    }\n\n    /**\n     * Attempts to validate credentials and log a user in\n     * On success you should be navigated to dashboard\n     * @param { { email: string, password: string } } userInfo \n     * @param {boolean} valid \n     */\n    Login(userInfo: { email: string, password: string }, valid: boolean): void {\n        console.log(userInfo, valid);\n        if (valid) {\n            this.authService.login(userInfo).subscribe(res => {\n                console.log(res);\n                this.router.navigate(['/']);\n            }, err => {\n                console.log(err);\n            });\n        } else {\n            return;\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n                \n                    Email:\n                    \n                        \n                        Email is required\n                    \n                \n                \n                    Password:\n                    \n                        \n                        Password is required\n                    \n                \n                \n                    \n                        Login\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        Email:                                                                    Email is required                                                                        Password:                                                                    Password is required                                                                                                Login                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberFormComponent.html":{"url":"components/MemberFormComponent.html","title":"component - MemberFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MemberFormComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/user/member/member.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                member-form\n            \n\n\n\n\n            \n                templateUrl\n                member.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                memberDropdown\n                            \n                            \n                                memberNotFound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMember\n                            \n                            \n                                    Public\n                                memberSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                member\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                added\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/user/member/member.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        member\n                    \n                    \n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        users\n                    \n                    \n                            \n                            Type:    ApiUser[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        added\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addMember\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addMember(user: ApiUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:32\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    ApiUser\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            memberSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        memberSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:21\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memberDropdown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        memberDropdown:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memberNotFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        memberNotFound:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/member/member.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { ApiUser } from '../../models/user';\n\n@Component({\n    selector: 'member-form',\n    templateUrl: 'member.component.html'\n})\n\nexport class MemberFormComponent {\n    @ViewChild('memberDropdown') memberDropdown: ElementRef;\n    @Input('member') memberForm: FormGroup;\n    @Input('users') users: ApiUser[];\n    @Output() added: EventEmitter = new EventEmitter();\n\n    memberNotFound: boolean = false;\n\n    constructor() {}\n\n    public memberSearch(): void {\n        let el = this.memberDropdown.nativeElement;\n        if (el.children.length === 0) {\n            this.memberNotFound = true;\n        } else if (el.children.length === 1 && el.children[0].id === \"not-found\") {\n            this.memberNotFound = true;\n        } else {\n            this.memberNotFound = false;\n        }\n    }\n\n    public addMember(user: ApiUser): void {\n        this.memberForm.patchValue(user);\n        this.added.emit(user);\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n            Member Not Found\n        \n        \n            {{user.Name}}\n            {{user.Email}}\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Member Not Found                            {{user.Name}}            {{user.Email}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MemberFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Month.html":{"url":"interfaces/Month.html","title":"interface - Month","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Month\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/month.model.ts\n        \n\n            \n                Description\n            \n            \n                Used to save the month's display name, weeks, and weekdays for month view\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        weekdays\n                                \n                                \n                                        weeks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/month.model.ts:8\n                                        \n                                    \n\n                            \n                                \n                                    Display name \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weekdays\n                                    \n                                \n                                \n                                    \n                                        weekdays:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/month.model.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    All the days of the week \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weeks\n                                    \n                                \n                                \n                                    \n                                        weeks:     Week[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Week[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/month.model.ts:10\n                                        \n                                    \n\n                            \n                                \n                                    Week array containing array of days \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Week } from \"./week.model\";\n\n/**\n * Used to save the month's display name, weeks, and weekdays for month view\n */\nexport interface Month {\n    /** Display name */\n    name: string;\n    /** Week array containing array of days */\n    weeks: Week[];\n    /** All the days of the week */\n    weekdays: string[];\n}\n\n/**\n * Display String for each month\n */\nexport const Months: string[] = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'November',\n    'December'\n];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgbDateNativeAdapter.html":{"url":"injectables/NgbDateNativeAdapter.html","title":"injectable - NgbDateNativeAdapter","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NgbDateNativeAdapter\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/datepicker-adapter.component.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromModel\n                            \n                            \n                                toModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromModel\n                            \n                            \n                        \n                    \n                \n                \n                    \nfromModel(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/datepicker-adapter.component.ts:7\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     NgbDateStruct\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toModel\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoModel(date: NgbDateStruct)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/datepicker-adapter.component.ts:11\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    NgbDateStruct\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbDateAdapter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter {\n\n  fromModel(date: Date): NgbDateStruct {\n    return (date && date.getFullYear) ? {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()} : null;\n  }\n\n  toModel(date: NgbDateStruct): Date {\n    return date ? new Date(date.year, date.month - 1, date.day) : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/shared/not-found/not-found.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                not-found\n            \n\n            \n                styleUrls\n                not-found.component.less\n            \n\n\n\n            \n                templateUrl\n                not-found.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n    selector: 'not-found',\n    templateUrl: 'not-found.component.html',\n    styleUrls: ['not-found.component.less']\n})\n\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n            Page was not found\n            Back to Dashboard\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Page was not found            Back to Dashboard            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadModel.html":{"url":"interfaces/PayloadModel.html","title":"interface - PayloadModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadModel\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Events\n                                \n                                \n                                        Groups\n                                \n                                \n                                        Todo\n                                \n                                \n                                        User\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Events\n                                    \n                                \n                                \n                                    \n                                        Events:     ApiEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiEvent[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:18\n                                        \n                                    \n\n                            \n                                \n                                    List of events that current user has access to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Groups\n                                    \n                                \n                                \n                                    \n                                        Groups:     ApiGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiGroup[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:14\n                                        \n                                    \n\n                            \n                                \n                                    List of groups that current user has access to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Todo\n                                    \n                                \n                                \n                                    \n                                        Todo:     ApiTodo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiTodo[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:22\n                                        \n                                    \n\n                            \n                                \n                                    List of todos for current user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        User\n                                    \n                                \n                                \n                                    \n                                        User:     ApiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiUser\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/payload.ts:10\n                                        \n                                    \n\n                            \n                                \n                                    Current user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from './user';\nimport { ApiEvent } from './event';\nimport { ApiGroup } from './group';\nimport { ApiTodo } from './todo';\n\nexport interface PayloadModel {\n    /**\n     * Current user\n     */\n    User: ApiUser;\n    /**\n     * List of groups that current user has access to\n     */\n    Groups: ApiGroup[];\n    /**\n     * List of events that current user has access to\n     */\n    Events: ApiEvent[];\n    /**\n     * List of todos for current user\n     */\n    Todo: ApiTodo[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Recurring.html":{"url":"interfaces/Recurring.html","title":"interface - Recurring","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Recurring\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Days\n                                \n                                \n                                        RepeatWeekly\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Days\n                                    \n                                \n                                \n                                    \n                                        Days:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/event.ts:90\n                                        \n                                    \n\n                            \n                                \n                                    Binary number that maps to days of the week that it should be recurring\nex) 0101101, maps to every monday, wednesday, thursday, saturday\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RepeatWeekly\n                                    \n                                \n                                \n                                    \n                                        RepeatWeekly:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/models/event.ts:91\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiUser } from \"./user\";\n\n/**\n * Notification's can be every *value* minutes, hours, days, or weeks\n */\nexport enum NotificationGranularity {\n    Minutes,\n    Hours,\n    Days,\n    Weeks\n}\n\n/**\n * Api Create to use as a form and send to the server\n */\nexport interface ApiCreateEvent {\n    /**\n     * Title ex) Doctors Appointment\n     */\n    Title: string;\n    /**\n     * Id of the member that made the event\n     */\n    OwnerId: number;\n    /**\n     * Time of day that the event should start\n     */\n    StartTime: string;\n    /**\n     * Time of day that the event should end\n     */\n    EndTime: string;\n    /**\n     * Date of the event (start date)\n     */\n    StartDate: string;\n    /**\n     * End date\n     */\n    EndDate?: string;\n    /** \n     * Either basic location or address\n     */\n    Location?: string;\n    /**\n     * Notes or description of the event\n     */\n    Notes?: string;\n    /**\n     * List of member's who are invited to the event\n     */\n    Members: ApiUser[];\n    /**\n     * How many (minutes/hours/days/weeks) before the event that the user should be notifed\n     */\n    NotificationValue?: number;\n    /**\n     * Notification granularity (minutes/hours/days/weeks)\n     */\n    NotificationGranularity?: NotificationGranularity;\n    /**\n     * group id that this event should belong to, if in a group\n     */\n    GroupId?: number;\n    /**\n     * Color of the event in the form of a hash code (#00000)\n     */\n    Color?: string;\n\n    /**\n     * If it should be hidden on the calendar\n     */\n    Hidden?: boolean;\n\n    Recurring?: Recurring;\n}\n\nexport interface ApiEvent extends ApiCreateEvent {\n    /**\n     * Id of the event\n     */\n    Id: number;\n}\n\nexport interface Recurring {\n    /**\n     * Binary number that maps to days of the week that it should be recurring\n     * ex) 0101101, maps to every monday, wednesday, thursday, saturday\n     */\n    Days: number;\n    RepeatWeekly: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchFilterPipe.html":{"url":"injectables/SearchFilterPipe.html","title":"injectable - SearchFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SearchFilterPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/combo-box/search.pipe.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                filter\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filter(items: Array, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:26\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                List of items to filter\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a string term to compare with every property of the list\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: any, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                object from array\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                term's search\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Injectable } from \"@angular/core\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\n@Injectable()\nexport class SearchFilterPipe implements PipeTransform {\n\n  /**\n   * @param items object from array\n   * @param term term's search\n   */\n  transform(items: any, term: string): any {\n    if (!term || !items) return items;\n\n    return SearchFilterPipe.filter(items, term);\n  }\n\n  /**\n   * \n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   * \n   */\n  static filter(items: Array, term: string): Array {\n\n    const toCompare = term.toLowerCase();\n\n    return items.filter((item: any) => {\n      for (let property in item) {\n        if (item[property] === null) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchFilterPipe-1.html":{"url":"injectables/SearchFilterPipe-1.html","title":"injectable - SearchFilterPipe-1","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SearchFilterPipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/combo-box/search.pipe.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                filter\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filter(items: Array, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:26\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                List of items to filter\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a string term to compare with every property of the list\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: any, term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/combo-box/search.pipe.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                object from array\n\n                                                        \n                                                \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                term's search\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Injectable } from \"@angular/core\";\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\n@Injectable()\nexport class SearchFilterPipe implements PipeTransform {\n\n  /**\n   * @param items object from array\n   * @param term term's search\n   */\n  transform(items: any, term: string): any {\n    if (!term || !items) return items;\n\n    return SearchFilterPipe.filter(items, term);\n  }\n\n  /**\n   * \n   * @param items List of items to filter\n   * @param term  a string term to compare with every property of the list\n   * \n   */\n  static filter(items: Array, term: string): Array {\n\n    const toCompare = term.toLowerCase();\n\n    return items.filter((item: any) => {\n      for (let property in item) {\n        if (item[property] === null) {\n          continue;\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/session.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserId\n                    \n                \n\n                \n                    \n                        getcurrentUserId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/session.service.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class SessionService {\n    get currentUserId(): number {\n        return +(localStorage.getItem('user_id'));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoListComponent.html":{"url":"components/TodoListComponent.html","title":"component - TodoListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TodoListComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/dashboard/todo-list/todo-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                todo-list\n            \n\n            \n                styleUrls\n                todo-list.component.less\n            \n\n\n\n            \n                templateUrl\n                todo-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                newTodo\n                            \n                            \n                                    Public\n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                removeTodo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoService: TodoListService, dashboardService: DashboardService)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/todo-list/todo-list.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    todoService\n                                                  \n                                                        \n                                                                    TodoListService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    dashboardService\n                                                  \n                                                        \n                                                                    DashboardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTodo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:33\n                            \n                        \n\n                \n                    \n                            allows the user to add a todo item to their list\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:43\n                            \n                        \n\n                \n                    \n                            allows the user to remove a given todo item from their list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the given todo item\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        date:     moment.Moment\n\n                    \n                \n                    \n                        \n                            Type :     moment.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newTodo:     ApiTodo\n\n                    \n                \n                    \n                        \n                            Type :     ApiTodo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            todos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        todos:     ApiTodo[]\n\n                    \n                \n                    \n                        \n                            Type :     ApiTodo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ApiTodo, Todo } from '../../app/models/todo';\nimport { TodoListService } from './todo-list.service';\nimport { DashboardService } from '../dashboard.service';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'todo-list',\n    templateUrl: 'todo-list.component.html',\n    styleUrls: ['todo-list.component.less']\n})\n\n/**\n * todo view that allows the user to record daily tasks they'd like to complete\n */\nexport class TodoListComponent {\n    public newTodo: ApiTodo;\n    public date: moment.Moment;\n\n    public todos: ApiTodo[] = [];\n\n    constructor(private todoService: TodoListService,\n                private dashboardService: DashboardService) {\n                    this.dashboardService.current.subscribe(date => {\n                        this.date = date;\n                        this.newTodo = Todo(date.toDate());\n                    });\n                }\n\n    /**\n     * allows the user to add a todo item to their list\n     */\n    addTodo(): void {\n        this.todos.push(this.newTodo);\n        this.todoService.addTodo(this.newTodo);\n        this.newTodo = Todo(this.date.toDate());\n    }\n\n    /**\n     * allows the user to remove a given todo item from their list\n     * @param todo the given todo item\n     */\n    removeTodo(todo: ApiTodo): void {\n        let index = this.todos.indexOf(todo);\n        if (index > -1) {\n            this.todos.splice(index, 1);\n            this.todoService.removeTodo(todo);\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n     0\">\n        \n            \n                \n                    \n                    \n                    \n                    {{todo.Title}}\n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     0\">                                                                                                                    {{todo.Title}}                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'ComboBoxComponent', 'selector': 'combo-box'},{'name': 'CreateGroupComponent', 'selector': 'create-group'},{'name': 'DashboardComponent', 'selector': 'mnm-dashboard'},{'name': 'DayComponent', 'selector': 'mnm-day'},{'name': 'EditEventComponent', 'selector': 'mnm-edit-event'},{'name': 'EventPopoverComponent', 'selector': 'mnm-event-popover'},{'name': 'GroupSelectForm', 'selector': 'group-select'},{'name': 'HeaderComponent', 'selector': 'mnm-header'},{'name': 'LocationInput', 'selector': 'location-input'},{'name': 'LoginComponent', 'selector': 'mnm-login'},{'name': 'MemberFormComponent', 'selector': 'member-form'},{'name': 'MiniCalendarComponent', 'selector': 'mnm-minicalendar'},{'name': 'MonthComponent', 'selector': 'mnm-month'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'SidebarComponent', 'selector': 'mnm-sidebar'},{'name': 'TodoListComponent', 'selector': 'todo-list'},{'name': 'WeekComponent', 'selector': 'mnm-week'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoListService.html":{"url":"injectables/TodoListService.html","title":"injectable - TodoListService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TodoListService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/todo-list/todo-list.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                getTodo\n                            \n                            \n                                getTodos\n                            \n                            \n                                removeTodo\n                            \n                            \n                                updateTodo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/dashboard/todo-list/todo-list.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:18\n                            \n                        \n\n                \n                    \n                            Create a new todo\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTodo(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:48\n                            \n                        \n\n                \n                    \n                            Gets a todo from the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTodos\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTodos()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:57\n                            \n                        \n\n                \n                    \n                            Gets all the todos from the server\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:28\n                            \n                        \n\n                \n                    \n                            Delete a todo on the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTodo(todo: ApiTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/dashboard/todo-list/todo-list.service.ts:38\n                            \n                        \n\n                \n                    \n                            Updates the todo on the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todo\n                                                        \n                                                                    ApiTodo\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiTodo } from '../../app/models/todo';\nimport { API_ROOT } from '../../constants.module';\n\n@Injectable()\n\n/**\n * CRUD+ Service for Todo List\n */\nexport class TodoListService {\n    constructor(private http: Http) {}\n\n    /**\n     * Create a new todo\n     * @param {ApiTodo} todo \n     */\n    addTodo(todo: ApiTodo): Promise {\n        return this.http.post(API_ROOT + '/todo', todo)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Delete a todo on the server\n     * @param todo \n     */\n    removeTodo(todo: ApiTodo): Promise {\n        return this.http.delete(API_ROOT + '/todo/' + todo.Id)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Updates the todo on the server\n     * @param todo\n     */\n    updateTodo(todo: ApiTodo): Promise {\n        return this.http.put(API_ROOT + '/todo/' + todo.Id, todo)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Gets a todo from the server\n     * @param id\n     */\n    getTodo(id: number): Promise {\n        return this.http.get(API_ROOT + '/todo/' + id)\n            .map(res => res.json())\n            .toPromise();\n    }\n\n    /**\n     * Gets all the todos from the server\n     */\n    getTodos(): Promise {\n        return this.http.get(API_ROOT + '/todo')\n            .map(res => res.json())\n            .toPromise();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Create\n                            \n                            \n                                    Public\n                                Get\n                            \n                            \n                                    Public\n                                GetAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Create(user: ApiCreateUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.service.ts:34\n                            \n                        \n\n                \n                    \n                            Attempts to create a new user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    ApiCreateUser\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Get(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.service.ts:24\n                            \n                        \n\n                \n                    \n                            Gets a user from the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            GetAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            Gets all users from the server\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiUser, ApiCreateUser } from '../models/user';\nimport { API_ROOT } from '../../constants.module';\n\n@Injectable()\n\nexport class UserService {\n    constructor(private http: Http) {}\n\n    /**\n     * Gets all users from the server\n     */\n    public GetAll(): Promise {\n        return this.http.get(API_ROOT + '/user')\n                .map(res => res.json())\n                .toPromise();\n    }\n\n    /**\n     * Gets a user from the server\n     * @param {number} id\n     */\n    public Get(id: number): Promise {\n        return this.http.get(API_ROOT + '/user')\n                .map(res => res.json())\n                .toPromise();\n    }\n\n    /**\n     * Attempts to create a new user\n     * @param {ApiCreateUser} user \n     */\n    public Create(user: ApiCreateUser): Promise {\n        return this.http.post(API_ROOT + '/user', user)\n                .map(res => res.json())\n                .toPromise();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Week.html":{"url":"interfaces/Week.html","title":"interface - Week","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Week\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/dashboard/models/week.model.ts\n        \n\n            \n                Description\n            \n            \n                Week model that holds whether this is the current week and all the days of the week\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        current\n                                \n                                \n                                        days\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/week.model.ts:10\n                                        \n                                    \n\n                            \n                                \n                                    Whether this is the current week we are on \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        days\n                                    \n                                \n                                \n                                    \n                                        days:     Day[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Day[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/dashboard/models/week.model.ts:8\n                                        \n                                    \n\n                            \n                                \n                                    Array of day objects \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Day } from './day.model';\n\n/**\n * Week model that holds whether this is the current week and all the days of the week\n */\nexport interface Week {\n    /** Array of day objects */\n    days: Day[];\n    /** Whether this is the current week we are on */\n    current: boolean;\n}\n\n/**\n * Days of the week display strings\n */\nexport const WeekDays: string[] = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.2\n        \n            @angular/animations : ^5.0.0\n        \n            @angular/common : ^5.0.0\n        \n            @angular/compiler : ^5.0.0\n        \n            @angular/compiler-cli : ^5.0.0\n        \n            @angular/core : ^5.0.0\n        \n            @angular/forms : ^5.0.0\n        \n            @angular/http : ^5.0.0\n        \n            @angular/platform-browser : ^5.0.0\n        \n            @angular/platform-browser-dynamic : ^5.0.0\n        \n            @angular/router : ^5.0.0\n        \n            @ng-bootstrap/ng-bootstrap : 1.0.0\n        \n            bootstrap : 4.0.0\n        \n            core-js : ^2.4.1\n        \n            font-awesome : ^4.7.0\n        \n            google : ^2.1.0\n        \n            googleapis : ^27.0.0\n        \n            moment : ^2.20.1\n        \n            ngx-bootstrap : ^2.0.3\n        \n            rxjs : ^5.5.0\n        \n            zone.js : ^0.8.4\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NotificationGranularity   (src/.../event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/event.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationGranularity\n                    \n                \n                    \n                        \n                            Notification's can be every value minutes, hours, days, or weeks\n\n                        \n                    \n                        \n                            \n                                 Minutes\n                            \n                        \n                        \n                            \n                                 Hours\n                            \n                        \n                        \n                            \n                                 Days\n                            \n                        \n                        \n                            \n                                 Weeks\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            httpFactory   (src/.../interceptor.ts)\n                        \n                        \n                            Todo   (src/.../todo.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nhttpFactory(xhrBackend: undefined, requestOptions: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        xhrBackend\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        requestOptions\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/models/todo.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Todo\n                            \n                            \n                        \n                    \n                \n                \n                    \nTodo(date: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMeet and Manage\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_exports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nEditEventComponent\n\nEditEventComponent\n\nAppModule -->\n\nEditEventComponent->AppModule\n\n\n\n\n\nComboBoxComponent\n\nComboBoxComponent\n\nAppModule -->\n\nComboBoxComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nLocationInput\n\nLocationInput\n\nAppModule -->\n\nLocationInput->AppModule\n\n\n\n\n\nCreateGroupComponent\n\nCreateGroupComponent\n\nAppModule -->\n\nCreateGroupComponent->AppModule\n\n\n\n\n\nMemberFormComponent\n\nMemberFormComponent\n\nAppModule -->\n\nMemberFormComponent->AppModule\n\n\n\n\n\nGroupSelectForm\n\nGroupSelectForm\n\nAppModule -->\n\nGroupSelectForm->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nCoreCacheService\n\nCoreCacheService\n\nAppModule -->\n\nCoreCacheService->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nEventService\n\nEventService\n\nAppModule -->\n\nEventService->AppModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nAppModule -->\n\nSessionService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nAppModule -->\n\nGroupService->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nDashboardModule -->\n\nSidebarComponent->DashboardModule\n\n\n\n\n\nMiniCalendarComponent\n\nMiniCalendarComponent\n\nDashboardModule -->\n\nMiniCalendarComponent->DashboardModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nDashboardModule -->\n\nHeaderComponent->DashboardModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nDashboardModule -->\n\nMonthComponent->DashboardModule\n\n\n\n\n\nDayComponent\n\nDayComponent\n\nDashboardModule -->\n\nDayComponent->DashboardModule\n\n\n\n\n\nWeekComponent\n\nWeekComponent\n\nDashboardModule -->\n\nWeekComponent->DashboardModule\n\n\n\n\n\nEventPopoverComponent\n\nEventPopoverComponent\n\nDashboardModule -->\n\nEventPopoverComponent->DashboardModule\n\n\n\n\n\nTodoListComponent\n\nTodoListComponent\n\nDashboardModule -->\n\nTodoListComponent->DashboardModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\nTodoListService\n\nTodoListService\n\nDashboardModule -->\n\nTodoListService->DashboardModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        18 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        15 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
